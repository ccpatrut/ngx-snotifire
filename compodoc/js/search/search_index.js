var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.695,1,0.892]],["body/components/AppComponent.html",[0,0.658,1,0.979,2,1.176,3,0.366,4,0.174,5,0.861,6,1.074,7,0.861,8,0.861,9,0.155,10,0.714,11,0.914,12,1.165,13,0.714,14,1.698,15,1.165,16,1.287,17,1.287,18,1.64,19,0.914,20,1.287,21,0.195,22,0.394,23,1.499,24,1.64,25,1.64,26,0.992,27,2.102,28,2.427,29,1.902,30,1.774,31,2.427,32,1.593,33,1.902,34,1.902,35,1.902,36,1.902,37,1.902,38,1.902,39,1.902,40,1.902,41,1.902,42,2.427,43,1.64,44,1.64,45,1.762,46,1.762,47,2.093,48,1.762,49,0.843,50,1.474,51,1.902,52,1.64,53,1.902,54,1.335,55,1.64,56,1.902,57,2.058,58,2.427,59,1.165,60,0.032,61,1.566,62,0.578,63,0.779,64,1.287,65,1.287,66,1.389,67,1.64,68,1.474,69,1.287,70,1.861,71,1.861,72,1.474,73,1.15,74,1.287,75,1.474,76,1.233,77,1.474,78,1.474,79,1.474,80,1.474,81,1.474,82,1.474,83,1.474,84,1.474,85,1.474,86,1.474,87,1.474,88,1.64,89,1.474,90,0.714,91,0.602,92,1.287,93,1.287,94,1.176,95,1.474,96,1.474,97,1.474,98,1.474,99,1.474,100,1.474,101,1.474,102,1.474,103,1.474,104,1.474,105,1.474,106,1.474,107,0.626,108,0.371,109,2.102,110,0.782,111,0.655,112,0.714,113,0.555,114,0.512,115,0.992,116,0.512,117,0.602,118,0.602,119,1.15,120,0.512,121,1.287,122,0.555,123,0.321,124,0.217,125,1.246,126,0.782,127,0.782,128,0.782,129,2.102,130,1.746,131,1.264,132,2.588,133,1.893,134,0.782,135,0.782,136,0.782,137,0.782,138,0.782,139,0.782,140,1.078,141,0.782,142,1.287,143,0.782,144,2.054,145,0.782,146,1.493,147,0.436,148,0.782,149,1.287,150,1.925,151,1.287,152,1.287,153,1.287,154,1.287,155,0.843,156,1.696,157,0.782,158,0.782,159,1.264,160,1.176,161,1.264,162,0.782,163,0.782,164,0.782,165,1.287,166,0.782,167,0.782,168,1.176,169,1.395,170,0.782,171,0.782,172,0.782,173,0.655,174,0.655,175,0.782,176,0.782,177,0.782,178,0.782,179,0.782,180,0.655,181,0.782,182,0.782,183,0.655,184,0.782,185,0.782,186,0.782,187,0.782,188,0.782,189,1.078,190,0.782,191,1.762,192,0.782,193,0.655,194,0.782,195,0.782,196,2.102,197,2.262,198,2.498,199,0.782,200,0.782,201,0.782,202,1.743,203,1.232,204,1.374,205,0.896,206,1.62,207,0.782,208,0.782,209,1.287,210,1.377,211,1.287,212,1.921,213,0.782,214,2.282,215,1.374,216,0.782,217,0.555,218,0.782,219,1.287,220,1.287,221,1.287,222,0.782,223,0.782,224,1.737,225,1.287,226,0.782,227,1.891,228,1.176,229,0.782,230,1.64,231,1.287,232,0.916,233,0.655,234,0.782,235,0.602,236,0.714,237,0.714,238,0.782,239,0.782,240,0.782,241,1.64,242,1.64,243,1.64,244,1.737,245,0.714,246,0.782,247,1.287,248,0.782,249,0.782,250,1.176,251,1.606,252,0.843,253,1.287,254,1.078,255,1.35,256,1.287,257,1.287,258,1.176,259,1.078,260,0.782,261,1.774,262,1.737,263,1.843,264,1.902,265,1.287,266,1.64,267,1.902,268,0.782,269,0.782,270,0.782,271,0.914,272,1.499,273,0.782,274,0.782,275,0.655,276,0.782,277,0.782,278,1.287,279,1.287,280,0.602,281,0.655,282,0.714,283,0.782,284,2.549,285,1.921,286,1.078,287,0.782,288,0.782,289,0.782,290,0.782,291,0.782,292,0.782,293,0.782,294,0.416,295,0.655,296,0.782,297,1.373,298,1.377,299,2.427,300,3.587,301,2.03,302,1.768,303,1.768,304,1.573,305,2.03,306,2.427,307,2.588,308,2.588,309,2.03,310,2.03,311,3.587,312,1.768,313,2.427,314,3.587,315,2.03,316,2.03,317,1.417,318,2.427,319,1.768,320,3.094,321,2.427,322,2.427,323,2.03,324,2.427,325,1.233,326,2.427,327,2.427,328,1.233,329,3.587,330,1.474,331,2.588,332,3.094,333,3.094,334,3.587,335,3.587,336,3.286,337,4.51,338,3.966,339,1.474,340,1.474,341,1.474,342,1.474,343,1.474,344,1.474,345,2.427,346,2.427,347,3.587,348,2.03,349,1.474,350,1.474,351,2.03,352,2.427,353,4.266,354,1.474,355,2.03,356,1.474,357,1.474,358,1.474,359,2.427,360,1.474,361,1.474,362,2.427,363,1.474,364,1.474,365,1.074,366,1.474,367,1.474,368,1.474,369,1.474,370,1.474,371,1.474,372,0.861,373,0.861,374,2.094,375,0.861,376,0.861,377,0.602,378,0.782,379,0.861,380,0.602,381,0.861,382,0.602,383,0.861,384,0.602,385,0.861,386,0.861,387,0.012,388,0.012]],["title/modules/AppModule.html",[389,2.731,390,2.116]],["body/modules/AppModule.html",[1,1.762,3,0.459,4,0.459,9,0.407,54,1.801,60,0.032,107,0.956,108,0.976,111,1.723,112,1.879,113,1.866,114,1.347,118,2.025,119,1.244,120,1.347,123,0.513,124,0.57,272,1.879,387,0.024,388,0.024,390,4.158,391,2.264,392,2.894,393,3.244,394,3.244,395,3.244,396,3.244,397,3.244,398,3.552,399,3.611,400,2.826,401,1.879,402,3.879,403,4.146,404,4.146,405,4.146,406,4.957,407,4.146,408,4.957,409,4.957,410,3.879,411,4.957,412,4.957,413,3.879,414,3.879,415,4.957,416,3.879,417,4.957,418,3.879,419,4.957,420,3.879,421,3.879,422,4.957,423,3.879,424,4.957,425,3.879,426,4.957,427,4.957,428,3.879,429,2.826,430,3.879,431,3.879]],["title/components/ButtonsComponent.html",[0,0.695,377,1.334]],["body/components/ButtonsComponent.html",[0,1.217,1,1.041,2,2.375,3,0.451,4,0.451,5,2.226,7,2.226,8,2.226,9,0.4,12,1.436,13,1.847,14,2.32,15,1.436,19,1.846,21,0.504,26,2.003,49,1.324,54,1.693,57,1.882,59,1.436,60,0.032,61,1.882,62,0.58,63,0.96,70,1.324,71,1.324,107,0.796,108,0.96,119,1.738,123,0.504,124,0.56,125,1.324,203,1.339,205,1.079,217,1.846,232,1.129,251,2.04,252,1.703,255,1.846,271,1.846,275,2.691,365,3.572,372,2.226,373,2.226,374,3.339,375,2.226,376,2.226,377,2.337,378,2.873,379,2.226,380,1.558,381,2.226,382,1.558,383,2.226,384,1.558,385,2.226,386,2.226,387,0.023,388,0.023,432,1.019,433,3.189,434,4.101,435,4.101,436,3.177,437,3.177,438,4.903,439,3.572,440,2.778,441,4.903,442,2.214,443,3.813,444,3.189,445,2.471,446,2.471,447,2.022,448,2.471,449,3.189,450,3.189,451,4.903]],["title/interfaces/ButtonsConfig.html",[294,0.343,452,2.116]],["body/interfaces/ButtonsConfig.html",[3,0.519,4,0.519,9,0.46,21,0.58,22,0.867,60,0.032,62,0.683,63,1.514,66,1.514,70,1.522,71,1.858,107,0.643,123,0.58,204,2.787,205,0.781,245,2.591,251,2.264,261,2.432,263,2.563,294,0.46,298,2.006,304,3.466,365,3.897,387,0.025,388,0.025,432,0.781,442,2.186,446,2.839,447,2.323,452,3.466,453,1.297,454,3.664,455,2.839,456,3.897,457,2.839]],["title/interfaces/FunctionalConfig.html",[45,1.45,294,0.343]],["body/interfaces/FunctionalConfig.html",[0,0.681,1,0.57,3,0.247,4,0.247,9,0.219,10,1.01,11,0.785,12,1.205,14,0.785,15,0.785,16,1.106,17,1.106,18,1.106,19,0.785,20,1.106,21,0.276,22,0.519,23,1.01,24,1.106,25,1.106,27,2.064,29,1.106,30,1.871,32,0.927,33,1.106,34,1.106,35,1.106,36,1.106,37,1.106,38,1.106,39,1.106,40,1.106,41,1.106,43,1.106,44,1.106,45,1.939,46,1.729,47,2.207,48,1.729,49,0.725,51,1.696,52,1.106,53,1.696,54,1.152,55,1.106,56,1.696,60,0.032,62,0.612,64,1.106,65,1.106,66,1.302,67,1.106,69,1.106,71,1.111,73,1.248,74,1.106,88,1.696,92,1.106,93,1.106,94,1.01,107,0.73,108,0.525,109,2.496,110,1.106,111,0.927,112,1.01,113,0.785,114,0.725,115,1.307,116,0.725,117,0.852,118,0.852,119,0.669,120,0.725,121,1.696,122,0.785,123,0.423,124,0.306,125,1.516,126,1.106,127,1.106,128,1.106,129,2.496,130,1.797,131,0.852,132,2.901,133,1.871,134,1.106,135,1.106,136,1.106,137,1.106,138,1.106,139,1.106,140,1.421,141,1.106,142,2.496,143,1.106,144,2.322,145,1.106,146,1.871,147,0.617,148,1.106,149,1.696,150,2.181,151,1.696,152,1.696,153,1.696,154,1.696,155,1.111,156,1.352,157,1.106,158,1.106,159,1.59,160,1.55,161,1.59,162,1.106,163,1.106,164,1.106,165,1.696,166,1.106,167,1.106,168,1.55,169,1.58,170,1.106,171,1.106,172,1.106,173,0.927,174,0.927,175,1.106,176,1.106,177,1.106,178,1.106,179,1.106,180,0.927,181,1.106,182,1.106,183,0.927,184,1.106,185,1.106,186,1.106,187,1.106,188,1.106,189,1.421,190,1.106,191,2.091,192,1.106,193,0.927,194,1.106,195,1.106,196,2.496,197,2.634,198,2.83,199,1.106,200,1.106,201,1.106,202,2.03,203,1.063,204,1.729,205,0.921,206,0.852,207,1.106,208,1.106,209,1.696,210,1.352,211,1.696,212,2.28,213,1.106,214,2.406,215,1.729,216,1.106,217,0.785,218,1.106,219,1.696,220,1.696,221,1.696,222,1.106,223,1.106,224,1.55,225,1.696,226,1.106,227,1.94,228,1.55,229,1.106,230,2.064,231,1.696,232,0.947,233,0.927,234,1.106,235,0.852,236,1.01,237,1.01,238,1.106,239,1.106,240,1.106,241,2.064,242,2.064,243,2.064,244,1.55,245,1.01,246,1.106,247,1.696,248,1.106,249,1.106,250,1.55,251,1.773,252,1.111,253,1.696,254,1.421,255,1.205,256,1.696,257,1.696,258,1.55,259,1.421,260,1.106,261,1.871,262,2.114,263,2.113,264,2.314,265,1.696,266,2.064,267,1.696,268,1.106,269,1.106,270,1.106,271,1.205,272,1.01,273,1.106,274,1.106,275,0.927,276,1.106,277,1.106,278,1.696,279,1.696,280,0.852,281,0.927,282,1.01,283,1.106,284,1.01,285,1.01,286,0.927,287,1.106,288,1.106,289,1.106,290,1.106,291,1.106,292,1.106,293,1.106,294,0.494,295,0.927,296,2.314,297,1.611,298,1.635,387,0.015,388,0.015,453,0.617]],["title/pipes/KeysPipe.html",[458,1.731,459,1.906]],["body/pipes/KeysPipe.html",[3,0.548,4,0.548,9,0.486,11,1.742,13,2.241,26,1.891,57,1.608,59,1.742,60,0.032,61,2.054,62,0.548,63,1.165,70,1.608,91,2.416,107,0.68,108,1.165,123,0.612,124,0.68,155,1.608,169,1.636,387,0.026,388,0.026,432,0.985,458,3.135,459,3.227,460,2.999,461,3.871,462,5.913,463,3.372,464,4.624,465,4.628,466,4.624,467,4.628,468,4.628,469,2.241,470,4.628]],["title/components/NgxSnotifireComponent.html",[0,0.695,380,1.334]],["body/components/NgxSnotifireComponent.html",[0,0.833,1,0.574,2,1.56,3,0.249,4,0.249,5,1.228,7,1.228,8,1.228,9,0.221,11,1.213,12,1.473,13,1.019,14,1.953,15,0.792,19,1.213,21,0.278,22,0.522,26,1.316,30,1.473,32,1.948,49,0.731,54,1.298,57,2.089,59,1.651,60,0.032,61,1.732,62,0.684,63,1.104,70,1.802,71,1.732,90,1.895,91,1.599,107,0.732,108,0.53,115,2.12,116,1.523,119,1.663,120,1.119,122,0.792,123,0.278,124,0.309,125,1.359,146,2.065,147,1.158,156,1.359,159,1.791,160,1.019,161,1.791,169,1.158,202,1.791,203,0.879,205,0.842,210,1.119,217,1.213,232,0.623,252,1.119,255,1.213,297,1.529,309,1.76,372,1.228,373,1.228,374,2.559,375,1.228,376,1.228,377,0.86,378,2.075,379,1.228,380,1.791,381,1.228,382,0.86,383,1.228,384,0.86,385,1.228,386,1.228,387,0.015,388,0.015,432,1.079,436,2.087,437,2.087,440,1.533,442,2.241,445,1.363,446,1.363,447,1.115,448,1.363,457,2.087,458,2.837,471,5.067,472,5.067,473,1.76,474,3.273,475,3.913,476,3.221,477,3.913,478,3.913,479,3.913,480,3.913,481,4.726,482,3.443,483,2.851,484,3.913,485,3.913,486,4.385,487,3.273,488,3.221,489,2.694,490,3.221,491,2.104,492,3.555,493,2.104,494,4.079,495,2.104,496,2.104,497,2.104,498,3.221,499,2.104,500,3.221,501,3.789,502,2.346,503,2.694,504,1.431,505,3.221,506,3.221,507,2.104,508,3.221,509,3.667,510,2.536,511,2.694,512,2.104,513,2.104,514,5.352,515,5.352,516,2.104,517,2.104,518,2.104,519,3.273,520,2.104,521,2.104,522,2.536,523,2.104,524,2.694,525,2.694,526,2.694,527,1.76,528,1.533,529,1.533,530,2.104,531,2.104,532,2.104,533,1.76,534,2.104,535,2.104,536,3.913,537,2.104,538,3.221,539,3.913,540,3.913,541,3.221,542,3.913,543,2.104,544,3.221,545,3.221,546,2.104,547,2.694,548,4.385,549,2.751,550,2.104,551,2.104,552,2.104,553,2.104,554,2.104,555,3.273,556,3.221,557,2.104,558,2.104,559,2.104,560,2.104,561,3.221,562,3.221,563,2.104,564,2.104,565,2.104,566,2.104,567,2.104,568,2.104,569,2.104,570,4.726,571,2.104,572,2.104,573,1.76,574,3.221]],["title/modules/NgxSnotifireModule.html",[389,2.731,398,1.906]],["body/modules/NgxSnotifireModule.html",[2,1.94,3,0.474,4,0.474,9,0.421,26,1.636,54,1.497,57,1.391,60,0.032,70,1.391,107,0.882,108,1.008,123,0.53,124,0.588,169,1.185,377,2.507,380,2.648,382,2.507,384,2.507,387,0.024,388,0.024,391,2.338,392,2.953,398,3.855,399,3.685,400,2.918,401,1.94,403,4.231,404,3.349,405,3.349,407,4.638,432,0.901,448,2.595,459,3.581,460,2.595,575,3.349,576,3.349,577,3.349,578,3.581,579,5.059,580,4.005,581,5.059,582,5.059,583,5.545,584,4.005,585,5.545,586,5.059,587,3.349]],["title/interfaces/NotificationConfig.html",[48,1.45,294,0.343]],["body/interfaces/NotificationConfig.html",[0,0.687,1,0.576,3,0.25,4,0.25,9,0.222,10,1.022,11,0.795,12,1.216,14,0.795,15,0.795,16,1.119,17,1.119,18,1.119,19,0.795,20,1.119,21,0.279,22,0.523,23,1.022,24,1.119,25,1.119,27,2.079,29,1.119,30,1.879,32,0.938,33,1.119,34,1.119,35,1.119,36,1.119,37,1.119,38,1.119,39,1.119,40,1.119,41,1.119,43,1.119,44,1.119,45,1.742,46,1.742,47,2.217,48,1.951,49,0.733,51,1.712,52,1.119,53,1.712,54,1.161,55,1.119,56,1.712,60,0.032,62,0.56,64,1.119,65,1.119,66,1.307,67,1.119,69,1.119,71,1.122,73,1.257,74,1.119,88,1.712,92,1.119,93,1.119,94,1.022,107,0.733,108,0.531,109,2.51,110,1.119,111,0.938,112,1.022,113,0.795,114,0.733,115,1.319,116,0.733,117,0.862,118,0.862,119,0.677,120,0.733,121,1.712,122,0.795,123,0.427,124,0.31,125,1.526,126,1.119,127,1.119,128,1.119,129,2.51,130,1.804,131,0.862,132,2.911,133,1.879,134,1.119,135,1.119,136,1.119,137,1.119,138,1.119,139,1.119,140,1.434,141,1.119,142,1.712,143,1.119,144,2.189,145,1.119,146,1.476,147,0.625,148,1.119,149,1.712,150,2.189,151,1.712,152,1.712,153,1.712,154,1.712,155,1.122,156,1.362,157,1.119,158,1.119,159,2.04,160,1.564,161,2.04,162,1.119,163,1.119,164,1.119,165,1.712,166,1.119,167,1.119,168,1.564,169,1.586,170,1.119,171,1.119,172,1.119,173,0.938,174,0.938,175,1.119,176,1.119,177,1.119,178,1.119,179,1.119,180,0.938,181,1.119,182,1.119,183,0.938,184,1.119,185,1.119,186,1.119,187,1.119,188,1.119,189,1.434,190,1.119,191,2.103,192,1.119,193,0.938,194,1.119,195,1.119,196,2.51,197,2.647,198,2.84,199,1.119,200,1.119,201,1.119,202,2.04,203,1.071,204,1.742,205,0.925,206,0.862,207,1.119,208,1.119,209,1.712,210,1.362,211,1.712,212,2.292,213,1.119,214,2.418,215,1.742,216,1.119,217,0.795,218,1.119,219,1.712,220,1.712,221,1.712,222,1.119,223,1.119,224,1.564,225,1.712,226,1.119,227,1.946,228,1.564,229,1.119,230,2.079,231,1.712,232,0.956,233,0.938,234,1.119,235,0.862,236,1.022,237,1.022,238,1.119,239,1.119,240,1.119,241,2.079,242,2.079,243,2.079,244,1.564,245,1.022,246,1.119,247,1.712,248,1.119,249,1.119,250,1.564,251,1.782,252,1.122,253,1.712,254,1.434,255,1.216,256,1.712,257,1.712,258,1.564,259,1.434,260,1.119,261,1.879,262,2.127,263,2.122,264,2.329,265,1.712,266,2.079,267,1.712,268,1.119,269,1.119,270,1.119,271,1.216,272,1.022,273,1.119,274,1.119,275,0.938,276,1.119,277,1.119,278,1.712,279,1.712,280,0.862,281,0.938,282,1.022,283,1.119,284,1.022,285,1.022,286,0.938,287,1.119,288,1.119,289,1.119,290,1.119,291,1.119,292,1.119,293,1.119,294,0.497,295,0.938,296,1.119,297,1.53,298,1.644,387,0.015,388,0.015,453,0.625]],["title/interfaces/NotificationDefaults.html",[294,0.343,588,2.379]],["body/interfaces/NotificationDefaults.html",[3,0.532,4,0.532,9,0.472,21,0.594,22,0.881,60,0.032,62,0.768,63,1.588,66,1.131,73,2.079,107,0.798,123,0.594,173,2.836,294,0.472,387,0.026,388,0.026,432,0.8,453,1.33,469,2.631,504,1.996,529,3.273,588,3.957,589,3.758,590,3.52,591,3.93,592,4.543,593,3.52,594,4.493]],["title/interfaces/NotificationFormValue.html",[294,0.343,295,1.45]],["body/interfaces/NotificationFormValue.html",[0,0.687,1,0.576,3,0.25,4,0.25,9,0.222,10,1.022,11,0.795,12,1.216,14,0.795,15,0.795,16,1.119,17,1.119,18,1.119,19,0.795,20,1.119,21,0.279,22,0.523,23,1.022,24,1.119,25,1.119,27,2.079,29,1.119,30,1.879,32,0.938,33,1.119,34,1.119,35,1.119,36,1.119,37,1.119,38,1.119,39,1.119,40,1.119,41,1.119,43,1.119,44,1.119,45,1.742,46,1.742,47,2.531,48,1.742,49,0.733,51,1.712,52,1.119,53,1.712,54,1.161,55,1.119,56,1.712,60,0.032,62,0.56,64,1.119,65,1.119,66,1.307,67,1.119,69,1.119,71,1.122,73,1.257,74,1.119,88,1.712,92,1.119,93,1.119,94,1.022,107,0.733,108,0.531,109,2.51,110,1.119,111,0.938,112,1.022,113,0.795,114,0.733,115,1.795,116,0.733,117,0.862,118,0.862,119,0.677,120,0.733,121,1.712,122,0.795,123,0.427,124,0.31,125,1.526,126,1.119,127,1.119,128,1.119,129,2.51,130,1.804,131,0.862,132,2.911,133,1.879,134,1.119,135,1.119,136,1.119,137,1.119,138,1.119,139,1.119,140,1.434,141,1.119,142,1.712,143,1.119,144,2.189,145,1.119,146,1.476,147,0.625,148,1.119,149,1.712,150,2.189,151,1.712,152,1.712,153,1.712,154,1.712,155,1.122,156,1.734,157,1.119,158,1.119,159,1.602,160,1.564,161,1.602,162,1.119,163,1.119,164,1.119,165,1.712,166,1.119,167,1.119,168,1.564,169,1.586,170,1.119,171,1.119,172,1.119,173,0.938,174,0.938,175,1.119,176,1.119,177,1.119,178,1.119,179,1.119,180,0.938,181,1.119,182,1.119,183,0.938,184,1.119,185,1.119,186,1.119,187,1.119,188,1.119,189,1.434,190,1.119,191,2.103,192,1.119,193,0.938,194,1.119,195,1.119,196,2.51,197,2.647,198,2.84,199,1.119,200,1.119,201,1.119,202,2.04,203,1.071,204,1.742,205,0.925,206,0.862,207,1.119,208,1.119,209,1.712,210,1.362,211,1.712,212,2.292,213,1.119,214,2.418,215,1.742,216,1.119,217,0.795,218,1.119,219,1.712,220,1.712,221,1.712,222,1.119,223,1.119,224,1.564,225,1.712,226,1.119,227,1.946,228,1.564,229,1.119,230,2.079,231,1.712,232,0.956,233,0.938,234,1.119,235,0.862,236,1.022,237,1.022,238,1.119,239,1.119,240,1.119,241,2.079,242,2.079,243,2.079,244,1.564,245,1.022,246,1.119,247,1.712,248,1.119,249,1.119,250,1.564,251,1.782,252,1.122,253,1.712,254,1.434,255,1.216,256,1.712,257,1.712,258,1.564,259,1.434,260,1.119,261,1.879,262,2.127,263,2.122,264,2.329,265,1.712,266,2.079,267,1.712,268,1.119,269,1.119,270,1.119,271,1.216,272,1.022,273,1.119,274,1.119,275,0.938,276,1.119,277,1.119,278,1.712,279,1.712,280,0.862,281,0.938,282,1.022,283,1.119,284,1.022,285,1.022,286,0.938,287,1.119,288,1.119,289,1.119,290,1.119,291,1.119,292,1.119,293,1.119,294,0.497,295,1.434,296,1.119,297,1.363,298,1.644,387,0.015,388,0.015,453,0.625]],["title/interfaces/NotificationGlobalConfig.html",[294,0.343,591,2.116]],["body/interfaces/NotificationGlobalConfig.html",[3,0.411,4,0.411,9,0.365,21,0.46,22,0.748,60,0.032,62,0.699,63,1.54,123,0.46,130,1.603,131,1.885,133,1.737,156,2.051,159,2.413,161,2.255,174,2.452,180,2.452,205,1.138,210,1.917,215,2.452,284,2.86,294,0.365,297,1.613,298,2.051,307,5.118,308,4.939,310,3.859,312,3.362,331,3.859,336,3.362,387,0.022,388,0.022,401,2.235,432,0.619,453,1.028,455,2.252,501,3.577,504,1.544,525,3.859,526,3.859,590,2.252,591,2.99,595,2.906,596,3.475,597,4.615,598,4.615,599,4.615,600,4.615,601,4.021,602,3.859,603,3.362,604,3.859,605,4.616,606,2.693,607,4.616,608,4.615,609,4.615,610,3.859,611,4.615,612,5.519,613,4.616,614,3.859,615,4.615,616,4.615,617,4.615,618,4.615,619,3.859,620,4.615,621,4.615,622,4.615,623,4.615,624,4.615,625,4.615]],["title/classes/NotifireModel.html",[124,0.48,442,1.334]],["body/classes/NotifireModel.html",[3,0.327,4,0.327,9,0.29,21,0.365,22,0.638,26,1.609,30,1.728,49,1.368,57,2.101,59,1.728,60,0.032,61,1.594,62,0.707,63,1.332,66,1.504,70,1.594,71,1.738,73,1.697,90,2.223,91,2.365,107,0.735,116,1.838,122,1.039,123,0.365,124,0.405,125,2.17,130,1.838,133,1.992,150,2.045,155,1.368,169,1.165,205,1.142,210,1.368,227,1.838,259,1.749,263,2.045,297,1.367,298,1.911,317,2.298,378,2.087,387,0.019,388,0.019,432,1.088,442,2.162,456,2.011,457,2.974,483,2.868,494,2.011,504,2.039,510,2.974,511,3.293,519,4.186,522,2.974,529,2.868,547,2.308,593,1.789,626,2.011,627,5.109,628,2.308,629,3.937,630,3.937,631,5.109,632,3.839,633,4.59,634,3.646,635,4.59,636,5.502,637,2.76,638,3.937,639,2.76,640,2.76,641,2.76,642,3.937,643,3.937,644,2.76,645,3.937,646,3.937,647,3.937,648,3.293,649,2.76,650,2.76,651,3.937,652,2.76,653,3.937,654,2.76,655,3.937,656,3.937,657,2.76,658,3.937,659,3.937,660,2.76,661,1.611,662,2.76,663,3.937,664,3.937,665,2.011,666,2.76,667,2.76,668,2.76,669,2.76,670,2.76,671,2.76,672,2.76,673,2.76,674,3.937,675,3.293,676,3.937,677,3.293,678,2.76]],["title/components/PromptComponent.html",[0,0.695,382,1.334]],["body/components/PromptComponent.html",[0,1.139,1,1.015,2,2.335,3,0.44,4,0.44,5,2.169,7,2.169,8,2.169,9,0.39,12,1.399,13,1.799,14,2.306,15,1.399,19,1.815,21,0.492,22,0.782,26,1.97,57,1.968,59,1.399,60,0.032,61,1.859,62,0.571,63,0.935,66,1.214,70,1.291,90,2.335,91,1.97,107,0.786,108,0.935,116,1.291,119,1.882,123,0.492,124,0.546,155,1.675,169,1.1,203,1.317,205,1.009,232,1.584,255,1.815,271,1.815,280,1.97,317,3.511,372,2.169,373,2.169,374,3.307,375,2.169,376,2.169,377,1.518,378,1.97,379,2.169,380,1.518,381,2.169,382,2.315,383,2.169,384,1.518,385,2.169,386,2.169,387,0.023,388,0.023,432,1.046,434,4.033,435,4.033,436,3.124,437,3.124,439,3.513,442,2.187,444,3.107,445,2.408,446,2.408,447,1.97,510,2.408,528,2.707,679,3.107,680,4.822,681,5.353,682,5.353,683,4.822,684,3.716,685,4.822,686,3.716,687,4.822,688,3.716,689,3.716,690,4.822,691,3.716,692,4.822,693,3.513]],["title/interfaces/SnotifireAnimate.html",[294,0.343,694,2.116]],["body/interfaces/SnotifireAnimate.html",[0,1.145,3,0.523,4,0.523,6,3.918,9,0.464,21,0.585,22,0.872,60,0.032,62,0.686,66,1.582,123,0.585,232,1.592,235,1.806,259,1.964,281,2.679,282,2.141,294,0.464,297,1.583,387,0.026,388,0.026,401,2.605,432,0.788,453,1.308,504,1.964,604,3.697,606,3.669,694,3.485,695,2.58,696,3.697,697,4.123,698,4.421,699,4.498,700,3.697,701,4.421,702,4.421,703,4.421,704,4.421,705,4.421,706,5.045,707,5.379]],["title/interfaces/SnotifireConfig.html",[73,1.047,294,0.343]],["body/interfaces/SnotifireConfig.html",[3,0.324,4,0.324,9,0.288,21,0.363,22,0.635,60,0.032,62,0.763,63,1.646,66,1.56,73,1.256,107,0.775,113,1.032,114,0.952,115,2.039,120,1.361,123,0.363,124,0.575,130,1.361,131,2.039,133,1.475,140,2.216,144,2.493,146,2.067,147,1.16,156,1.907,183,2.216,189,2.216,191,2.216,193,2.216,203,1.578,205,1.104,206,1.601,227,1.733,233,1.741,251,2.067,280,2.243,285,2.416,294,0.288,297,1.666,298,2.043,302,2.855,303,2.855,304,2.539,305,3.277,312,2.855,317,2.287,387,0.019,388,0.019,429,2.855,432,0.488,452,3.233,453,0.811,455,1.777,501,2.539,509,3.277,549,2.645,593,1.777,602,3.277,661,2.912,694,3.233,695,1.6,697,3.557,708,4.833,709,4.173,710,3.919,711,3.919,712,3.919,713,4.99,714,4.99,715,3.919,716,4.173,717,3.919,718,3.919,719,3.919,720,4.173,721,3.919,722,3.919,723,3.919,724,3.919,725,3.919,726,3.919,727,3.919,728,3.919,729,3.277,730,3.919,731,3.919,732,3.919,733,2.742,734,2.742,735,2.742,736,2.293]],["title/classes/SnotifireModel.html",[117,1.334,124,0.48]],["body/classes/SnotifireModel.html",[3,0.447,4,0.447,9,0.397,21,0.5,22,0.79,49,1.693,57,2.099,59,1.422,60,0.032,61,1.312,62,0.751,63,1.609,66,1.618,73,1.892,107,0.792,113,1.422,114,1.312,117,1.991,120,1.312,123,0.5,124,0.555,130,2.135,131,2.329,133,2.222,203,1.679,206,1.991,227,2.135,262,2.858,387,0.023,388,0.023,432,1.095,469,2.361,593,2.448,626,2.752,631,5.445,661,3.445,716,4.935,736,3.16,737,3.16,738,3.778,739,3.778,740,3.778,741,4.874,742,3.778,743,3.778,744,3.778,745,3.778]],["title/interfaces/SnotifireNotifications.html",[294,0.343,492,2.116]],["body/interfaces/SnotifireNotifications.html",[3,0.492,4,0.492,9,0.436,21,0.549,22,0.839,60,0.031,62,0.758,63,1.668,107,0.61,123,0.549,294,0.436,387,0.025,388,0.025,432,0.74,442,2.741,447,2.202,453,1.229,492,3.354,603,4.3,695,2.424,746,3.473,747,4.936,748,4.936,749,4.936,750,4.936,751,4.936,752,4.936,753,4.936,754,4.936,755,4.153]],["title/components/ToastComponent.html",[0,0.695,384,1.334]],["body/components/ToastComponent.html",[0,0.825,1,0.566,2,1.542,3,0.245,4,0.245,5,1.209,7,1.209,8,1.209,9,0.218,11,1.199,12,1.459,13,1.004,14,1.943,15,0.78,19,1.199,21,0.274,22,0.516,26,1.301,30,1.459,32,1.932,49,0.72,54,1.287,57,2.084,59,1.199,60,0.032,61,1.511,62,0.586,63,0.801,70,1.937,71,1.999,90,1.877,91,1.584,107,0.689,108,0.522,116,0.72,119,1.505,122,0.78,123,0.274,124,0.304,125,0.72,147,0.942,150,1.584,155,1.721,169,0.613,202,1.777,203,0.869,205,1.096,210,1.346,212,1.877,217,1.199,227,1.106,232,0.613,252,1.106,254,1.414,255,1.199,271,1.199,275,1.414,297,1.409,301,1.733,302,3.42,303,2.319,372,1.209,373,1.209,374,2.539,375,1.209,376,1.209,377,0.847,378,2.489,379,1.209,380,0.847,381,1.209,382,0.847,383,1.209,384,1.777,385,1.209,386,1.209,387,0.015,388,0.015,401,1.004,432,1.077,436,2.063,437,2.063,439,2.319,440,1.51,442,1.777,445,1.343,447,1.099,448,1.343,449,1.733,450,2.662,457,1.343,469,1.004,474,3.242,482,2.319,483,2.824,487,3.242,489,3.242,504,0.92,522,2.512,527,1.733,528,1.51,533,2.662,549,2.627,606,1.209,632,3.242,634,2.824,661,1.209,665,2.319,675,2.662,677,2.662,693,3.169,697,3.042,756,1.733,757,3.183,758,3.876,759,3.926,760,4.35,761,4.35,762,4.955,763,4.35,764,4.35,765,4.35,766,4.35,767,3.183,768,3.183,769,2.072,770,2.072,771,2.072,772,2.072,773,3.183,774,3.183,775,2.072,776,2.072,777,2.072,778,2.072,779,5.326,780,5.326,781,2.072,782,3.183,783,2.072,784,3.183,785,2.072,786,3.183,787,2.072,788,3.183,789,3.183,790,3.183,791,2.072,792,4.35,793,3.876,794,2.072,795,3.183,796,3.183,797,3.183,798,3.183,799,2.072,800,2.072,801,3.183,802,2.072,803,2.072,804,2.072,805,3.183,806,2.072,807,3.183,808,2.072,809,2.072,810,2.072,811,4.955,812,5.576,813,4.955,814,2.072,815,2.072,816,4.35,817,2.072,818,2.072,819,2.072,820,2.072,821,4.35,822,3.183,823,2.072,824,1.733,825,2.072,826,3.183,827,2.072,828,2.072,829,2.072,830,2.072,831,2.072,832,3.183,833,2.072,834,2.072,835,2.072,836,3.183,837,3.876,838,2.072,839,2.072,840,2.072,841,2.072,842,1.733,843,2.072,844,2.072,845,2.072,846,2.072,847,2.072,848,3.876,849,2.072,850,2.072,851,2.072,852,3.183,853,3.183]],["title/interfaces/ToastData.html",[47,1.45,294,0.343]],["body/interfaces/ToastData.html",[0,0.687,1,0.576,3,0.25,4,0.25,9,0.222,10,1.022,11,0.795,12,1.216,14,0.795,15,0.795,16,1.119,17,1.119,18,1.119,19,0.795,20,1.119,21,0.279,22,0.523,23,1.022,24,1.119,25,1.119,27,2.079,29,1.119,30,1.879,32,0.938,33,1.119,34,1.119,35,1.119,36,1.119,37,1.119,38,1.119,39,1.119,40,1.119,41,1.119,43,1.119,44,1.119,45,1.742,46,1.742,47,2.307,48,1.742,49,0.733,51,1.712,52,1.119,53,1.712,54,1.161,55,1.119,56,1.712,60,0.032,62,0.56,64,1.119,65,1.119,66,1.434,67,1.119,69,1.119,71,1.122,73,1.257,74,1.119,88,1.712,92,1.119,93,1.119,94,1.022,107,0.733,108,0.531,109,2.51,110,1.119,111,0.938,112,1.022,113,0.795,114,0.733,115,1.319,116,0.733,117,0.862,118,0.862,119,0.677,120,0.733,121,1.712,122,0.795,123,0.427,124,0.31,125,1.526,126,1.119,127,1.119,128,1.119,129,2.51,130,1.946,131,0.862,132,2.911,133,2.068,134,1.119,135,1.119,136,1.119,137,1.119,138,1.119,139,1.119,140,1.434,141,1.119,142,1.712,143,1.119,144,2.189,145,1.119,146,1.476,147,0.625,148,1.119,149,1.712,150,2.189,151,1.712,152,1.712,153,1.712,154,1.712,155,1.122,156,1.362,157,1.119,158,1.119,159,1.602,160,1.564,161,1.602,162,1.119,163,1.119,164,1.119,165,1.712,166,1.119,167,1.119,168,1.564,169,1.586,170,1.119,171,1.119,172,1.119,173,0.938,174,0.938,175,1.119,176,1.119,177,1.119,178,1.119,179,1.119,180,0.938,181,1.119,182,1.119,183,0.938,184,1.119,185,1.119,186,1.119,187,1.119,188,1.119,189,1.434,190,1.119,191,2.103,192,1.119,193,0.938,194,1.119,195,1.119,196,2.51,197,2.647,198,2.84,199,1.119,200,1.119,201,1.119,202,2.04,203,1.071,204,1.742,205,0.925,206,0.862,207,1.119,208,1.119,209,1.712,210,1.362,211,1.712,212,2.292,213,1.119,214,2.418,215,1.742,216,1.119,217,0.795,218,1.119,219,1.712,220,1.712,221,1.712,222,1.119,223,1.119,224,1.564,225,1.712,226,1.119,227,1.946,228,1.564,229,1.119,230,2.079,231,1.712,232,0.956,233,0.938,234,1.119,235,0.862,236,1.022,237,1.022,238,1.119,239,1.119,240,1.119,241,2.079,242,2.079,243,2.079,244,1.564,245,1.022,246,1.119,247,1.712,248,1.119,249,1.119,250,1.564,251,1.782,252,1.122,253,1.712,254,1.434,255,1.216,256,1.712,257,1.712,258,1.564,259,1.434,260,1.119,261,1.879,262,2.127,263,2.122,264,2.329,265,1.712,266,2.079,267,1.712,268,1.119,269,1.119,270,1.119,271,1.216,272,1.022,273,1.119,274,1.119,275,0.938,276,1.119,277,1.119,278,1.712,279,1.712,280,0.862,281,0.938,282,1.022,283,1.119,284,1.022,285,1.022,286,0.938,287,1.119,288,1.119,289,1.119,290,1.119,291,1.119,292,1.119,293,1.119,294,0.497,295,0.938,296,1.119,297,1.363,298,1.644,387,0.015,388,0.015,453,0.625]],["title/pipes/TruncatePipe.html",[458,1.731,578,1.906]],["body/pipes/TruncatePipe.html",[3,0.488,4,0.488,9,0.433,11,1.553,13,1.998,22,0.669,26,1.685,30,2.217,57,1.952,59,1.553,60,0.032,61,1.952,62,0.665,63,1.038,66,1.482,70,1.433,90,2.496,91,2.406,107,0.606,108,1.038,123,0.546,124,0.606,125,2.045,147,1.221,169,1.221,202,1.685,205,0.735,252,1.952,261,1.553,286,2.289,297,1.126,387,0.024,388,0.024,432,1.049,458,2.98,460,2.673,463,3.005,464,4.31,466,4.31,549,2.187,578,3.008,610,3.45,693,4.095,854,3.45,855,5.621,856,4.125,857,5.154,858,4.125,859,5.154,860,4.125,861,5.621,862,5.154,863,4.125,864,4.125,865,4.125,866,4.125,867,4.125,868,4.125]],["title/interfaces/VisualConfig.html",[46,1.45,294,0.343]],["body/interfaces/VisualConfig.html",[0,0.678,1,0.566,3,0.245,4,0.245,9,0.218,10,1.004,11,0.781,12,1.199,14,0.781,15,0.781,16,1.099,17,1.099,18,1.099,19,0.781,20,1.099,21,0.274,22,0.516,23,1.004,24,1.099,25,1.099,27,2.056,29,1.099,30,1.866,32,0.921,33,1.099,34,1.099,35,1.099,36,1.099,37,1.099,38,1.099,39,1.099,40,1.099,41,1.099,43,1.099,44,1.099,45,1.723,46,1.933,47,2.202,48,1.723,49,0.72,51,1.689,52,1.099,53,1.689,54,1.148,55,1.099,56,1.689,60,0.032,62,0.63,64,1.099,65,1.099,66,1.299,67,1.099,69,1.099,71,1.106,73,1.244,74,1.099,88,1.689,92,1.099,93,1.099,94,1.004,107,0.728,108,0.522,109,2.489,110,1.099,111,0.921,112,1.004,113,0.781,114,0.72,115,1.301,116,0.72,117,0.847,118,0.847,119,0.665,120,0.72,121,1.689,122,0.781,123,0.421,124,0.305,125,1.512,126,1.099,127,1.099,128,1.099,129,2.489,130,1.793,131,0.847,132,2.896,133,1.866,134,1.099,135,1.099,136,1.099,137,1.099,138,1.099,139,1.099,140,1.415,141,1.099,142,1.689,143,1.099,144,2.176,145,1.099,146,1.46,147,0.614,148,1.099,149,2.489,150,2.176,151,2.489,152,2.489,153,2.489,154,2.489,155,1.106,156,1.347,157,1.099,158,1.099,159,1.585,160,1.543,161,1.585,162,1.099,163,1.099,164,1.099,165,1.689,166,1.099,167,1.099,168,1.543,169,1.577,170,1.099,171,1.099,172,1.099,173,0.921,174,0.921,175,1.099,176,1.099,177,1.099,178,1.099,179,1.099,180,0.921,181,1.099,182,1.099,183,0.921,184,1.099,185,1.099,186,1.099,187,1.099,188,1.099,189,1.415,190,1.099,191,2.086,192,1.099,193,0.921,194,1.099,195,1.099,196,2.489,197,2.628,198,2.824,199,1.099,200,1.099,201,1.099,202,2.025,203,1.059,204,1.723,205,0.92,206,0.847,207,1.099,208,1.099,209,1.689,210,1.347,211,1.689,212,2.274,213,1.099,214,2.401,215,1.723,216,1.099,217,0.781,218,1.099,219,1.689,220,1.689,221,1.689,222,1.099,223,1.099,224,1.543,225,1.689,226,1.099,227,1.937,228,1.543,229,1.099,230,2.056,231,1.689,232,0.943,233,0.921,234,1.099,235,0.847,236,1.004,237,1.004,238,1.099,239,1.099,240,1.099,241,2.056,242,2.056,243,2.056,244,1.543,245,1.004,246,1.099,247,1.689,248,1.099,249,1.099,250,1.543,251,1.768,252,1.106,253,1.689,254,1.415,255,1.199,256,1.689,257,1.689,258,1.543,259,1.415,260,1.099,261,1.866,262,2.108,263,2.109,264,2.307,265,1.689,266,2.056,267,1.689,268,1.099,269,1.099,270,1.099,271,1.199,272,1.004,273,1.099,274,1.099,275,0.921,276,1.099,277,1.099,278,1.689,279,1.689,280,0.847,281,0.921,282,1.004,283,1.099,284,1.004,285,1.004,286,0.921,287,1.099,288,1.099,289,1.099,290,1.099,291,1.099,292,1.099,293,1.099,294,0.493,295,0.921,296,1.099,297,1.354,298,2.066,387,0.015,388,0.015,453,0.614]],["title/changelog.html",[869,1.998,870,1.998,871,2.742]],["body/changelog.html",[60,0.028,233,2.283,387,0.028,388,0.028,872,5.139,873,5.139,874,5.139,875,5.139,876,5.139,877,5.139]],["title/coverage.html",[878,3.701]],["body/coverage.html",[0,1.212,1,0.924,9,0.355,10,2.839,45,1.503,46,1.503,47,1.503,48,1.503,54,1.002,60,0.032,62,0.401,73,1.085,117,1.383,118,1.383,124,0.666,205,0.603,210,1.176,286,1.503,294,0.659,295,1.503,319,2.466,355,5.088,377,1.383,380,1.383,382,1.383,384,1.383,387,0.022,388,0.022,432,1.175,433,2.831,442,1.383,452,2.193,454,2.831,455,3.313,456,4.148,458,2.404,459,1.975,461,2.831,471,2.831,472,2.831,473,2.831,492,2.193,549,3.432,578,1.975,588,2.466,589,2.831,591,2.193,595,2.831,627,2.831,628,2.831,679,2.831,694,2.193,695,2.984,696,2.831,737,2.831,746,2.831,756,2.831,854,2.831,878,2.831,879,3.384,880,3.384,881,3.384,882,3.384,883,2.831,884,3.384,885,5.113,886,4.534,887,3.384,888,3.384,889,2.831,890,2.831,891,2.831,892,5.861,893,2.831,894,2.831,895,2.831,896,3.384,897,3.384,898,3.384,899,2.831,900,2.831,901,6.162,902,3.384,903,3.384,904,3.384,905,3.384,906,3.384,907,3.384,908,6.226,909,3.384,910,2.831,911,3.384,912,3.384,913,3.792,914,4.276,915,4.276,916,4.276,917,2.831,918,2.831,919,2.831,920,3.792,921,3.384,922,3.384,923,5.113,924,3.384,925,2.831,926,3.792,927,2.831,928,3.792,929,3.384,930,3.384]],["title/dependencies.html",[392,2.287,931,2.293]],["body/dependencies.html",[60,0.032,108,1.187,111,2.095,113,2.105,114,1.942,122,1.776,387,0.027,388,0.027,392,2.753,587,3.944,932,4.716,933,6.496,934,4.716,935,5.592,936,4.716,937,4.716,938,4.716,939,4.716,940,4.716,941,4.716,942,4.716,943,4.716,944,4.716,945,4.716,946,4.716,947,4.716,948,4.716,949,4.716]],["title/miscellaneous/enumerations.html",[950,1.454,951,3.277]],["body/miscellaneous/enumerations.html",[3,0.609,21,0.545,60,0.032,91,2.735,115,2.104,116,1.788,214,2.493,224,2.493,244,2.493,271,1.938,304,3.336,315,4.306,316,4.306,317,3.005,387,0.024,388,0.024,432,1.001,573,4.306,603,3,613,4.306,648,4.306,661,3.005,695,3.005,747,3.444,748,3.444,749,3.444,750,3.444,751,3.444,752,3.444,753,3.444,754,3.444,950,2.183,951,3.444,952,5.149,953,5.149,954,5.149,955,4.118,956,4.118,957,4.118,958,4.118,959,4.118,960,4.118,961,4.118,962,4.118,963,4.118,964,4.118,965,4.118,966,4.118,967,4.118,968,4.118,969,4.118,970,4.118,971,4.118,972,4.118,973,5.149,974,4.118]],["title/miscellaneous/functions.html",[950,1.454,975,3.277]],["body/miscellaneous/functions.html",[21,0.558,59,2.234,60,0.03,61,2.119,62,0.702,63,1.494,66,1.494,70,1.815,94,2.042,205,1.011,232,1.248,252,1.465,297,1.427,298,1.815,387,0.025,388,0.025,432,1.011,463,3.072,469,2.749,503,3.527,504,2.636,634,3.072,729,3.527,889,3.527,890,4.37,891,4.37,893,3.527,894,4.37,895,4.37,916,3.527,917,4.37,918,4.37,919,4.748,950,2.236,975,3.527,976,5.677,977,4.217,978,4.217,979,4.217,980,4.217,981,4.217,982,4.217,983,4.217,984,4.217,985,4.217,986,4.217,987,4.217,988,4.217,989,5.934,990,5.934,991,6.215,992,4.217,993,4.217,994,4.217,995,5.225,996,4.217,997,4.217,998,4.217,999,4.217]],["title/index.html",[21,0.363,869,1.998,870,1.998]],["body/index.html",[6,3.449,23,2.293,60,0.027,119,1.518,120,1.947,144,1.934,146,1.783,156,1.645,203,1.293,205,0.843,227,1.645,235,1.934,323,4.687,387,0.027,388,0.027,482,3.449,501,3.068,502,4.083,524,3.96,601,3.449,605,3.96,606,2.763,619,3.96,699,3.96,720,4.687,1000,4.735,1001,4.735,1002,4.735,1003,4.735,1004,4.735,1005,3.96,1006,3.96,1007,4.735,1008,5.604,1009,4.735,1010,4.735,1011,4.735,1012,4.735,1013,3.96,1014,3.96,1015,4.735,1016,3.96,1017,3.96,1018,4.735,1019,4.735,1020,4.735]],["title/license.html",[869,1.998,870,1.998,1021,1.998]],["body/license.html",[4,0.659,9,0.534,57,0.627,60,0.017,61,1.233,107,0.265,124,0.265,130,0.627,147,0.534,206,0.738,215,0.802,217,0.68,235,0.738,236,0.874,237,3.072,258,0.874,261,1.52,319,2.586,325,2.969,328,1.51,336,2.083,348,4.724,351,1.51,387,0.014,388,0.014,401,0.874,429,1.315,453,0.534,469,2.266,502,1.315,504,0.802,510,1.17,522,1.853,555,1.51,590,1.17,601,1.315,607,3.376,614,3.376,700,2.969,759,1.51,842,1.51,883,1.51,1006,1.51,1013,1.51,1014,4.378,1016,1.51,1017,4.485,1021,4.621,1022,3.376,1023,2.969,1024,2.391,1025,1.805,1026,1.805,1027,1.805,1028,5.648,1029,4.037,1030,4.4,1031,1.805,1032,5.785,1033,5.363,1034,5.084,1035,1.805,1036,1.805,1037,1.805,1038,1.805,1039,5.363,1040,5.566,1041,4.68,1042,5.363,1043,2.859,1044,1.805,1045,4.4,1046,1.805,1047,1.805,1048,1.805,1049,4.037,1050,5.235,1051,2.859,1052,2.859,1053,1.805,1054,3.55,1055,2.859,1056,2.859,1057,1.805,1058,5.941,1059,4.037,1060,2.859,1061,4.68,1062,1.805,1063,2.859,1064,1.805,1065,1.805,1066,1.805,1067,1.805,1068,1.805,1069,1.805,1070,3.55,1071,1.805,1072,3.55,1073,2.859,1074,1.805,1075,1.805,1076,4.68,1077,4.037,1078,2.859,1079,3.55,1080,3.55,1081,1.805,1082,1.805,1083,1.805,1084,1.805,1085,1.805,1086,2.859,1087,1.805,1088,1.805,1089,3.55,1090,2.859,1091,1.805,1092,1.805,1093,5.235,1094,2.859,1095,1.805,1096,4.4,1097,2.859,1098,1.805,1099,5.941,1100,5.983,1101,1.805,1102,1.805,1103,1.805,1104,1.805,1105,1.805,1106,1.805,1107,1.805,1108,2.859,1109,2.859,1110,1.805,1111,1.805,1112,1.805,1113,1.805,1114,1.805,1115,4.037,1116,4.4,1117,1.805,1118,2.859,1119,4.037,1120,2.859,1121,1.805,1122,4.4,1123,2.859,1124,1.805,1125,1.805,1126,3.55,1127,1.805,1128,1.805,1129,1.805,1130,1.805,1131,2.859,1132,1.805,1133,1.805,1134,1.805,1135,3.55,1136,1.805,1137,1.805,1138,3.55,1139,1.805,1140,1.805,1141,1.805,1142,4.037,1143,5.363,1144,1.805,1145,1.805,1146,2.859,1147,5.084,1148,3.55,1149,2.859,1150,2.859,1151,2.859,1152,2.859,1153,3.55,1154,2.859,1155,3.55,1156,2.859,1157,2.859,1158,2.859,1159,2.859,1160,1.805,1161,2.859,1162,1.805,1163,1.805,1164,4.4,1165,4.903,1166,3.55,1167,2.859,1168,1.805,1169,1.805,1170,2.859,1171,2.859,1172,1.805,1173,1.805,1174,3.55,1175,2.859,1176,1.805,1177,1.805,1178,1.805,1179,3.55,1180,1.805,1181,1.805,1182,1.805,1183,2.859,1184,2.859,1185,1.805,1186,1.805,1187,1.805,1188,1.805,1189,1.805,1190,1.805,1191,1.805,1192,2.859,1193,1.805,1194,1.805,1195,1.805,1196,1.805,1197,1.805,1198,1.805,1199,1.805,1200,4.4,1201,1.805,1202,3.55,1203,1.805,1204,1.805,1205,1.805,1206,1.805,1207,1.805,1208,1.805,1209,5.084,1210,1.805,1211,1.805,1212,1.805,1213,1.805,1214,1.805,1215,4.037,1216,2.859,1217,4.037,1218,1.805,1219,1.805,1220,1.805,1221,1.805,1222,1.805,1223,3.55,1224,1.805,1225,1.805,1226,2.859,1227,2.859,1228,1.805,1229,1.805,1230,1.805,1231,1.805,1232,2.859,1233,2.859,1234,1.805,1235,1.805,1236,4.4,1237,1.805,1238,1.805,1239,1.805,1240,1.805,1241,1.805,1242,3.55,1243,3.55,1244,1.805,1245,1.805,1246,1.805,1247,1.805,1248,1.805,1249,1.805,1250,1.805,1251,1.805,1252,1.805,1253,1.805,1254,2.859,1255,1.805,1256,1.805,1257,2.859,1258,1.805,1259,1.805,1260,4.037,1261,1.805,1262,1.805,1263,1.805,1264,1.805,1265,1.805,1266,1.805,1267,4.037,1268,3.55,1269,3.55,1270,3.55,1271,2.859,1272,2.859,1273,3.55,1274,2.859,1275,2.859,1276,2.859,1277,2.859,1278,1.805,1279,1.805,1280,1.805,1281,1.805,1282,1.805,1283,1.805,1284,1.805,1285,1.805,1286,2.859,1287,1.805,1288,1.805,1289,1.805,1290,1.805,1291,4.4,1292,1.805,1293,1.805,1294,1.805,1295,1.805,1296,1.805,1297,1.805,1298,1.805,1299,1.805,1300,4.4,1301,1.805,1302,1.805,1303,1.805,1304,1.805,1305,1.805,1306,1.805,1307,1.805,1308,1.805,1309,1.805,1310,1.805,1311,1.805,1312,1.805,1313,1.805,1314,1.805,1315,1.805,1316,1.805,1317,1.805,1318,3.55,1319,1.805,1320,1.805,1321,1.805,1322,1.51,1323,1.805,1324,2.859,1325,1.805,1326,1.805,1327,1.805,1328,1.805,1329,1.805,1330,1.805,1331,1.805,1332,1.805,1333,1.805,1334,1.805,1335,1.805,1336,1.805,1337,1.805,1338,1.805,1339,1.805,1340,2.859,1341,1.805,1342,1.805,1343,1.805,1344,2.859,1345,2.859,1346,1.805,1347,1.805,1348,1.805,1349,1.805,1350,1.805,1351,1.805,1352,1.805,1353,1.805,1354,1.805,1355,1.805,1356,1.805,1357,1.805,1358,1.805,1359,1.805,1360,1.805,1361,1.805,1362,1.805,1363,1.805,1364,1.805,1365,1.805,1366,1.805,1367,1.805]],["title/modules.html",[391,2.583]],["body/modules.html",[60,0.028,76,4.893,114,2.032,387,0.028,388,0.028,390,3.302,391,2.975,398,2.975,1322,4.893,1368,5.85]],["title/overview.html",[1369,3.701]],["body/overview.html",[1,1.731,2,2.103,54,1.702,60,0.031,147,1.285,254,2.555,377,2.35,380,2.59,382,2.35,384,2.35,387,0.025,388,0.025,390,4.179,391,2.535,392,3.106,393,3.632,394,3.632,395,3.632,396,3.632,397,3.632,398,3.867,399,3.876,400,3.164,401,2.103,453,1.285,459,3.357,460,2.814,575,3.632,576,3.632,577,3.632,578,3.357,626,3.164,824,3.632,910,3.632,1369,3.632,1370,4.343]],["title/properties.html",[22,0.635,931,2.293]],["body/properties.html",[22,0.83,60,0.03,387,0.028,388,0.028,1021,3.728,1022,4.28,1023,4.28,1024,4.28,1371,5.117,1372,5.117]],["title/miscellaneous/variables.html",[950,1.454,1373,3.277]],["body/miscellaneous/variables.html",[21,0.454,60,0.032,62,0.77,90,2.909,91,2.404,118,1.87,140,1.524,144,2.244,146,1.292,147,1.016,150,2.55,155,2.146,156,1.192,159,1.402,161,1.402,168,2.66,173,1.524,174,1.524,180,1.524,183,1.524,189,2.033,191,2.439,193,2.033,203,0.937,204,2.439,205,0.611,228,1.662,232,1.016,250,1.662,251,1.723,261,2.068,263,2.244,280,1.402,281,2.033,387,0.022,388,0.022,432,0.917,469,2.66,494,3.751,549,2.729,590,2.224,592,4.306,606,2.003,665,3.334,697,2.224,706,2.87,708,2.87,709,2.87,899,2.87,900,3.827,913,2.87,914,4.921,915,4.921,920,2.87,925,2.87,926,4.593,927,2.87,928,2.87,950,1.819,1005,3.827,1373,2.87,1374,4.576,1375,5.492,1376,3.432,1377,3.432,1378,3.432,1379,5.148,1380,5.148,1381,4.576,1382,5.148,1383,3.432,1384,3.432,1385,3.432,1386,3.432,1387,3.432,1388,3.432,1389,4.576,1390,4.576,1391,3.432,1392,4.576,1393,4.576,1394,4.576,1395,4.576,1396,4.576]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":549,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":711,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["0.11.4",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":712,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["1.0.1",{"_index":1371,"title":{},"body":{"properties.html":{}}}],["1.1.19",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":610,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"pipes/TruncatePipe.html":{}}}],["10/17",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["10rem",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1370,"title":{},"body":{"overview.html":{}}}],["14.2.0",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["14.2.7",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["15/16",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1500",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["16",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1rem",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"overview.html":{}}}],["2.0",{"_index":1024,"title":{},"body":{"license.html":{},"properties.html":{}}}],["2.0unless",{"_index":1362,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["2004",{"_index":1026,"title":{},"body":{"license.html":{}}}],["2018",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":605,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{}}}],["3.2rem",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["3/4",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["3rem",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":543,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["4.2.10",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["400",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["40rem",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["44/52",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":824,"title":{},"body":{"components/ToastComponent.html":{},"overview.html":{}}}],["5/5",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":883,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["5000",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["7.5.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["8",{"_index":1005,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["84",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1037,"title":{},"body":{"license.html":{}}}],["93",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["9673",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["__booleans",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["__length,&__ui",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["ability",{"_index":1007,"title":{},"body":{"index.html":{}}}],["above",{"_index":1246,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1321,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1318,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["act",{"_index":1328,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1047,"title":{},"body":{"license.html":{}}}],["action",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["action(this",{"_index":673,"title":{},"body":{"classes/NotifireModel.html":{}}}],["actions",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["activate",{"_index":719,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["acts",{"_index":1298,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["add",{"_index":1233,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":1235,"title":{},"body":{"license.html":{}}}],["addicon",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["addicon(iconname",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["additional",{"_index":1236,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1117,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1316,"title":{},"body":{"license.html":{}}}],["affects",{"_index":602,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{}}}],["afterviewinit",{"_index":475,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["against",{"_index":1184,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1331,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1270,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1251,"title":{},"body":{"license.html":{}}}],["align",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["alleging",{"_index":1189,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1180,"title":{},"body":{"license.html":{}}}],["along",{"_index":1224,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1234,"title":{},"body":{"license.html":{}}}],["amet",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["and/or",{"_index":1325,"title":{},"body":{"license.html":{}}}],["angular",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":587,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/material",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["angular/material/input",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/router",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["animate.css",{"_index":701,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["animate.interface",{"_index":734,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["animate.interface.ts",{"_index":696,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"coverage.html":{}}}],["animation",{"_index":697,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["animationframe",{"_index":758,"title":{},"body":{"components/ToastComponent.html":{}}}],["animations",{"_index":699,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["annotations",{"_index":1105,"title":{},"body":{"license.html":{}}}],["answer",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apache",{"_index":1022,"title":{},"body":{"license.html":{},"properties.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1229,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1097,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1268,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1173,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1340,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":390,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1348,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1284,"title":{},"body":{"license.html":{}}}],["archives.copyright",{"_index":1356,"title":{},"body":{"license.html":{}}}],["args",{"_index":855,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args.length",{"_index":862,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args[1",{"_index":867,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["argument.decorator.ts",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arising",{"_index":1305,"title":{},"body":{"license.html":{}}}],["array",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["artemsky",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["asserted",{"_index":1337,"title":{},"body":{"license.html":{}}}],["assets/${svg}.svg",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["associated",{"_index":1289,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1287,"title":{},"body":{"license.html":{}}}],["async",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["attach",{"_index":1341,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1095,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1215,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1043,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1089,"title":{},"body":{"license.html":{}}}],["available",{"_index":1091,"title":{},"body":{"license.html":{}}}],["b",{"_index":1205,"title":{},"body":{"license.html":{}}}],["backdrop",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["base",{"_index":774,"title":{},"body":{"components/ToastComponent.html":{}}}],["based",{"_index":1101,"title":{},"body":{"license.html":{}}}],["baseline",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["basis",{"_index":1272,"title":{},"body":{"license.html":{}}}],["before",{"_index":647,"title":{},"body":{"classes/NotifireModel.html":{}}}],["before_hide",{"_index":971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["before_show",{"_index":965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforedestroy",{"_index":788,"title":{},"body":{"components/ToastComponent.html":{}}}],["beforehide",{"_index":972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforeshow",{"_index":966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["behalf",{"_index":1122,"title":{},"body":{"license.html":{}}}],["below",{"_index":1098,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1069,"title":{},"body":{"license.html":{}}}],["beta",{"_index":1372,"title":{},"body":{"properties.html":{}}}],["between",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["bind",{"_index":1114,"title":{},"body":{"license.html":{}}}],["block",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["blocksizea",{"_index":477,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["blocksizeb",{"_index":478,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["body",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["bodymaxlength",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":1342,"title":{},"body":{"license.html":{}}}],["bold",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["boydmaxlength",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["brackets",{"_index":1345,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{}}}],["button'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["button.text",{"_index":451,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["buttons.component.html",{"_index":438,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons__clear",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["buttons__html",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["buttonscomponent",{"_index":377,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonsconfig",{"_index":452,"title":{"interfaces/ButtonsConfig.html":{}},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["c",{"_index":1212,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":845,"title":{},"body":{"components/ToastComponent.html":{}}}],["callbacks",{"_index":1018,"title":{},"body":{"index.html":{}}}],["called",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["calls",{"_index":609,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["can't",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["cancel",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelanimationframe(this.animationframe",{"_index":851,"title":{},"body":{"components/ToastComponent.html":{}}}],["carry",{"_index":1207,"title":{},"body":{"license.html":{}}}],["case",{"_index":572,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["cause",{"_index":1056,"title":{},"body":{"license.html":{}}}],["ccpatrut",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["center_bottom",{"_index":964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_center",{"_index":963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_top",{"_index":962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["centerbottom",{"_index":747,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centercenter",{"_index":748,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centertop",{"_index":749,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["change",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{}}}],["changed",{"_index":1211,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":434,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy",{"_index":444,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":435,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changelog",{"_index":871,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":508,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["character",{"_index":1304,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1155,"title":{},"body":{"license.html":{}}}],["check",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choose",{"_index":1319,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1186,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1175,"title":{},"body":{"license.html":{}}}],["class",{"_index":124,"title":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":626,"title":{},"body":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{},"overview.html":{}}}],["clear",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["click",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"miscellaneous/enumerations.html":{}}}],["close",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["closeonclick",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule",{"_index":575,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_declarations",{"_index":576,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_exports",{"_index":577,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["code",{"_index":1079,"title":{},"body":{"license.html":{}}}],["column",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["combination",{"_index":1181,"title":{},"body":{"license.html":{}}}],["come",{"_index":616,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["comes",{"_index":623,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["comment",{"_index":1349,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1313,"title":{},"body":{"license.html":{}}}],["common",{"_index":842,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["commonmodule",{"_index":586,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["communication",{"_index":1126,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1085,"title":{},"body":{"license.html":{}}}],["completely",{"_index":782,"title":{},"body":{"components/ToastComponent.html":{}}}],["compliance",{"_index":1359,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1240,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc/compodoc",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["component_template",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/buttons/buttons",{"_index":733,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["components/toast/notifire",{"_index":755,"title":{},"body":{"interfaces/SnotifireNotifications.html":{}}}],["computer",{"_index":1310,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1028,"title":{},"body":{"license.html":{}}}],["config",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["config.interface",{"_index":593,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["config.interface.ts",{"_index":455,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["configuration",{"_index":590,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["consequential",{"_index":1303,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1327,"title":{},"body":{"license.html":{}}}],["console.log('clicked",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log('said",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log('toast",{"_index":804,"title":{},"body":{"components/ToastComponent.html":{}}}],["console.log(result",{"_index":567,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["console.log(toast.value",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["conspicuously",{"_index":1139,"title":{},"body":{"license.html":{}}}],["const",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["constitutes",{"_index":1190,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["constructor(iconregistry",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(id",{"_index":637,"title":{},"body":{"classes/NotifireModel.html":{}}}],["constructor(private",{"_index":449,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(readonly",{"_index":531,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["constructor(service",{"_index":440,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(type",{"_index":738,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["construed",{"_index":1237,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1220,"title":{},"body":{"license.html":{}}}],["contains",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["content",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["contents",{"_index":1230,"title":{},"body":{"license.html":{}}}],["context",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1060,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1116,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1179,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1242,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1143,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1191,"title":{},"body":{"license.html":{}}}],["control",{"_index":1049,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1013,"title":{},"body":{"index.html":{},"license.html":{}}}],["conversions",{"_index":1087,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1198,"title":{},"body":{"license.html":{}}}],["copy",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["copyright",{"_index":1040,"title":{},"body":{"license.html":{}}}],["countdown",{"_index":724,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["counterclaim",{"_index":1187,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":878,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1008,"title":{},"body":{"index.html":{}}}],["created",{"_index":618,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["cross",{"_index":1185,"title":{},"body":{"license.html":{}}}],["current",{"_index":525,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["custom",{"_index":720,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"index.html":{}}}],["customary",{"_index":1262,"title":{},"body":{"license.html":{}}}],["d",{"_index":1218,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1300,"title":{},"body":{"license.html":{}}}],["dark",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["data",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["date",{"_index":1195,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["deep",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["default_limit",{"_index":857,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["default_trail",{"_index":859,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["defaults.ts",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1333,"title":{},"body":{"license.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"license.html":{}}}],["defines",{"_index":992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definition",{"_index":1051,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1031,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":1295,"title":{},"body":{"license.html":{}}}],["demo",{"_index":1001,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":392,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":732,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["derivative",{"_index":1099,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1102,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1263,"title":{},"body":{"license.html":{}}}],["description",{"_index":504,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["descriptor",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["designated",{"_index":1141,"title":{},"body":{"license.html":{}}}],["destroyed",{"_index":648,"title":{},"body":{"classes/NotifireModel.html":{},"miscellaneous/enumerations.html":{}}}],["detected",{"_index":600,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["determining",{"_index":1283,"title":{},"body":{"license.html":{}}}],["different",{"_index":502,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{},"license.html":{}}}],["direct",{"_index":1054,"title":{},"body":{"license.html":{}}}],["direction",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["directive",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["disable",{"_index":728,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disabled",{"_index":713,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disappear",{"_index":615,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["disclaimer",{"_index":1266,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1136,"title":{},"body":{"license.html":{}}}],["display",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["dissapear",{"_index":715,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["distribute",{"_index":1164,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1223,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1030,"title":{},"body":{"license.html":{}}}],["div",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["divider",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["dock",{"_index":596,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["docksizea",{"_index":479,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["docksizeb",{"_index":480,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["document",{"_index":1038,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"license.html":{}}}],["dolor",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["down",{"_index":625,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["duplicated",{"_index":598,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["duplicates",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["dynamic",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":672,"title":{},"body":{"classes/NotifireModel.html":{}}}],["e.g",{"_index":723,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["each",{"_index":614,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["easier",{"_index":1354,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":1103,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":1106,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1123,"title":{},"body":{"license.html":{}}}],["element",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["emits",{"_index":642,"title":{},"body":{"classes/NotifireModel.html":{}}}],["emitter",{"_index":481,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["enable/disable",{"_index":726,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["enabled",{"_index":597,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["encapsulation",{"_index":436,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["enclosed",{"_index":1344,"title":{},"body":{"license.html":{}}}],["end",{"_index":1339,"title":{},"body":{"license.html":{}}}],["enter",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["entities",{"_index":1048,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1042,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":951,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":636,"title":{},"body":{"classes/NotifireModel.html":{}}}],["equals(toast",{"_index":653,"title":{},"body":{"classes/NotifireModel.html":{}}}],["error",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["erroraction",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["even",{"_index":1315,"title":{},"body":{"license.html":{}}}],["event",{"_index":510,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"license.html":{}}}],["event.target.value",{"_index":691,"title":{},"body":{"components/PromptComponent.html":{}}}],["event.type",{"_index":660,"title":{},"body":{"classes/NotifireModel.html":{}}}],["event.type.ts",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":632,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["events",{"_index":659,"title":{},"body":{"classes/NotifireModel.html":{}}}],["eventsholder",{"_index":633,"title":{},"body":{"classes/NotifireModel.html":{}}}],["example",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["except",{"_index":1166,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1138,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1154,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1252,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1290,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1071,"title":{},"body":{"license.html":{}}}],["exit",{"_index":706,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1244,"title":{},"body":{"license.html":{}}}],["export",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["exports",{"_index":581,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["express",{"_index":1275,"title":{},"body":{"license.html":{}}}],["extensions/rxjs/blob/master/doc/api/core/operators/create.md",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["extract",{"_index":468,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["fadein",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fadeout",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1311,"title":{},"body":{"license.html":{}}}],["false",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["features",{"_index":1004,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1320,"title":{},"body":{"license.html":{}}}],["field",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fields",{"_index":1343,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1064,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1196,"title":{},"body":{"license.html":{}}}],["files",{"_index":1080,"title":{},"body":{"license.html":{}}}],["filter",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{}}}],["filterduplicates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["filtered",{"_index":599,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["fire",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["first",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fitness",{"_index":1279,"title":{},"body":{"license.html":{}}}],["flex",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["focused",{"_index":690,"title":{},"body":{"components/PromptComponent.html":{}}}],["following",{"_index":1202,"title":{},"body":{"license.html":{}}}],["form",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["format",{"_index":1351,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formcontrol",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formgroup",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["forroot",{"_index":583,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["found",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["free",{"_index":1157,"title":{},"body":{"license.html":{}}}],["fs",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":721,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["fully",{"_index":1012,"title":{},"body":{"index.html":{}}}],["function",{"_index":456,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"classes/NotifireModel.html":{},"coverage.html":{}}}],["functional",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["functionalconfig",{"_index":45,"title":{"interfaces/FunctionalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["functions",{"_index":975,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":1086,"title":{},"body":{"license.html":{}}}],["generates",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getconfig",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getfunctionalconfig",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["getnotificationarray",{"_index":485,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationarray(notifications",{"_index":491,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationconfig",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["getpositionformcontrol",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg(svg",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getthemecontrol",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["getting",{"_index":869,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettoastdata",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["getvalue",{"_index":683,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvalue($event",{"_index":685,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvisualconfig",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["github",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["give",{"_index":1203,"title":{},"body":{"license.html":{}}}],["global",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["goodwill",{"_index":1308,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1366,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["grant",{"_index":1148,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1073,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1044,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1150,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":1296,"title":{},"body":{"license.html":{}}}],["harmless",{"_index":1335,"title":{},"body":{"license.html":{}}}],["helper",{"_index":514,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["here",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1149,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1248,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hober",{"_index":725,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["hold",{"_index":1334,"title":{},"body":{"license.html":{}}}],["holds",{"_index":645,"title":{},"body":{"classes/NotifireModel.html":{}}}],["hover",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1361,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/terms",{"_index":1027,"title":{},"body":{"license.html":{}}}],["httpclientmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["https://ccpatrut.github.io/ngx",{"_index":1003,"title":{},"body":{"index.html":{}}}],["https://github.com/reactive",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icon",{"_index":708,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":709,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["iconregistry",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icons",{"_index":1010,"title":{},"body":{"index.html":{}}}],["id",{"_index":634,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{}}}],["identification",{"_index":1355,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1347,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ii",{"_index":1062,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1068,"title":{},"body":{"license.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["implied",{"_index":1276,"title":{},"body":{"license.html":{}}}],["import",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["imports",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["improving",{"_index":1137,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1306,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1302,"title":{},"body":{"license.html":{}}}],["include",{"_index":700,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"license.html":{}}}],["included",{"_index":1094,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1016,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1014,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusion",{"_index":1120,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1146,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1336,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1332,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1323,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1092,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1055,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1070,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["informational",{"_index":1231,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1178,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1192,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":773,"title":{},"body":{"components/ToastComponent.html":{}}}],["inittoast",{"_index":760,"title":{},"body":{"components/ToastComponent.html":{}}}],["injectable",{"_index":910,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["inline",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["inputs",{"_index":439,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["inputtype",{"_index":681,"title":{},"body":{"components/PromptComponent.html":{}}}],["instalation",{"_index":1019,"title":{},"body":{"index.html":{}}}],["install",{"_index":1020,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1182,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":1118,"title":{},"body":{"license.html":{}}}],["interface",{"_index":294,"title":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":453,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{}}}],["ipsum",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["irrevocable",{"_index":1158,"title":{},"body":{"license.html":{}}}],["iscloseonclick",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isdestroying",{"_index":797,"title":{},"body":{"components/ToastComponent.html":{}}}],["isfilterduplicates",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isnewitemsontop",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isobject",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobject(item",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispauseonhover",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ispromptfocused",{"_index":682,"title":{},"body":{"components/PromptComponent.html":{}}}],["isshowprogressbar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["issue",{"_index":1132,"title":{},"body":{"license.html":{}}}],["it's",{"_index":730,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["item",{"_index":981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["january",{"_index":1025,"title":{},"body":{"license.html":{}}}],["justify",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":594,"title":{},"body":{"interfaces/NotificationDefaults.html":{}}}],["keyindex",{"_index":562,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keyof",{"_index":558,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keys",{"_index":462,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":459,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":1274,"title":{},"body":{"license.html":{}}}],["language",{"_index":1365,"title":{},"body":{"license.html":{}}}],["later",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["law",{"_index":1269,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1188,"title":{},"body":{"license.html":{}}}],["left",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["left_bottom",{"_index":958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_center",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_top",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["leftbottom",{"_index":750,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["leftcenter",{"_index":751,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["lefttop",{"_index":752,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["legal",{"_index":1045,"title":{},"body":{"license.html":{}}}],["legend",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["length",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["liability",{"_index":1291,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1299,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1176,"title":{},"body":{"license.html":{}}}],["license",{"_index":1021,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1358,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1193,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1039,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":780,"title":{},"body":{"components/ToastComponent.html":{}}}],["limit",{"_index":861,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":1277,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1367,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1077,"title":{},"body":{"license.html":{}}}],["link",{"_index":1113,"title":{},"body":{"license.html":{}}}],["lists",{"_index":1130,"title":{},"body":{"license.html":{}}}],["literal",{"_index":592,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":1183,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loading",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["location",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["log",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["lorem",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loss",{"_index":1307,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1314,"title":{},"body":{"license.html":{}}}],["made",{"_index":1090,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1129,"title":{},"body":{"license.html":{}}}],["main",{"_index":629,"title":{},"body":{"classes/NotifireModel.html":{}}}],["make",{"_index":1169,"title":{},"body":{"license.html":{}}}],["making",{"_index":1075,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1312,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1134,"title":{},"body":{"license.html":{}}}],["management",{"_index":1057,"title":{},"body":{"license.html":{}}}],["many",{"_index":524,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{}}}],["margin",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["marked",{"_index":1140,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1258,"title":{},"body":{"license.html":{}}}],["mat",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matformfieldmodule",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["math.min",{"_index":850,"title":{},"body":{"components/ToastComponent.html":{}}}],["maticonmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonregistry",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matinputmodule",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["maxatposition",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":714,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["maxonscreen",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":1033,"title":{},"body":{"license.html":{}}}],["means",{"_index":1052,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1082,"title":{},"body":{"license.html":{}}}],["media",{"_index":1088,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1199,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1201,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1278,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1112,"title":{},"body":{"license.html":{}}}],["merge",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergedeep",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mergedeep(...sources",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["message",{"_index":741,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["migrating",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["milliseconds",{"_index":727,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["miscellaneous",{"_index":950,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["model",{"_index":630,"title":{},"body":{"classes/NotifireModel.html":{}}}],["models",{"_index":528,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["models/snotifire",{"_index":529,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"classes/NotifireModel.html":{}}}],["models/snotifire.type",{"_index":662,"title":{},"body":{"classes/NotifireModel.html":{}}}],["modifications",{"_index":1076,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1206,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1232,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1238,"title":{},"body":{"license.html":{}}}],["module",{"_index":389,"title":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}},"body":{}}],["modules",{"_index":391,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":585,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["more",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"license.html":{}}}],["mounted",{"_index":573,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mouse_enter",{"_index":967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouse_leave",{"_index":969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseenter",{"_index":968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseleave",{"_index":970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ms",{"_index":707,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["much",{"_index":1011,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":1257,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":1177,"title":{},"body":{"license.html":{}}}],["need",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["negligence",{"_index":1294,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1297,"title":{},"body":{"license.html":{}}}],["new",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["newontop",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngaftercontentinit",{"_index":761,"title":{},"body":{"components/ToastComponent.html":{}}}],["ngafterviewinit",{"_index":486,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["ngmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["ngondestroy",{"_index":487,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngx",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["ngxsnotifire",{"_index":1000,"title":{},"body":{"index.html":{}}}],["ngxsnotifirecomponent",{"_index":380,"title":{"components/NgxSnotifireComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxsnotifiremodule",{"_index":398,"title":{"modules/NgxSnotifireModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["nice",{"_index":622,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["non",{"_index":1153,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1228,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1247,"title":{},"body":{"license.html":{}}}],["noti",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["notice",{"_index":1093,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1209,"title":{},"body":{"license.html":{}}}],["notification",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconf",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconfig",{"_index":48,"title":{"interfaces/NotificationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notificationdefaults",{"_index":588,"title":{"interfaces/NotificationDefaults.html":{}},"body":{"interfaces/NotificationDefaults.html":{},"coverage.html":{}}}],["notificationeventtype",{"_index":511,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["notificationformvalue",{"_index":295,"title":{"interfaces/NotificationFormValue.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notificationglobalconfig",{"_index":591,"title":{"interfaces/NotificationGlobalConfig.html":{}},"body":{"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"coverage.html":{}}}],["notifications",{"_index":482,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["notifications.interface",{"_index":530,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notifications.interface.ts",{"_index":746,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["notifications[position",{"_index":568,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notificationtype",{"_index":996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notifire",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["notifire/ngx",{"_index":472,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["notifireconfig",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["notifireeventtype",{"_index":643,"title":{},"body":{"classes/NotifireModel.html":{}}}],["notifiremodel",{"_index":442,"title":{"classes/NotifireModel.html":{}},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["notwithstanding",{"_index":1245,"title":{},"body":{"license.html":{}}}],["npm",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["null",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":469,"title":{},"body":{"pipes/KeysPipe.html":{},"interfaces/NotificationDefaults.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(snotificationpositiontype",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["object.keys(snotificationpositiontype).indexof",{"_index":563,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["object.keys(value",{"_index":470,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["object.values(snotificationpositiontype",{"_index":565,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["objects",{"_index":503,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/functions.html":{}}}],["obligations",{"_index":1324,"title":{},"body":{"license.html":{}}}],["observable",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observable((observer",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observables",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.complete",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.error",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.next",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["obtain",{"_index":1360,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1170,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["on(event",{"_index":656,"title":{},"body":{"classes/NotifireModel.html":{}}}],["on(snotifireeventtype.input",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onasyncloading",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclear",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclick",{"_index":762,"title":{},"body":{"components/ToastComponent.html":{}}}],["onconfirmation",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ondestroy",{"_index":474,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["one",{"_index":1221,"title":{},"body":{"license.html":{}}}],["onerror",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onexittransitionend",{"_index":763,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverenter",{"_index":784,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverleave",{"_index":786,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhtml",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninfo",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onmouseenter",{"_index":764,"title":{},"body":{"components/ToastComponent.html":{}}}],["onmouseleave",{"_index":765,"title":{},"body":{"components/ToastComponent.html":{}}}],["onprompt",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onremove",{"_index":766,"title":{},"body":{"components/ToastComponent.html":{}}}],["onsuccess",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onwarning",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["opacity",{"_index":509,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["option",{"_index":612,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1009,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1264,"title":{},"body":{"license.html":{}}}],["original",{"_index":1109,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1061,"title":{},"body":{"license.html":{}}}],["out",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":801,"title":{},"body":{"components/ToastComponent.html":{}}}],["outputs",{"_index":768,"title":{},"body":{"components/ToastComponent.html":{}}}],["outstanding",{"_index":1066,"title":{},"body":{"license.html":{}}}],["overrides",{"_index":718,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["overview",{"_index":1369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1041,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1063,"title":{},"body":{"license.html":{}}}],["package",{"_index":931,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["param",{"_index":457,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":698,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["parseint(args[0",{"_index":863,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["part",{"_index":1217,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1280,"title":{},"body":{"license.html":{}}}],["party",{"_index":1227,"title":{},"body":{"license.html":{}}}],["pass",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["patent",{"_index":1165,"title":{},"body":{"license.html":{}}}],["pause",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["paused",{"_index":796,"title":{},"body":{"components/ToastComponent.html":{}}}],["pauseonhover",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["percent",{"_index":1065,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1162,"title":{},"body":{"license.html":{}}}],["performance.now",{"_index":844,"title":{},"body":{"components/ToastComponent.html":{}}}],["permission",{"_index":1255,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1072,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1151,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1216,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":458,"title":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.unsubscribe",{"_index":533,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["pipes",{"_index":460,"title":{},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":466,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":1222,"title":{},"body":{"license.html":{}}}],["position",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["position.type",{"_index":735,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["position.type.ts",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["positionformcontrol",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["positions",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["possibility",{"_index":1317,"title":{},"body":{"license.html":{}}}],["power",{"_index":1053,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1074,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1160,"title":{},"body":{"license.html":{}}}],["printed",{"_index":1353,"title":{},"body":{"license.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["product",{"_index":1259,"title":{},"body":{"license.html":{}}}],["production",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["project",{"_index":1002,"title":{},"body":{"index.html":{}}}],["projects/.../set",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../snotifire",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../snotifire.type.ts",{"_index":955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.ts",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../toast",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../transform",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../utils.ts",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":432,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1208,"title":{},"body":{"license.html":{}}}],["promise",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["promise((resolve",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"miscellaneous/enumerations.html":{}}}],["prompt'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["prompt(this.toastdata.body",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt.component.html",{"_index":680,"title":{},"body":{"components/PromptComponent.html":{}}}],["promptcomponent",{"_index":382,"title":{"components/PromptComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prompttype",{"_index":798,"title":{},"body":{"components/ToastComponent.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"properties.html":{}}}],["property",{"_index":556,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["propertydescriptor",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["protected",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["provide",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SnotifireConfig.html":{},"license.html":{}}}],["provided",{"_index":1096,"title":{},"body":{"license.html":{}}}],["providers",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["provides",{"_index":1271,"title":{},"body":{"license.html":{}}}],["public",{"_index":631,"title":{},"body":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{}}}],["publicly",{"_index":1161,"title":{},"body":{"license.html":{}}}],["pulls",{"_index":624,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["pure",{"_index":467,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["purpose",{"_index":1135,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":607,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["push",{"_index":825,"title":{},"body":{"components/ToastComponent.html":{}}}],["queue",{"_index":526,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["random",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range",{"_index":710,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["reactiveformsmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["readable",{"_index":1219,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["reason",{"_index":1338,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1261,"title":{},"body":{"license.html":{}}}],["received",{"_index":1144,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1204,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1352,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":731,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["redistributing",{"_index":1286,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1197,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1253,"title":{},"body":{"license.html":{}}}],["reject",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["remain",{"_index":1110,"title":{},"body":{"license.html":{}}}],["remove",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["removes",{"_index":789,"title":{},"body":{"components/ToastComponent.html":{}}}],["replaced",{"_index":1346,"title":{},"body":{"license.html":{}}}],["repository",{"_index":1015,"title":{},"body":{"index.html":{}}}],["represent",{"_index":1107,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1128,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1159,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1265,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1029,"title":{},"body":{"license.html":{}}}],["requestanimationframe",{"_index":795,"title":{},"body":{"components/ToastComponent.html":{}}}],["requestanimationframe((timestamp",{"_index":847,"title":{},"body":{"components/ToastComponent.html":{}}}],["require",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1260,"title":{},"body":{"license.html":{}}}],["reset",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["resolve",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["responsibility",{"_index":1330,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1282,"title":{},"body":{"license.html":{}}}],["result",{"_index":555,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"license.html":{}}}],["result[searchedstring]?.push(toast",{"_index":566,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["resulting",{"_index":1081,"title":{},"body":{"license.html":{}}}],["results",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1213,"title":{},"body":{"license.html":{}}}],["return",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["returns",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":550,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["revisions",{"_index":1104,"title":{},"body":{"license.html":{}}}],["right",{"_index":620,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["right_bottom",{"_index":961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_center",{"_index":960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_top",{"_index":959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rightbottom",{"_index":603,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rightcenter",{"_index":753,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":1326,"title":{},"body":{"license.html":{}}}],["righttop",{"_index":754,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["risks",{"_index":1288,"title":{},"body":{"license.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["root'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["royalty",{"_index":1156,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":848,"title":{},"body":{"components/ToastComponent.html":{}}}],["rxjs",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["safehtml",{"_index":716,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["same",{"_index":601,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{},"license.html":{}}}],["sanitizer",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["screen",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{}}}],["searchedstring",{"_index":564,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["second",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["section",{"_index":1168,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1035,"title":{},"body":{"license.html":{}}}],["see",{"_index":1363,"title":{},"body":{"license.html":{}}}],["select",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["sell",{"_index":1171,"title":{},"body":{"license.html":{}}}],["sent",{"_index":1127,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1111,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1250,"title":{},"body":{"license.html":{}}}],["service",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["services",{"_index":448,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/ToastComponent.html":{}}}],["settimeout",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["settoasttype",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["settoasttype(target",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shall",{"_index":1032,"title":{},"body":{"license.html":{}}}],["share",{"_index":705,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["shares",{"_index":1067,"title":{},"body":{"license.html":{}}}],["show",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["shown",{"_index":613,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"miscellaneous/enumerations.html":{}}}],["showprogressbar",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":617,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["simple",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["sit",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["slice",{"_index":515,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["slide",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["snotificationpositiontype",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["snotificationpositiontype.hasownproperty(property",{"_index":557,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotificationpositiontype.right_bottom",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotificationservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["snotifire",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["snotifire'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["snotifire.component.html",{"_index":476,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts",{"_index":473,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire.component.ts:110",{"_index":499,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:138",{"_index":493,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:149",{"_index":507,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:179",{"_index":496,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:20",{"_index":523,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:24",{"_index":521,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:28",{"_index":520,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:32",{"_index":517,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:36",{"_index":518,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:40",{"_index":513,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:44",{"_index":516,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:48",{"_index":512,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:52",{"_index":490,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:55",{"_index":495,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:57",{"_index":497,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.module.ts",{"_index":580,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.module.ts:25",{"_index":584,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.type",{"_index":736,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/components/buttons/buttons",{"_index":454,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts",{"_index":433,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:24",{"_index":441,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:31",{"_index":443,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/ngx",{"_index":471,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts",{"_index":679,"title":{},"body":{"components/PromptComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:18",{"_index":688,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:22",{"_index":684,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:26",{"_index":689,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:28",{"_index":686,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/toast/notifire",{"_index":627,"title":{},"body":{"classes/NotifireModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts",{"_index":756,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:115",{"_index":778,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:124",{"_index":783,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:134",{"_index":785,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:149",{"_index":781,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:165",{"_index":772,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:178",{"_index":791,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:21",{"_index":800,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:210",{"_index":776,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:26",{"_index":770,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:27",{"_index":771,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:32",{"_index":794,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:37",{"_index":799,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:43",{"_index":769,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:47",{"_index":777,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:71",{"_index":775,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:91",{"_index":787,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/decorators/set",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/decorators/transform",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/defaults/defaults.interface.ts",{"_index":589,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/global",{"_index":595,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/toast",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/models/snotifire",{"_index":695,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts",{"_index":737,"title":{},"body":{"classes/SnotifireModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:11",{"_index":744,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:15",{"_index":740,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:19",{"_index":742,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:23",{"_index":743,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:5",{"_index":739,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:7",{"_index":745,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.type.ts",{"_index":974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/ngx",{"_index":579,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts",{"_index":461,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts:11",{"_index":465,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts",{"_index":854,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:11",{"_index":858,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:12",{"_index":860,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:13",{"_index":856,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/services/notification.service.ts",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["snotifire/src/lib/test.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/utils.ts",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/test.ts",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifireanimate",{"_index":694,"title":{"interfaces/SnotifireAnimate.html":{}},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["snotifireconfig",{"_index":73,"title":{"interfaces/SnotifireConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["snotifireeventtype",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["snotifireeventtype.input",{"_index":687,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifireform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifiremodel",{"_index":117,"title":{"classes/SnotifireModel.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["snotifirenotifications",{"_index":492,"title":{"interfaces/SnotifireNotifications.html":{}},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["snotifiretype",{"_index":661,"title":{},"body":{"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snotifiretype.async",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.confirm",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.error",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.info",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.prompt",{"_index":665,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["snotifiretype.success",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.warning",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotify",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["snotifybutton",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifynotifications",{"_index":505,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifytypetype",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":1078,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1329,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1281,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["sources",{"_index":985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["space",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1301,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1364,"title":{},"body":{"license.html":{}}}],["split",{"_index":500,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts",{"_index":488,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts(toasts",{"_index":498,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:112",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:119",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:126",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:134",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:140",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:144",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:212",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:249",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:279",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:283",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:286",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:290",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:294",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":792,"title":{},"body":{"components/ToastComponent.html":{}}}],["started",{"_index":870,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":793,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout",{"_index":767,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout(starttime",{"_index":790,"title":{},"body":{"components/ToastComponent.html":{}}}],["state",{"_index":759,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["statechanged",{"_index":489,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["statechanged(event",{"_index":506,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["stated",{"_index":1167,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1239,"title":{},"body":{"license.html":{}}}],["statements",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":582,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["stating",{"_index":1210,"title":{},"body":{"license.html":{}}}],["still",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["stoppage",{"_index":1309,"title":{},"body":{"license.html":{}}}],["string",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":729,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/functions.html":{}}}],["style.opacity]=\"backdrop",{"_index":574,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["styling",{"_index":619,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{}}}],["subject",{"_index":522,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1163,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1241,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1121,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1119,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":658,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subscribe((id",{"_index":809,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toast",{"_index":803,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toasts",{"_index":534,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["subscribers",{"_index":646,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subscription",{"_index":519,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["subscription.unsubscribe",{"_index":669,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subsequently",{"_index":1145,"title":{},"body":{"license.html":{}}}],["success",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["successaction",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["such",{"_index":1058,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1249,"title":{},"body":{"license.html":{}}}],["support",{"_index":1322,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["switch",{"_index":571,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["syntax",{"_index":1350,"title":{},"body":{"license.html":{}}}],["system",{"_index":608,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["systems",{"_index":1131,"title":{},"body":{"license.html":{}}}],["table",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":722,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["takeuntil",{"_index":527,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["target",{"_index":995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["terminate",{"_index":1194,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1034,"title":{},"body":{"license.html":{}}}],["tests",{"_index":655,"title":{},"body":{"classes/NotifireModel.html":{}}}],["text",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["themecontrol",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["themes",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["theory",{"_index":1292,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1115,"title":{},"body":{"license.html":{}}}],["third",{"_index":1226,"title":{},"body":{"license.html":{}}}],["this.addicon('icon",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.animationframe",{"_index":846,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.backdrop",{"_index":570,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizea",{"_index":541,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizeb",{"_index":544,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.body",{"_index":674,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.config",{"_index":663,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.config.type",{"_index":664,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.default_limit",{"_index":864,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.default_trail",{"_index":868,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.docksizea",{"_index":538,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.docksizeb",{"_index":540,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.eventemitter.subscribe((e",{"_index":671,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.eventsholder.foreach((subscription",{"_index":668,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.eventsholder.push",{"_index":670,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.fb.group",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.backdrop",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.boydmaxlength",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.timeout",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.titlemaxlengt",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.getconfig",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.iconregistry.addsvgicon",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.inittoast",{"_index":807,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.notificationconfig.maxatposition",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notificationconfig.maxonscreen",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notifications",{"_index":551,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.on(snotifireeventtype.hidden",{"_index":667,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.onremove",{"_index":810,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.positions",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.positions[3",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(this.getsvg(location",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.service.defaultconfig",{"_index":535,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global",{"_index":536,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxatposition",{"_index":542,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxonscreen",{"_index":539,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.newontop",{"_index":537,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig",{"_index":817,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation",{"_index":818,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation.time",{"_index":823,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.emitter",{"_index":532,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.remove(this.toast.id",{"_index":450,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["this.service.toastchanged",{"_index":802,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.toastdeleted",{"_index":808,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.snotificationservice",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.async",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.clear",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.confirm",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.error",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.html(html",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.info",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.remove(toast.id",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.setdefaults",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.success",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.warning",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('position",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('toaststyle",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().notificationconf",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().position",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastdata",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastfunctionalconfig",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastvisualconfig",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.splittoasts",{"_index":552,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.starttimeout(0",{"_index":843,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.starttimeout(this.toast.config.timeout",{"_index":838,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.animation",{"_index":816,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.isdestroying",{"_index":826,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.paused",{"_index":837,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.progress",{"_index":839,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged(snotifireeventtype.mounted",{"_index":554,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_hide",{"_index":828,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_show",{"_index":819,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.hidden",{"_index":830,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.themes[0",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.title",{"_index":676,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.toast",{"_index":811,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config",{"_index":812,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation",{"_index":821,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.enter",{"_index":822,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.exit",{"_index":829,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.time",{"_index":832,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.closeonclick",{"_index":834,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.pauseonhover",{"_index":836,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.showprogressbar",{"_index":814,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.timeout",{"_index":813,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_hide",{"_index":827,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_show",{"_index":820,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.click",{"_index":833,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.hidden",{"_index":831,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mounted",{"_index":815,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_enter",{"_index":835,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_leave",{"_index":840,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.shown",{"_index":841,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.id",{"_index":805,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastdata.body",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.toastdata.title",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.value",{"_index":666,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.visualconfig.iscloseonclick",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isfilterduplicates",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isnewitemsontop",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.ispauseonhover",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isshowprogressbar",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.withbackdrop",{"_index":545,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.withbackdrop.length",{"_index":569,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["those",{"_index":1174,"title":{},"body":{"license.html":{}}}],["through",{"_index":1036,"title":{},"body":{"license.html":{}}}],["time",{"_index":606,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["times",{"_index":611,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["timestamp",{"_index":849,"title":{},"body":{"components/ToastComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["titlemaxlengt",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["titlemaxlength",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toast.body",{"_index":675,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":757,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config",{"_index":547,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["toast.config.backdrop",{"_index":548,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.bodymaxlength",{"_index":853,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.placeholder",{"_index":692,"title":{},"body":{"components/PromptComponent.html":{}}}],["toast.config.position",{"_index":561,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.titlemaxlength",{"_index":852,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.type",{"_index":678,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.id",{"_index":806,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.model",{"_index":447,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{}}}],["toast.model.ts",{"_index":628,"title":{},"body":{"classes/NotifireModel.html":{},"coverage.html":{}}}],["toast.model.ts:13",{"_index":641,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:18",{"_index":644,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:23",{"_index":652,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:28",{"_index":638,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:31",{"_index":649,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:32",{"_index":650,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:33",{"_index":639,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:34",{"_index":640,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:51",{"_index":657,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:67",{"_index":654,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.title",{"_index":677,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["toast.value",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toast/notifire",{"_index":446,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{}}}],["toastcomponent",{"_index":384,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastdata",{"_index":47,"title":{"interfaces/ToastData.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["toastdefaults",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastdefaults.toast",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastfunctionalconfig",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastrs",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["toasts",{"_index":501,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"index.html":{}}}],["toasts.filter",{"_index":546,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.foreach((toast",{"_index":560,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.slice(this.docksizea",{"_index":553,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toaststyle",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastvisualconfig",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toggle",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["togle",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["top:0",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["top:2rem",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["top:4.5rem",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":1293,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":1133,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1256,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1214,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1254,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1172,"title":{},"body":{"license.html":{}}}],["transform",{"_index":463,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["transform(value",{"_index":464,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformargument",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformargument(target",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformation",{"_index":1083,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1084,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["trigger",{"_index":779,"title":{},"body":{"components/ToastComponent.html":{}}}],["true",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":693,"title":{},"body":{"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":578,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["ts",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["tslib",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.decorator.ts",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":559,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["types",{"_index":1006,"title":{},"body":{"index.html":{},"license.html":{}}}],["undefined",{"_index":494,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1050,"title":{},"body":{"license.html":{}}}],["union",{"_index":1046,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1243,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":483,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["use",{"_index":1017,"title":{},"body":{"index.html":{},"license.html":{}}}],["user",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["usevalue",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1285,"title":{},"body":{"license.html":{}}}],["uuid",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["v1.0.0",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["v14",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":635,"title":{},"body":{"classes/NotifireModel.html":{}}}],["validate",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validator",{"_index":651,"title":{},"body":{"classes/NotifireModel.html":{}}}],["validators",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validators.required",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["value",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":865,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substring(0",{"_index":866,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1373,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1124,"title":{},"body":{"license.html":{}}}],["version",{"_index":1023,"title":{},"body":{"license.html":{},"properties.html":{}}}],["very",{"_index":621,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["viewencapsulation",{"_index":445,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["viewencapsulation.none",{"_index":437,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["visualconfig",{"_index":46,"title":{"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["void",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["want",{"_index":604,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{}}}],["warning",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":1273,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1267,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":1225,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1059,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1108,"title":{},"body":{"license.html":{}}}],["width",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["width:70rem",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["witch",{"_index":717,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["withbackdrop",{"_index":484,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["within",{"_index":1147,"title":{},"body":{"license.html":{}}}],["without",{"_index":1200,"title":{},"body":{"license.html":{}}}],["work",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["works",{"_index":1100,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1152,"title":{},"body":{"license.html":{}}}],["write",{"_index":702,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["writing",{"_index":1142,"title":{},"body":{"license.html":{}}}],["written",{"_index":1125,"title":{},"body":{"license.html":{}}}],["yes",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["you'll",{"_index":704,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yourself",{"_index":703,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yyyy",{"_index":1357,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positions\n                            \n                            \n                                snotifireForm\n                            \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addIcon\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Private\n                                getSvg\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAsyncLoading\n                            \n                            \n                                onClear\n                            \n                            \n                                onConfirmation\n                            \n                            \n                                onError\n                            \n                            \n                                onHtml\n                            \n                            \n                                onInfo\n                            \n                            \n                                onPrompt\n                            \n                            \n                                onSuccess\n                            \n                            \n                                onWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    positionFormControl\n                                \n                                \n                                    themeControl\n                                \n                                \n                                    functionalConfig\n                                \n                                \n                                    visualConfig\n                                \n                                \n                                    toastData\n                                \n                                \n                                    notificationConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, snotificationService: SnotificationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snotificationService\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addIcon(iconName: string, location: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iconName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SnotifireConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSvg(svg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAsyncLoading\n                        \n                    \n                \n            \n            \n                \nonAsyncLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClear\n                        \n                    \n                \n            \n            \n                \nonClear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmation\n                        \n                    \n                \n            \n            \n                \nonConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHtml\n                        \n                    \n                \n            \n            \n                \nonHtml()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInfo\n                        \n                    \n                \n            \n            \n                \nonInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrompt\n                        \n                    \n                \n            \n            \n                \nonPrompt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSuccess\n                        \n                    \n                \n            \n            \n                \nonSuccess()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWarning\n                        \n                    \n                \n            \n            \n                \nonWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        positions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snotifireForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['material', 'dark', 'simple']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        positionFormControl\n                    \n                \n\n                \n                    \n                        getpositionFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        themeControl\n                    \n                \n\n                \n                    \n                        getthemeControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functionalConfig\n                    \n                \n\n                \n                    \n                        getfunctionalConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:279\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visualConfig\n                    \n                \n\n                \n                    \n                        getvisualConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:283\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toastData\n                    \n                \n\n                \n                    \n                        gettoastData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:286\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        notificationConfig\n                    \n                \n\n                \n                    \n                        getnotificationConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:290\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n    \n        \n    \n        \n            \n            Config Noti\n            \n            Toast\n            \n        \n\n        \n            \n                \n                    \n                        Name\n                        \n                    \n                    \n                        Body\n                        \n                    \n                \n                \n                \n                    \n                        \n                            Title Max Length\n                            \n                        \n                        \n                            Body Max Length\n                            \n                        \n                    \n                    \n                        \n                            Timeout\n                            \n                        \n                        \n                            Backdrop\n                            \n                        \n                    \n                \n                \n                \n                    \n                        Select Notification Position\n                        \n                            \n                                {{position}}\n                            \n                        \n                    \n                \n                \n                    Show Progress Bar\n                    Close on click\n                    Pause on hover\n                    New items on top\n                    Filter duplicates\n\n                \n\n                \n                \n                    \n                        Max number of Toastrs on Screen\n                        \n                    \n                    \n                        Max number of Toastrs per Position\n                        \n                    \n\n                \n\n                \n                    Select theme\n                    \n                        \n                            {{theme}}\n                        \n                    \n                \n            \n\n        \n    \n    \n        \n            \n                Success\n            \n            \n                Info\n            \n            \n                Error\n            \n            \n                Warning\n            \n        \n        \n\n            \n                Async\n            \n            \n                Confirm\n            \n            \n                Prompt\n            \n        \n        \n            \n                HTML\n            \n        \n        \n            \n                Clear all\n            \n        \n    \n\n\n\n\n    \n        Documentation\n    \n    &#9673;\n    \n        Compodoc\n    \n    &#9673;\n    \n        GitHub\n    \n    &#9673;\n    \n        NPM\n    \n    \n        MIT &copy; 2018\n        ccpatrut\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.page{\n  padding-top:2rem;\n  padding-bottom: 1rem;\n  justify-content: center;\n  align-content: center;\n\n  display: flex;\n  .config{\n    max-width: 40rem;\n    padding: 0rem 3rem;\n    .title{\n      text-align: center;\n    }\n    .functional-config{\n        &__length,&__ui{\n        display: flex;\n        align-items: baseline;\n        justify-content: space-between;\n\n        mat-form-field{\n          width: 45%;\n        }\n      }\n    }\n    &__booleans{\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 3.2rem;\n      max-width: 100%;\n      mat-slide-togle{\n        width: 40%;\n        display: inline-block;\n      }\n    }\n  }\n  .buttons{\n\n    max-width:70rem;\n    display: flex;\n    flex-direction: column;\n    margin-top:4.5rem;\n    margin-left: 10rem;\n    div{\n      display: flex;\n      justify-content: space-between;\n      margin-top: 1rem;\n      width: 100%;\n\n    }\n    button{\n      margin-left: 1rem;\n    }\n    .buttons__html, .buttons__clear-all{\n      display: block;\n      text-align: center;\n    }\n  }\n}\nmat-form-field{\n  width:100%;\n}\nmat-divider{\n  padding-top:0;\n  margin-bottom: 2rem;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Config Noti                        Toast                                                                                                    Name                                                                                        Body                                                                                                                                                                    Title Max Length                                                                                                        Body Max Length                                                                                                                                                Timeout                                                                                                        Backdrop                                                                                                                                                                    Select Notification Position                                                                                    {{position}}                                                                                                                            Show Progress Bar                    Close on click                    Pause on hover                    New items on top                    Filter duplicates                                                                                            Max number of Toastrs on Screen                                                                                        Max number of Toastrs per Position                                                                                                Select theme                                                                        {{theme}}                                                                                                                            Success                                        Info                                        Error                                        Warning                                                        Async                                        Confirm                                        Prompt                                                        HTML                                                        Clear all                                    Documentation        ◉            Compodoc        ◉            GitHub        ◉            NPM                MIT © 2018        ccpatrut    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nSnotificationService\n\nSnotificationService\n\nAppModule -->\n\nSnotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxSnotifireModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {\n  NgxSnotifireModule,\n  SnotificationService,\n  ToastDefaults,\n} from 'ngx-snotifire';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NgxSnotifireModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatIconModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: 'NotifireConfig', useValue: ToastDefaults },\n    SnotificationService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                notifire-button\n            \n\n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n                \n                    \n                        Get buttons Array\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:31\n                \n            \n\n\n            \n                \n                    remove toast\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NotifireModel } from '../toast/notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'notifire-button',\n  templateUrl: './buttons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n/**\n * Buttons component\n */\nexport class ButtonsComponent {\n  /**\n   * Get buttons Array\n   */\n  @Input() toast!: NotifireModel;\n\n  constructor(private readonly service: SnotificationService) {}\n\n  /**\n   * remove toast\n   */\n  remove() {\n    this.service.remove(this.toast.id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{ button.text }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ button.text }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonsConfig.html":{"url":"interfaces/ButtonsConfig.html","title":"interface - ButtonsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bold\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Action which will be called after buttons click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should buttons text be bold.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Button text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NotifireModel } from '../toast/notifire-toast.model';\n\nexport interface ButtonsConfig {\n  /**\n   * Button text\n   */\n  text: string;\n\n  /**\n   * Should buttons text be bold.\n   */\n  bold?: boolean;\n\n  /**\n   * Action which will be called after buttons click\n   * @param text? string\n   * @returns void\n   */\n  action?: (toast: NotifireModel) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionalConfig.html":{"url":"interfaces/FunctionalConfig.html","title":"interface - FunctionalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FunctionalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                        \n                                            boydMaxLength\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            titleMaxLengt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boydMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        boydMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLengt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLengt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false,\n})\n/**\n * Extract object keys pipe\n */\nexport class KeysPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return value;\n    }\n    return Object.keys(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxSnotifireComponent.html":{"url":"components/NgxSnotifireComponent.html","title":"component - NgxSnotifireComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgxSnotifireComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotifire\n            \n\n\n\n\n            \n                templateUrl\n                ./ngx-snotifire.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backdrop\n                            \n                            \n                                blockSizeA\n                            \n                            \n                                blockSizeB\n                            \n                            \n                                dockSizeA\n                            \n                            \n                                dockSizeB\n                            \n                            \n                                emitter\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                    Readonly\n                                unsubscribe$\n                            \n                            \n                                withBackdrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNotificationArray\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                splitToasts\n                            \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNotificationArray\n                        \n                    \n                \n            \n            \n                \ngetNotificationArray(notifications: SnotifireNotifications, position: SnotificationPositionType)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notifications\n                                    \n                                                SnotifireNotifications\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                SnotificationPositionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitToasts\n                        \n                    \n                \n            \n            \n                \nsplitToasts(toasts: NotifireModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:110\n                \n            \n\n\n            \n                \n                    Split toasts toasts into different objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toasts\n                                    \n                                                NotifireModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        notifire-toast[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SnotifireNotifications\n\n                    \n                    \n                        SnotifyNotifications\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateChanged\n                        \n                    \n                \n            \n            \n                \nstateChanged(event: SnotifireEventType)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:149\n                \n            \n\n\n            \n                \n                    Changes the backdrop opacity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SnotifireEventType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationEventType\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:48\n                        \n                    \n\n            \n                \n                    Backdrop Opacity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:40\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:44\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:32\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:36\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:28\n                        \n                    \n\n            \n                \n                    Toasts emitter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireNotifications\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:24\n                        \n                    \n\n            \n                \n                    Toasts array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotifireModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                        \n                    \n\n            \n                \n                    How many toasts with backdrop in current queue\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotificationPositionType } from '../../models';\nimport { SnotifireNotifications } from '../../models/snotifire-notifications.interface';\nimport { NotifireModel } from '../toast/notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'ngx-snotifire',\n  templateUrl: './ngx-snotifire.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxSnotifireComponent implements OnInit, OnDestroy, AfterViewInit {\n  private readonly unsubscribe$ = new Subject();\n  /**\n   * Toasts array\n   */\n  notifications!: SnotifireNotifications;\n  /**\n   * Toasts emitter\n   */\n  emitter!: Subscription;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeB!: number | undefined;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeB!: number | undefined;\n  /**\n   * Backdrop Opacity\n   */\n  backdrop: number | undefined = -1;\n  /**\n   * How many toasts with backdrop in current queue\n   */\n  withBackdrop: NotifireModel[] = [];\n\n  constructor(readonly service: SnotificationService) {}\n  ngAfterViewInit(): void {}\n\n  ngOnInit(): void {\n    this.service.emitter\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toasts: NotifireModel[]) => {\n        if (\n          this.service.defaultConfig &&\n          this.service.defaultConfig.global &&\n          this.service.defaultConfig.global.newOnTop\n        ) {\n          this.dockSizeA = this.service.defaultConfig.global.maxOnScreen\n            ? -this.service.defaultConfig.global.maxOnScreen\n            : 6;\n          this.dockSizeB = undefined;\n          this.blockSizeA = this.service.defaultConfig.global.maxAtPosition\n            ? -this.service.defaultConfig.global.maxAtPosition\n            : 4;\n          this.blockSizeB = undefined;\n          this.withBackdrop = toasts.filter(\n            (toast) =>\n              toast.config &&\n              toast.config.backdrop &&\n              toast.config.backdrop >= 0\n          );\n        } else {\n          this.dockSizeA = 0;\n          this.dockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxOnScreen;\n          this.blockSizeA = 0;\n          this.blockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxAtPosition;\n          this.withBackdrop = toasts\n            .filter(\n              (toast) =>\n                toast.config &&\n                toast.config.backdrop &&\n                toast.config.backdrop >= 0\n            )\n            .reverse();\n        }\n        this.notifications = this.splitToasts(\n          toasts.slice(this.dockSizeA, this.dockSizeB)\n        );\n        this.stateChanged(SnotifireEventType.MOUNTED);\n      });\n  }\n\n  /**\n   * Split toasts toasts into different objects\n   * @param toasts notifire-toast[]\n   * @returns SnotifyNotifications\n   */\n  splitToasts(toasts: NotifireModel[]): SnotifireNotifications {\n    const result: SnotifireNotifications = {};\n\n    for (const property in SnotificationPositionType) {\n      if (SnotificationPositionType.hasOwnProperty(property)) {\n        result[\n          SnotificationPositionType[\n            property as keyof typeof SnotificationPositionType\n          ]\n        ] = [];\n      }\n    }\n\n    toasts.forEach((toast: NotifireModel) => {\n      if (toast.config.position) {\n        const keyIndex = Object.keys(SnotificationPositionType).indexOf(\n          toast.config.position\n        );\n        const searchedString = Object.values(SnotificationPositionType)[\n          keyIndex\n        ];\n        result[searchedString]?.push(toast);\n      }\n    });\n    console.log(result);\n    return result;\n  }\n\n  getNotificationArray(\n    notifications: SnotifireNotifications,\n    position: SnotificationPositionType\n  ): NotifireModel[] | undefined {\n    return notifications[position];\n  }\n\n  /**\n   * Changes the backdrop opacity\n   * @param event NotificationEventType\n   */\n  stateChanged(event: SnotifireEventType) {\n    if (!this.withBackdrop.length) {\n      if (this.backdrop && this.backdrop >= 0) {\n        this.backdrop = -1;\n      }\n      return;\n    }\n    switch (event) {\n      case 'mounted':\n        if (this.backdrop && this.backdrop \n    \n\n    \n        = 0\"\n    [style.opacity]=\"backdrop\"\n>\n\n\n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '= 0\"    [style.opacity]=\"backdrop\">        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxSnotifireComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxSnotifireModule.html":{"url":"modules/NgxSnotifireModule.html","title":"module - NgxSnotifireModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxSnotifireModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsComponent\n                        \n                        \n                            KeysPipe\n                        \n                        \n                            NgxSnotifireComponent\n                        \n                        \n                            PromptComponent\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TruncatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxSnotifireComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ButtonsComponent,\n  NgxSnotifireComponent,\n  PromptComponent,\n  ToastComponent,\n} from './components';\nimport { KeysPipe, TruncatePipe } from './pipes';\nimport { SnotificationService } from './services';\n\n@NgModule({\n  declarations: [\n    PromptComponent,\n    ToastComponent,\n    ButtonsComponent,\n    TruncatePipe,\n    KeysPipe,\n    NgxSnotifireComponent,\n  ],\n  imports: [CommonModule],\n  exports: [NgxSnotifireComponent],\n})\nexport class NgxSnotifireModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSnotifireModule,\n      providers: [SnotificationService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationConfig.html":{"url":"interfaces/NotificationConfig.html","title":"interface - NotificationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                        \n                                            maxOnScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationDefaults.html":{"url":"interfaces/NotificationDefaults.html","title":"interface - NotificationDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Global configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            global\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            snotifireConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        global\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global:         NotificationGlobalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationGlobalConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snotifireConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snotifireConfig:         SnotifireConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotificationGlobalConfig } from './global-config.interface';\nimport { SnotifireConfig } from '../models/snotifire-config.interface';\n\n/**\n * Global configuration object\n */\nexport interface NotificationDefaults {\n  global?: NotificationGlobalConfig;\n  snotifireConfig?: SnotifireConfig;\n  type?: {\n    [key: string]: SnotifireConfig;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationFormValue.html":{"url":"interfaces/NotificationFormValue.html","title":"interface - NotificationFormValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationFormValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            toastData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toastData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toastData:         ToastData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationGlobalConfig.html":{"url":"interfaces/NotificationGlobalConfig.html","title":"interface - NotificationGlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationGlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast dock configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterDuplicates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxOnScreen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newOnTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When enabled duplicated notification are filtered out.\nDuplicates are detected when they have the same title, body and type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items at position.\nSame as maxOnScreen, but affects only current toast position (like rightBottom)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items on screen.\n\nFor example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\nWith this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should new items come from top or bottom side.\n\nThis option created for styling purposes.\nFor example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificationGlobalConfig {\n  /**\n   * Max toast items on screen.\n   *\n   * > For example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\n   * >\n   * > With this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n   */\n  maxOnScreen?: number;\n  /**\n   * Max toast items at position.\n   *\n   * Same as maxOnScreen, but affects only current toast position (like rightBottom)\n   */\n  maxAtPosition?: number;\n  /**\n   * Should new items come from top or bottom side.\n   *\n   * > This option created for styling purposes.\n   * >\n   * > For example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n   */\n  newOnTop?: boolean;\n\n  /**\n   * When enabled duplicated notification are filtered out.\n   *\n   * Duplicates are detected when they have the same title, body and type.\n   *\n   */\n  filterDuplicates?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotifireModel.html":{"url":"classes/NotifireModel.html","title":"class - NotifireModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotifireModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast main model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                eventsHolder\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                title\n                            \n                            \n                                valid\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, title: string, body: string, config: SnotifireConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:13\n                        \n                    \n\n            \n                \n                    Emits NotifireEventType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventsHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:18\n                        \n                    \n\n            \n                \n                    Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                        \n                    \n\n            \n                \n                    Toast validator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:23\n                        \n                    \n\n            \n                \n                    Toast prompt value\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(toast: NotifireModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:67\n                \n            \n\n\n            \n                \n                    Tests if a toast equals this toast.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toast\n                                    \n                                                NotifireModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        notifire-toast\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean true then equals else false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n            \n                \non(event: SnotifireEventType, action: (undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:51\n                \n            \n\n\n            \n                \n                    Subscribe to toast events\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SnotifireEventType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationEventType\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        (toast: this) => void\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Subject, Subscription } from 'rxjs';\nimport { SnotifireConfig } from '../../models/snotifire-config.interface';\nimport { SnotifireEventType } from '../../models/snotifire-event.type';\nimport { SnotifireType } from '../../models/snotifire.type';\n\n/**\n * Toast main model\n */\nexport class NotifireModel {\n  /**\n   * Emits NotifireEventType\n   */\n  readonly eventEmitter = new Subject();\n\n  /**\n   * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n   */\n  private eventsHolder: Subscription[] = [];\n\n  /**\n   * Toast prompt value\n   */\n  value?: string;\n\n  /**\n   * Toast validator\n   */\n  valid: boolean = true;\n\n  constructor(\n    public readonly id: number,\n    public readonly title: string,\n    public readonly body: string,\n    public readonly config: SnotifireConfig\n  ) {\n    if (this.config && this.config.type === SnotifireType.PROMPT) {\n      this.value = '';\n    }\n    this.on(SnotifireEventType.HIDDEN, () => {\n      this.eventsHolder.forEach((subscription: Subscription) => {\n        subscription.unsubscribe();\n      });\n    });\n  }\n  /**\n   * Subscribe to toast events\n   * @returns this\n   * @param event NotificationEventType\n   * @param action (toast: this) => void\n   */\n  on(event: SnotifireEventType, action: (toast: this) => void): this {\n    this.eventsHolder.push(\n      this.eventEmitter.subscribe((e: SnotifireEventType) => {\n        if (e === event) {\n          action(this);\n        }\n      })\n    );\n    return this;\n  }\n\n  /**\n   * Tests if a toast equals this toast.\n   * @returns boolean true then equals else false.\n   * @param toast notifire-toast\n   */\n  equals(toast: NotifireModel): boolean {\n    return this.config && toast.config\n      ? this.body === toast.body &&\n          this.title === toast.title &&\n          this.config.type === toast.config.type\n      : this.body === toast.body && this.title === toast.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptComponent.html":{"url":"components/PromptComponent.html","title":"component - PromptComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotify-prompt\n            \n\n\n\n\n            \n                templateUrl\n                ./prompt.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputType\n                            \n                            \n                                isPromptFocused\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:22\n                            \n                        \n                \n                    \n                        Get PROMPT placeholder\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inputType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SnotifireEventType.INPUT\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPromptFocused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:26\n                        \n                    \n\n            \n                \n                    Is PROMPT focused\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { SnotifireEventType } from '../../models';\nimport { NotifireModel } from '../toast/notifire-toast.model';\n\n@Component({\n  selector: 'ngx-snotify-prompt',\n  templateUrl: './prompt.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PromptComponent {\n  inputType = SnotifireEventType.INPUT;\n  /**\n   * Get PROMPT placeholder\n   */\n  @Input() toast!: NotifireModel;\n  /**\n   * Is PROMPT focused\n   */\n  isPromptFocused = false;\n\n  getValue($event: any): string {\n    return $event.target.value;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            {{ toast.config.placeholder | truncate }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ toast.config.placeholder | truncate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PromptComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireAnimate.html":{"url":"interfaces/SnotifireAnimate.html","title":"interface - SnotifireAnimate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireAnimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation params\nIf you want more animations, you can include animate.css or write animations yourself in your styles\nThen you'll need to share this styles with snotify component [ng-snotify] component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enter\n                                        \n                                \n                                \n                                        \n                                            exit\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    In animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Out animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Animation time in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SnotifireAnimate {\n  /**\n   * In animation\n   */\n  enter: string;\n  /**\n   * Out animation\n   */\n  exit: string;\n  /**\n   * Animation time in ms\n   */\n  time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireConfig.html":{"url":"interfaces/SnotifireConfig.html","title":"interface - SnotifireConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            animation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            buttons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closeOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pauseOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showProgressBar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            titleMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animation:         SnotifireAnimate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireAnimate\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Animation config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Backdrop opacity.\n\nRange: 0.0 - 1.0.\nDisabled: -1\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast body maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttons:         ButtonsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Buttons config.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the notification should dissapear on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     string | SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html string witch overrides toast content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Activate custom icon.\nYou should provide full tag, e.g.\n\n    \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom icon class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the timeout countdown should pause on hober\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder for Prompt toast\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toasts position on screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable/Disable progress bar.\nDisabled if timeout is 0.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification timeout in milliseconds.\nDisable timeout = 0\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast title maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnotifireType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of toast, affects toast style.\nIt's not recommended to change it.\nDepends on toast type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { ButtonsConfig } from '../components/buttons/buttons-config.interface';\nimport { SnotifireAnimate } from './snotifire-animate.interface';\nimport { SnotificationPositionType } from './snotifire-position.type';\nimport { SnotifireType } from './snotifire.type';\n\nexport interface SnotifireConfig {\n  /**\n   * Notification timeout in milliseconds.\n   * Disable timeout = 0\n   */\n  timeout?: number;\n\n  /**\n   * Enable/Disable progress bar.\n   * Disabled if timeout is 0.\n   */\n  showProgressBar?: boolean;\n\n  /**\n   * Type of toast, affects toast style.\n   * It's not recommended to change it.\n   * Depends on toast type.\n   */\n  type?: SnotifireType;\n\n  /**\n   * If the notification should dissapear on click\n   */\n  closeOnClick?: boolean;\n\n  /**\n   * If the timeout countdown should pause on hober\n   */\n  pauseOnHover?: boolean;\n\n  /**\n   * Buttons config.\n   */\n  buttons?: ButtonsConfig[];\n\n  /**\n   * Placeholder for Prompt toast\n   */\n  placeholder?: string;\n  /**\n   * Toast title maximum length\n   */\n  titleMaxLength?: number;\n  /**\n   * Toast body maximum length\n   */\n  bodyMaxLength?: number;\n  /**\n   * Activate custom icon.\n   * You should provide full tag, e.g.\n   * ```html\n   * \n   * ```\n   * ```html\n   * \n   *     \n   * \n   * ```\n   */\n  icon?: string;\n\n  /**\n   * Custom icon class.\n   */\n  iconClass?: string;\n\n  /**\n   * Animation config\n   */\n  animation?: SnotifireAnimate;\n  /**\n   * Html string witch overrides toast content\n   */\n  html?: string | SafeHtml;\n  /**\n   * Toasts position on screen\n   */\n  position?: SnotificationPositionType;\n\n  /**\n   * Backdrop opacity.\n   * * **Range:** `0.0 - 1.0`.\n   * * **Disabled:** `-1`\n   */\n  backdrop?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnotifireModel.html":{"url":"classes/SnotifireModel.html","title":"class - SnotifireModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnotifireModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                body\n                            \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                            \n                                    Public\n                                    Optional\n                                html\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type?: SnotifireType, title?: string, body?: string, config?: SnotifireConfig, html?: string | SafeHtml)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        SnotifireType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        html\n                                                  \n                                                        \n                                                                    string | SafeHtml\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:15\n                        \n                    \n\n            \n                \n                    Notification message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:19\n                        \n                    \n\n            \n                \n                    Config object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | SafeHtml\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:23\n                        \n                    \n\n            \n                \n                    Html content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:11\n                        \n                    \n\n            \n                \n                    Notification Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireType\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { SnotifireConfig } from './snotifire-config.interface';\nimport { SnotifireType } from './snotifire.type';\n\nexport class SnotifireModel {\n  constructor(\n    public type?: SnotifireType,\n    /**\n     * Notification Title\n     */\n    public title?: string,\n    /**\n     * Notification message\n     */\n    public body?: string,\n    /**\n     * Config object\n     */\n    public config?: SnotifireConfig,\n    /**\n     * Html content\n     */\n    public html?: string | SafeHtml\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireNotifications.html":{"url":"interfaces/SnotifireNotifications.html","title":"interface - SnotifireNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            centerBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        centerBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotifireModel } from '../components/toast/notifire-toast.model';\n\nexport interface SnotifireNotifications {\n  leftTop?: NotifireModel[];\n  leftCenter?: NotifireModel[];\n  leftBottom?: NotifireModel[];\n\n  rightTop?: NotifireModel[];\n  rightCenter?: NotifireModel[];\n  rightBottom?: NotifireModel[];\n\n  centerTop?: NotifireModel[];\n  centerCenter?: NotifireModel[];\n  centerBottom?: NotifireModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-toast\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationFrame\n                            \n                            \n                                state\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initToast\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onExitTransitionEnd\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                onRemove\n                            \n                            \n                                startTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:26\n                            \n                        \n                \n                    \n                        Get toast from notifications array\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initToast\n                        \n                    \n                \n            \n            \n                \ninitToast()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:165\n                \n            \n\n\n            \n                \n                    Initialize base toast config\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:115\n                \n            \n\n\n            \n                \n                    Trigger OnClick lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onExitTransitionEnd\n                        \n                    \n                \n            \n            \n                \nonExitTransitionEnd()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:149\n                \n            \n\n\n            \n                \n                    Remove toast completely after animation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:124\n                \n            \n\n\n            \n                \n                    Trigger onHoverEnter lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:134\n                \n            \n\n\n            \n                \n                    Trigger onHoverLeave lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemove\n                        \n                    \n                \n            \n            \n                \nonRemove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:91\n                \n            \n\n\n            \n                \n                    Trigger beforeDestroy lifecycle. Removes toast\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTimeout\n                        \n                    \n                \n            \n            \n                \nstartTimeout(startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:178\n                \n            \n\n\n            \n                \n                    Start progress bar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:32\n                        \n                    \n\n            \n                \n                    requestAnimationFrame id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:37\n                        \n                    \n\n            \n                \n                    Toast state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotifireType } from '../../models';\nimport { NotifireModel } from './notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'ngx-toast',\n  templateUrl: './toast.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  /**\n   * Get toast from notifications array\n   */\n  @Input() toast!: NotifireModel;\n  @Output() stateChanged = new EventEmitter();\n\n  /**\n   * requestAnimationFrame id\n   */\n  animationFrame!: number;\n\n  /**\n   * Toast state\n   */\n  state = {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  };\n\n  constructor(private readonly service: SnotificationService) {}\n\n  ngOnInit(): void {\n    this.service.toastChanged\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toast: NotifireModel) => {\n        console.log('toast');\n        if (this.toast.id === toast.id) {\n          this.initToast();\n        }\n      });\n\n    this.service.toastDeleted\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((id) => {\n        if (this.toast.id === id) {\n          this.onRemove();\n        }\n      });\n    if (this.toast && this.toast.config && !this.toast.config.timeout) {\n      this.toast.config.showProgressBar = false;\n    }\n\n    this.toast.eventEmitter.next(SnotifireEventType.MOUNTED);\n    this.state.animation = 'notifire-toast--in';\n  }\n  ngAfterContentInit() {\n    if (\n      this.service.defaultConfig.snotifireConfig &&\n      this.service.defaultConfig.snotifireConfig.animation\n    ) {\n      setTimeout(() => {\n        this.stateChanged.emit(SnotifireEventType.BEFORE_SHOW);\n        this.toast.eventEmitter.next(SnotifireEventType.BEFORE_SHOW);\n        this.state.animation =\n          this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.enter\n            ? this.toast.config.animation.enter\n            : '';\n      }, this.service.defaultConfig.snotifireConfig.animation.time / 5); // time to show toast push animation (notifire-toast--in)\n    }\n  }\n  /**\n   * Trigger beforeDestroy lifecycle. Removes toast\n   */\n  onRemove() {\n    this.state.isDestroying = true;\n    this.toast.eventEmitter.next(SnotifireEventType.BEFORE_HIDE);\n    this.stateChanged.emit(SnotifireEventType.BEFORE_HIDE);\n    this.state.animation =\n      (this.toast.config &&\n        this.toast.config.animation &&\n        this.toast.config.animation.exit) ||\n      '';\n    setTimeout(() => {\n      this.stateChanged.emit(SnotifireEventType.HIDDEN);\n      this.state.animation = 'notifire-toast--out';\n      this.toast.eventEmitter.next(SnotifireEventType.HIDDEN);\n      setTimeout(\n        () => this.service.remove(this.toast.id, true),\n        this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.time / 2\n      );\n    }, this.toast.config && this.toast.config.animation && this.toast.config.animation.time / 2);\n  }\n  /**\n   * Trigger OnClick lifecycle\n   */\n  onClick() {\n    this.toast.eventEmitter.next(SnotifireEventType.CLICK);\n    if (this.toast && this.toast.config && this.toast.config.closeOnClick) {\n      this.service.remove(this.toast.id);\n    }\n  }\n  /**\n   * Trigger onHoverEnter lifecycle\n   */\n  onMouseEnter() {\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_ENTER);\n    if (this.toast && this.toast.config && this.toast.config.pauseOnHover) {\n      this.state.paused = true;\n    }\n  }\n\n  /**\n   * Trigger onHoverLeave lifecycle\n   */\n  onMouseLeave() {\n    if (\n      this.toast &&\n      this.toast.config &&\n      this.toast.config.pauseOnHover &&\n      this.toast.config.timeout\n    ) {\n      this.state.paused = false;\n      this.startTimeout(this.toast.config.timeout * this.state.progress);\n    }\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_LEAVE);\n  }\n  /**\n   * Remove toast completely after animation\n   */\n  onExitTransitionEnd() {\n    if (this.state.isDestroying) {\n      return;\n    }\n    this.initToast();\n    this.toast.eventEmitter.next(SnotifireEventType.SHOWN);\n  }\n\n  /*\n   Common\n   */\n\n  /**\n   * Initialize base toast config\n   *\n   */\n  initToast(): void {\n    if (\n      (this.toast && this.toast.config && this.toast.config.timeout\n        ? this.toast.config.timeout\n        : 0) > 0\n    ) {\n      this.startTimeout(0);\n    }\n  }\n  /**\n   * Start progress bar\n   * @param startTime number\n   */\n  startTimeout(startTime: number = 0) {\n    const start = performance.now();\n    const calculate = () => {\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        const runtime = timestamp + startTime - start;\n        const progress = Math.min(\n          runtime /\n            (this.toast && this.toast.config && this.toast.config.timeout\n              ? this.toast.config.timeout\n              : 1),\n          1\n        );\n        if (this.state.paused) {\n          cancelAnimationFrame(this.animationFrame);\n        } else if (\n          runtime \n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                {{ toast.title | truncate: toast.config.titleMaxLength }}\n            \n            \n                {{ toast.body | truncate: toast.config.bodyMaxLength }}\n            \n            \n            \n            \n            \n                \n            \n        \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ toast.title | truncate: toast.config.titleMaxLength }}                                        {{ toast.body | truncate: toast.config.bodyMaxLength }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastData.html":{"url":"interfaces/ToastData.html","title":"interface - ToastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, ...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_TRAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '...'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\n/**\n * Truncate toast text pipe\n */\nexport class TruncatePipe implements PipeTransform {\n  private readonly DEFAULT_LIMIT = 40;\n  private readonly DEFAULT_TRAIL = '...';\n  transform(value: string, ...args: Array): any {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : this.DEFAULT_LIMIT;\n\n    return value.length > limit\n      ? value.substring(0, limit) +\n          (args.length > 1 ? args[1] : this.DEFAULT_TRAIL)\n      : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualConfig.html":{"url":"interfaces/VisualConfig.html","title":"interface - VisualConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCloseOnClick\n                                        \n                                \n                                \n                                        \n                                            isFilterDuplicates\n                                        \n                                \n                                \n                                        \n                                            isNewItemsOnTop\n                                        \n                                \n                                \n                                        \n                                            isPauseOnHover\n                                        \n                                \n                                \n                                        \n                                            isShowProgressBar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCloseOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCloseOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFilterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFilterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewItemsOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNewItemsOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isShowProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isShowProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nv1.0.0\n\nMigrating from artemsky on angular v14\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n            \n            interface\n            ButtonsConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n            \n            component\n            ButtonsComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n            \n            component\n            NgxSnotifireComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n            \n            component\n            PromptComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n            \n            class\n            NotifireModel\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n            \n            function\n            SetToastType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n            \n            function\n            TransformArgument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n            \n            interface\n            NotificationDefaults\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n            \n            interface\n            NotificationGlobalConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n            \n            variable\n            ToastDefaults\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n            \n            interface\n            SnotifireAnimate\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n            \n            interface\n            SnotifireConfig\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n            \n            interface\n            SnotifireNotifications\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n            \n            class\n            SnotifireModel\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/services/notification.service.ts\n            \n            injectable\n            SnotificationService\n            \n                84 %\n                (44/52)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            mergeDeep\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            uuid\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            FunctionalConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationFormValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            ToastData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            VisualConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.7\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/material : ^14.2.7\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            graceful-fs : ^4.2.10\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SnotificationPositionType   (projects/.../snotifire-position.type.ts)\n                        \n                        \n                            SnotifireEventType   (projects/.../snotifire-event.type.ts)\n                        \n                        \n                            SnotifireType   (projects/.../snotifire.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/models/snotifire-position.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotificationPositionType\n                    \n                \n                        \n                            \n                                 LEFT_TOP\n                            \n                        \n                        \n                            \n                                Value : leftTop\n                            \n                        \n                        \n                            \n                                 LEFT_CENTER\n                            \n                        \n                        \n                            \n                                Value : leftCenter\n                            \n                        \n                        \n                            \n                                 LEFT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : leftBottom\n                            \n                        \n                        \n                            \n                                 RIGHT_TOP\n                            \n                        \n                        \n                            \n                                Value : rightTop\n                            \n                        \n                        \n                            \n                                 RIGHT_CENTER\n                            \n                        \n                        \n                            \n                                Value : rightCenter\n                            \n                        \n                        \n                            \n                                 RIGHT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : rightBottom\n                            \n                        \n                        \n                            \n                                 CENTER_TOP\n                            \n                        \n                        \n                            \n                                Value : centerTop\n                            \n                        \n                        \n                            \n                                 CENTER_CENTER\n                            \n                        \n                        \n                            \n                                Value : centerCenter\n                            \n                        \n                        \n                            \n                                 CENTER_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : centerBottom\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire-event.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireEventType\n                    \n                \n                        \n                            \n                                 MOUNTED\n                            \n                        \n                        \n                            \n                                Value : mounted\n                            \n                        \n                        \n                            \n                                 BEFORE_SHOW\n                            \n                        \n                        \n                            \n                                Value : beforeShow\n                            \n                        \n                        \n                            \n                                 SHOWN\n                            \n                        \n                        \n                            \n                                Value : shown\n                            \n                        \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 CLICK\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n                        \n                            \n                                 MOUSE_ENTER\n                            \n                        \n                        \n                            \n                                Value : mouseenter\n                            \n                        \n                        \n                            \n                                 MOUSE_LEAVE\n                            \n                        \n                        \n                            \n                                Value : mouseleave\n                            \n                        \n                        \n                            \n                                 BEFORE_HIDE\n                            \n                        \n                        \n                            \n                                Value : beforeHide\n                            \n                        \n                        \n                            \n                                 HIDDEN\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 DESTROYED\n                            \n                        \n                        \n                            \n                                Value : destroyed\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireType\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 ASYNC\n                            \n                        \n                        \n                            \n                                Value : async\n                            \n                        \n                        \n                            \n                                 CONFIRM\n                            \n                        \n                        \n                            \n                                Value : confirm\n                            \n                        \n                        \n                            \n                                 PROMPT\n                            \n                        \n                        \n                            \n                                Value : prompt\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isObject   (projects/.../utils.ts)\n                        \n                        \n                            mergeDeep   (projects/.../utils.ts)\n                        \n                        \n                            SetToastType   (projects/.../set-toast-type.decorator.ts)\n                        \n                        \n                            TransformArgument   (projects/.../transform-argument.decorator.ts)\n                        \n                        \n                            uuid   (projects/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isObject\n                        \n                    \n                \n            \n            \n                \nisObject(item: any)\n                \n            \n\n\n\n\n            \n                \n                    Simple is object check.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeDeep\n                        \n                    \n                \n            \n            \n                \nmergeDeep(...sources: any)\n                \n            \n\n\n\n\n            \n                \n                    Deep merge objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array>\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n            \n                \nuuid()\n                \n            \n\n\n\n\n            \n                \n                    Generates random id\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number\n\n                    \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SetToastType\n                        \n                    \n                \n            \n            \n                \nSetToastType(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                    Defines toast style depending on method name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any\n\n                                    \n                                \n                                \n                                    propertyKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationType\n\n                                    \n                                \n                                \n                                    descriptor\n                                    \n                                            PropertyDescriptor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        PropertyDescriptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TransformArgument\n                        \n                    \n                \n            \n            \n                \nTransformArgument(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                    Transform arguments to Snotify object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any\n\n                                    \n                                \n                                \n                                    propertyKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SnotifyTypeType\n\n                                    \n                                \n                                \n                                    descriptor\n                                    \n                                            PropertyDescriptor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        PropertyDescriptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxSnotifire\nDemo project at https://ccpatrut.github.io/ngx-snotifire/\nFeatures\n\n8 types of toast notifications\nAbility to create toasts in different positions at the same time\nMany config options (icons, backdrop, timeout, position and much more)\nCustom fully controlled styling including animations\nRepository includes 3 different styles. So you can use on of them, or create your own\nCallbacks\nCustom HTML\n\nInstalation\nNPM\nnpm install ngx-snotifire\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.Copyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxSnotifireModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\nSnotificationService\n\nSnotificationService\n\nAppModule -->\n\nSnotificationService->AppModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.1-beta\n        \n            License : Apache-2.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            ToastDefaults   (projects/.../toast-defaults.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/lib/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ToastDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  global: {\n    newOnTop: true,\n    maxOnScreen: 8,\n    maxAtPosition: 8,\n    filterDuplicates: false,\n  },\n  toast: {\n    type: SnotifireType.INFO,\n    showProgressBar: true,\n    timeout: 5000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    bodyMaxLength: 150,\n    titleMaxLength: 16,\n    backdrop: -1,\n    icon: undefined,\n    iconClass: undefined,\n    html: undefined,\n    position: SnotificationPositionType.RIGHT_BOTTOM,\n    animation: { enter: 'fadeIn', exit: 'fadeOut', time: 400 },\n  },\n  type: {\n    [SnotifireType.PROMPT]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      placeholder: 'Enter answer here...',\n      type: SnotifireType.PROMPT,\n    },\n    [SnotifireType.CONFIRM]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      type: SnotifireType.CONFIRM,\n    },\n    [SnotifireType.SUCCESS]: {\n      type: SnotifireType.SUCCESS,\n    },\n    [SnotifireType.ERROR]: {\n      type: SnotifireType.ERROR,\n    },\n    [SnotifireType.WARNING]: {\n      type: SnotifireType.WARNING,\n    },\n    [SnotifireType.INFO]: {\n      type: SnotifireType.INFO,\n    },\n    [SnotifireType.ASYNC]: {\n      pauseOnHover: false,\n      closeOnClick: false,\n      timeout: 0,\n      showProgressBar: false,\n      type: SnotifireType.ASYNC,\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Snotify default configuration object\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
