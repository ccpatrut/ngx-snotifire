var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.661,1,0.857]],["body/components/AppComponent.html",[0,0.643,1,0.964,2,1.184,3,0.344,4,0.166,5,0.875,6,1.095,7,0.875,8,0.875,9,0.145,10,0.723,11,0.915,12,1.162,13,0.723,14,1.679,15,1.162,16,1.298,17,1.298,18,1.648,19,0.915,20,1.298,21,0.187,22,0.38,23,1.503,24,1.648,25,1.648,26,0.995,27,2.101,28,2.47,29,1.905,30,1.752,31,2.47,32,1.59,33,1.905,34,1.905,35,1.905,36,1.905,37,1.905,38,1.905,39,1.905,40,1.905,41,1.905,42,2.47,43,1.648,44,1.648,45,1.754,46,1.754,47,2.075,48,1.754,49,0.842,50,1.509,51,1.905,52,1.648,53,1.905,54,1.31,55,1.648,56,1.905,57,2.012,58,2.47,59,1.162,60,0.033,61,1.545,62,0.538,63,0.767,64,1.298,65,1.298,66,1.348,67,1.648,68,1.509,69,1.298,70,1.827,71,1.827,72,1.509,73,1.138,74,1.298,75,1.509,76,1.26,77,1.509,78,1.509,79,1.509,80,1.509,81,1.509,82,1.509,83,1.509,84,1.509,85,1.509,86,1.509,87,1.509,88,1.648,89,1.509,90,0.723,91,0.608,92,1.298,93,1.298,94,1.184,95,1.509,96,1.509,97,1.509,98,1.509,99,1.509,100,1.509,101,1.509,102,1.509,103,1.509,104,1.509,105,1.509,106,1.509,107,0.595,108,0.369,109,2.101,110,0.793,111,0.662,112,0.723,113,0.559,114,0.515,115,0.995,116,0.515,117,0.608,118,0.608,119,1.138,120,0.515,121,1.298,122,0.559,123,0.306,124,0.209,125,1.236,126,0.793,127,0.793,128,0.793,129,2.101,130,1.717,131,1.263,132,2.572,133,1.865,134,0.793,135,0.793,136,0.793,137,0.793,138,0.793,139,0.793,140,1.084,141,0.793,142,1.298,143,0.793,144,2.028,145,0.793,146,1.481,147,0.436,148,0.793,149,1.298,150,1.905,151,1.298,152,1.298,153,1.298,154,1.298,155,0.842,156,1.669,157,0.793,158,0.793,159,1.263,160,0.723,161,1.263,162,0.723,163,0.793,164,0.793,165,0.793,166,1.298,167,0.793,168,0.793,169,1.184,170,1.367,171,0.793,172,0.793,173,0.793,174,0.662,175,0.662,176,0.793,177,0.793,178,0.793,179,0.793,180,0.793,181,0.662,182,0.793,183,0.793,184,0.662,185,0.793,186,0.793,187,0.793,188,0.793,189,0.793,190,1.084,191,0.793,192,1.754,193,0.793,194,0.662,195,0.793,196,0.793,197,2.101,198,2.256,199,2.485,200,0.793,201,0.793,202,0.793,203,1.729,204,1.205,205,1.376,206,0.857,207,1.61,208,0.793,209,0.793,210,1.298,211,1.363,212,1.298,213,1.916,214,0.793,215,2.266,216,1.376,217,0.793,218,0.559,219,0.793,220,1.298,221,1.298,222,1.298,223,0.793,224,0.793,225,1.737,226,1.298,227,0.793,228,1.855,229,1.184,230,0.793,231,1.648,232,1.298,233,0.907,234,0.723,235,0.793,236,0.608,237,0.723,238,0.723,239,0.793,240,0.793,241,0.793,242,1.648,243,1.648,244,1.648,245,1.737,246,0.723,247,0.793,248,1.298,249,0.793,250,0.793,251,1.184,252,1.59,253,0.842,254,1.298,255,1.084,256,1.343,257,1.298,258,1.298,259,1.184,260,1.084,261,0.793,262,1.752,263,1.737,264,1.825,265,1.905,266,1.298,267,1.648,268,1.905,269,0.793,270,0.793,271,0.793,272,0.915,273,1.503,274,0.793,275,0.793,276,0.662,277,0.793,278,0.793,279,1.298,280,1.298,281,0.608,282,0.662,283,0.723,284,0.793,285,2.523,286,1.916,287,1.084,288,0.793,289,0.793,290,0.793,291,0.793,292,0.793,293,0.793,294,0.793,295,0.385,296,0.662,297,0.793,298,1.34,299,1.363,300,2.47,301,3.624,302,2.062,303,1.793,304,1.793,305,1.592,306,2.062,307,2.47,308,2.617,309,2.617,310,2.062,311,2.062,312,3.624,313,1.793,314,2.47,315,3.624,316,2.062,317,2.062,318,1.432,319,2.47,320,1.26,321,3.624,322,1.509,323,2.617,324,3.136,325,3.136,326,3.624,327,3.624,328,3.289,329,4.531,330,3.997,331,1.509,332,1.509,333,1.509,334,1.509,335,1.509,336,1.509,337,2.47,338,2.47,339,3.624,340,2.062,341,1.509,342,1.509,343,2.062,344,2.47,345,4.292,346,1.509,347,2.062,348,1.509,349,1.509,350,1.509,351,2.47,352,1.509,353,1.509,354,2.47,355,1.509,356,1.509,357,1.095,358,1.509,359,1.509,360,1.509,361,1.509,362,1.509,363,1.509,364,0.875,365,0.875,366,2.101,367,0.875,368,0.875,369,0.608,370,0.793,371,0.875,372,0.608,373,0.875,374,0.608,375,0.875,376,0.608,377,0.875,378,0.875,379,0.012,380,0.012]],["title/modules/AppModule.html",[381,2.689,382,2.076]],["body/modules/AppModule.html",[1,1.7,3,0.422,4,0.422,9,0.37,54,1.743,60,0.033,107,0.897,108,0.939,111,1.685,112,1.841,113,1.818,114,1.31,118,1.977,119,1.542,120,1.674,123,0.476,124,0.532,273,1.841,379,0.024,380,0.024,382,4.096,383,2.226,384,2.845,385,3.206,386,3.206,387,3.206,388,3.206,389,3.206,390,3.493,391,3.563,392,2.788,393,1.841,394,3.84,395,4.097,396,4.097,397,4.097,398,4.909,399,4.097,400,4.909,401,4.909,402,3.84,403,4.909,404,4.909,405,3.84,406,3.84,407,4.909,408,3.84,409,4.909,410,3.84,411,4.909,412,3.84,413,3.84,414,4.909,415,3.84,416,4.909,417,3.84,418,4.909,419,4.909,420,3.84,421,2.788,422,3.84,423,3.84]],["title/components/ButtonsComponent.html",[0,0.661,369,1.298]],["body/components/ButtonsComponent.html",[0,1.166,1,1.012,2,2.339,3,0.418,4,0.418,5,2.206,7,2.206,8,2.206,9,0.367,12,1.41,13,1.824,14,2.265,15,1.41,19,1.808,21,0.472,26,1.966,49,1.298,54,1.643,57,1.837,59,1.41,60,0.033,61,1.837,62,0.536,63,0.93,70,1.298,71,1.298,107,0.747,108,0.93,119,1.692,123,0.472,124,0.527,125,1.298,204,1.298,206,1.023,218,1.808,233,1.1,252,1.996,253,1.664,256,1.808,272,1.808,276,2.638,357,3.542,364,2.206,365,2.206,366,3.294,367,2.206,368,2.206,369,2.289,370,2.832,371,2.206,372,1.533,373,2.206,374,1.533,375,2.206,376,1.533,377,2.206,378,2.206,379,0.024,380,0.024,424,0.967,425,3.177,426,4.074,427,4.074,428,3.146,429,3.146,430,4.88,431,3.542,432,2.762,433,4.88,434,2.17,435,3.805,436,3.177,437,2.453,438,2.453,439,2,440,2.453,441,3.177,442,3.177,443,4.88]],["title/interfaces/ButtonsConfig.html",[295,0.31,444,2.076]],["body/interfaces/ButtonsConfig.html",[3,0.479,4,0.479,9,0.42,21,0.54,22,0.818,60,0.033,62,0.629,63,1.458,66,1.458,70,1.487,71,1.812,107,0.604,123,0.54,205,2.73,206,0.742,246,2.547,252,2.21,262,2.372,264,2.506,295,0.42,299,1.954,305,3.425,357,3.857,379,0.026,380,0.026,424,0.742,434,2.14,438,2.81,439,2.292,444,3.425,445,1.261,446,3.639,447,2.81,448,3.857,449,2.81]],["title/interfaces/FunctionalConfig.html",[45,1.413,295,0.31]],["body/interfaces/FunctionalConfig.html",[0,0.659,1,0.559,3,0.231,4,0.231,9,0.202,10,1.007,11,0.778,12,1.189,14,0.778,15,0.778,16,1.104,17,1.104,18,1.104,19,0.778,20,1.104,21,0.26,22,0.494,23,1.007,24,1.104,25,1.104,27,2.048,29,1.104,30,1.835,32,0.922,33,1.104,34,1.104,35,1.104,36,1.104,37,1.104,38,1.104,39,1.104,40,1.104,41,1.104,43,1.104,44,1.104,45,1.914,46,1.709,47,2.174,48,1.709,49,0.716,51,1.687,52,1.104,53,1.687,54,1.126,55,1.104,56,1.687,60,0.033,62,0.566,64,1.104,65,1.104,66,1.26,67,1.104,69,1.104,71,1.095,73,1.223,74,1.104,88,1.687,92,1.104,93,1.104,94,1.007,107,0.687,108,0.514,109,2.469,110,1.104,111,0.922,112,1.007,113,0.778,114,0.716,115,1.293,116,0.716,117,0.846,118,0.846,119,0.66,120,0.716,121,1.687,122,0.778,123,0.398,124,0.291,125,1.487,126,1.104,127,1.104,128,1.104,129,2.469,130,1.757,131,0.846,132,2.863,133,1.835,134,1.104,135,1.104,136,1.104,137,1.104,138,1.104,139,1.104,140,1.409,141,1.104,142,2.469,143,1.104,144,2.276,145,1.104,146,1.835,147,0.607,148,1.104,149,1.687,150,2.141,151,1.687,152,1.687,153,1.687,154,1.687,155,1.095,156,1.328,157,1.104,158,1.104,159,1.569,160,1.007,161,1.569,162,1.007,163,1.104,164,1.104,165,1.104,166,1.687,167,1.104,168,1.104,169,1.539,170,1.537,171,1.104,172,1.104,173,1.104,174,0.922,175,0.922,176,1.104,177,1.104,178,1.104,179,1.104,180,1.104,181,0.922,182,1.104,183,1.104,184,0.922,185,1.104,186,1.104,187,1.104,188,1.104,189,1.104,190,1.409,191,1.104,192,2.062,193,1.104,194,0.922,195,1.104,196,1.104,197,2.469,198,2.604,199,2.793,200,1.104,201,1.104,202,1.104,203,1.995,204,1.036,205,1.709,206,0.877,207,0.846,208,1.104,209,1.104,210,1.687,211,1.328,212,1.687,213,2.252,214,1.104,215,2.374,216,1.709,217,1.104,218,0.778,219,1.104,220,1.687,221,1.687,222,1.687,223,1.104,224,1.104,225,1.539,226,1.687,227,1.104,228,1.895,229,1.539,230,1.104,231,2.048,232,1.687,233,0.928,234,1.007,235,1.104,236,0.846,237,1.007,238,1.007,239,1.104,240,1.104,241,1.104,242,2.048,243,2.048,244,2.048,245,1.539,246,1.007,247,1.104,248,1.687,249,1.104,250,1.104,251,1.539,252,1.741,253,1.095,254,1.687,255,1.409,256,1.189,257,1.687,258,1.687,259,1.539,260,1.409,261,1.104,262,1.835,263,2.09,264,2.076,265,2.292,266,1.687,267,2.048,268,1.687,269,1.104,270,1.104,271,1.104,272,1.189,273,1.007,274,1.104,275,1.104,276,0.922,277,1.104,278,1.104,279,1.687,280,1.687,281,0.846,282,0.922,283,1.007,284,1.104,285,1.007,286,1.007,287,0.922,288,1.104,289,1.104,290,1.104,291,1.104,292,1.104,293,1.104,294,1.104,295,0.453,296,0.922,297,2.292,298,1.56,299,1.602,379,0.016,380,0.016,445,0.607]],["title/pipes/KeysPipe.html",[450,1.693,451,1.867]],["body/pipes/KeysPipe.html",[3,0.505,4,0.505,9,0.443,11,1.704,13,2.205,26,1.853,57,1.569,59,1.704,60,0.033,61,2,62,0.505,63,1.124,70,1.569,91,2.363,107,0.638,108,1.124,123,0.57,124,0.638,155,1.569,170,1.587,379,0.027,380,0.027,424,0.934,450,3.083,451,3.181,452,2.965,453,3.839,454,5.865,455,3.339,456,4.58,457,4.599,458,4.58,459,4.599,460,4.599,461,2.205,462,4.599]],["title/components/NgxSnotifireComponent.html",[0,0.661,372,1.298]],["body/components/NgxSnotifireComponent.html",[0,0.804,1,0.564,2,1.548,3,0.233,4,0.233,5,1.228,7,1.228,8,1.228,9,0.204,11,1.197,12,1.451,13,1.015,14,1.915,15,0.785,19,1.197,21,0.262,22,0.498,26,1.301,30,1.451,32,1.922,49,0.722,54,1.267,57,2.038,59,1.623,60,0.033,61,1.695,62,0.631,63,1.071,70,1.763,71,1.695,90,1.877,91,1.577,107,0.689,108,0.518,115,2.082,116,1.494,119,1.623,120,1.102,122,0.785,123,0.262,124,0.294,125,1.335,146,2.023,147,1.132,156,1.335,159,1.765,160,1.015,161,1.765,162,1.015,170,1.132,203,1.765,204,0.859,206,0.803,211,1.102,218,1.197,233,0.613,253,1.102,256,1.197,298,1.482,310,1.768,364,1.228,365,1.228,366,2.539,367,1.228,368,1.228,369,0.853,370,2.058,371,1.228,372,1.765,373,1.228,374,0.853,375,1.228,376,0.853,377,1.228,378,1.228,379,0.016,380,0.016,424,1.024,428,2.082,429,2.082,432,1.538,434,2.199,437,1.365,438,1.365,439,1.113,440,1.365,449,2.082,450,2.801,463,5.023,464,5.023,465,1.768,466,3.269,467,3.916,468,3.23,469,3.916,470,3.916,471,3.916,472,3.916,473,4.716,474,3.423,475,2.842,476,3.916,477,3.916,478,4.38,479,3.269,480,3.23,481,2.697,482,3.23,483,2.118,484,3.519,485,2.118,486,4.043,487,2.118,488,2.118,489,2.118,490,3.23,491,2.118,492,3.23,493,3.746,494,2.345,495,2.697,496,1.418,497,3.23,498,3.23,499,2.118,500,3.23,501,3.656,502,2.524,503,2.697,504,2.118,505,2.118,506,5.328,507,5.328,508,2.118,509,2.118,510,2.118,511,3.269,512,2.118,513,2.118,514,2.524,515,2.118,516,2.697,517,2.697,518,2.697,519,1.768,520,1.538,521,1.538,522,2.118,523,2.118,524,2.118,525,1.768,526,2.118,527,2.118,528,3.916,529,2.118,530,3.23,531,3.916,532,3.916,533,3.23,534,3.916,535,3.23,536,3.23,537,2.118,538,2.697,539,4.38,540,2.717,541,2.118,542,2.118,543,2.118,544,2.118,545,2.118,546,3.269,547,3.23,548,2.118,549,2.118,550,2.118,551,2.118,552,3.23,553,3.23,554,2.118,555,2.118,556,2.118,557,2.118,558,2.118,559,2.118,560,2.118,561,4.716,562,2.118,563,2.118,564,1.768,565,3.23]],["title/modules/NgxSnotifireModule.html",[381,2.689,390,1.867]],["body/modules/NgxSnotifireModule.html",[2,1.914,3,0.439,4,0.439,9,0.385,26,1.609,54,1.455,57,1.362,60,0.033,70,1.362,107,0.826,108,0.976,123,0.495,124,0.553,170,1.155,369,2.452,372,2.588,374,2.452,376,2.452,379,0.025,380,0.025,383,2.315,384,2.917,390,3.794,391,3.652,392,2.898,393,1.914,395,4.2,396,3.333,397,3.333,399,4.599,424,0.856,440,2.574,451,3.528,452,2.574,566,3.333,567,3.333,568,3.333,569,3.528,570,5.031,571,3.993,572,5.031,573,5.031,574,5.509,575,3.993,576,5.509,577,5.031,578,3.333]],["title/interfaces/NotificationConfig.html",[48,1.413,295,0.31]],["body/interfaces/NotificationConfig.html",[0,0.665,1,0.566,3,0.233,4,0.233,9,0.205,10,1.019,11,0.787,12,1.2,14,0.787,15,0.787,16,1.117,17,1.117,18,1.117,19,0.787,20,1.117,21,0.263,22,0.499,23,1.019,24,1.117,25,1.117,27,2.062,29,1.117,30,1.844,32,0.933,33,1.117,34,1.117,35,1.117,36,1.117,37,1.117,38,1.117,39,1.117,40,1.117,41,1.117,43,1.117,44,1.117,45,1.722,46,1.722,47,2.184,48,1.926,49,0.725,51,1.702,52,1.117,53,1.702,54,1.135,55,1.117,56,1.702,60,0.033,62,0.519,64,1.117,65,1.117,66,1.265,67,1.117,69,1.117,71,1.105,73,1.232,74,1.117,88,1.702,92,1.117,93,1.117,94,1.019,107,0.69,108,0.52,109,2.482,110,1.117,111,0.933,112,1.019,113,0.787,114,0.725,115,1.305,116,0.725,117,0.856,118,0.856,119,0.668,120,0.725,121,1.702,122,0.787,123,0.401,124,0.295,125,1.496,126,1.117,127,1.117,128,1.117,129,2.482,130,1.765,131,0.856,132,2.872,133,1.844,134,1.117,135,1.117,136,1.117,137,1.117,138,1.117,139,1.117,140,1.421,141,1.117,142,1.702,143,1.117,144,2.149,145,1.117,146,1.454,147,0.615,148,1.117,149,1.702,150,2.149,151,1.702,152,1.702,153,1.702,154,1.702,155,1.105,156,1.338,157,1.117,158,1.117,159,2.005,160,1.019,161,2.005,162,1.019,163,1.117,164,1.117,165,1.117,166,1.702,167,1.117,168,1.117,169,1.552,170,1.542,171,1.117,172,1.117,173,1.117,174,0.933,175,0.933,176,1.117,177,1.117,178,1.117,179,1.117,180,1.117,181,0.933,182,1.117,183,1.117,184,0.933,185,1.117,186,1.117,187,1.117,188,1.117,189,1.117,190,1.421,191,1.117,192,2.073,193,1.117,194,0.933,195,1.117,196,1.117,197,2.482,198,2.616,199,2.804,200,1.117,201,1.117,202,1.117,203,2.005,204,1.044,205,1.722,206,0.881,207,0.856,208,1.117,209,1.117,210,1.702,211,1.338,212,1.702,213,2.264,214,1.117,215,2.385,216,1.722,217,1.117,218,0.787,219,1.117,220,1.702,221,1.702,222,1.702,223,1.117,224,1.117,225,1.552,226,1.702,227,1.117,228,1.901,229,1.552,230,1.117,231,2.062,232,1.702,233,0.937,234,1.019,235,1.117,236,0.856,237,1.019,238,1.019,239,1.117,240,1.117,241,1.117,242,2.062,243,2.062,244,2.062,245,1.552,246,1.019,247,1.117,248,1.702,249,1.117,250,1.117,251,1.552,252,1.75,253,1.105,254,1.702,255,1.421,256,1.2,257,1.702,258,1.702,259,1.552,260,1.421,261,1.117,262,1.844,263,2.103,264,2.085,265,2.306,266,1.702,267,2.062,268,1.702,269,1.117,270,1.117,271,1.117,272,1.2,273,1.019,274,1.117,275,1.117,276,0.933,277,1.117,278,1.117,279,1.702,280,1.702,281,0.856,282,0.933,283,1.019,284,1.117,285,1.019,286,1.019,287,0.933,288,1.117,289,1.117,290,1.117,291,1.117,292,1.117,293,1.117,294,1.117,295,0.455,296,0.933,297,1.117,298,1.483,299,1.611,379,0.016,380,0.016,445,0.615]],["title/interfaces/NotificationDefaults.html",[295,0.31,579,2.338]],["body/interfaces/NotificationDefaults.html",[3,0.491,4,0.491,9,0.431,21,0.554,22,0.831,60,0.033,62,0.706,63,1.529,66,1.092,73,2.019,107,0.748,123,0.554,174,2.777,295,0.431,379,0.027,380,0.027,424,0.761,445,1.292,461,2.585,496,1.961,521,3.244,579,3.915,580,3.73,581,3.476,582,3.877,583,4.502,584,3.476,585,4.468]],["title/interfaces/NotificationFormValue.html",[295,0.31,296,1.413]],["body/interfaces/NotificationFormValue.html",[0,0.665,1,0.566,3,0.233,4,0.233,9,0.205,10,1.019,11,0.787,12,1.2,14,0.787,15,0.787,16,1.117,17,1.117,18,1.117,19,0.787,20,1.117,21,0.263,22,0.499,23,1.019,24,1.117,25,1.117,27,2.062,29,1.117,30,1.844,32,0.933,33,1.117,34,1.117,35,1.117,36,1.117,37,1.117,38,1.117,39,1.117,40,1.117,41,1.117,43,1.117,44,1.117,45,1.722,46,1.722,47,2.487,48,1.722,49,0.725,51,1.702,52,1.117,53,1.702,54,1.135,55,1.117,56,1.702,60,0.033,62,0.519,64,1.117,65,1.117,66,1.265,67,1.117,69,1.117,71,1.105,73,1.232,74,1.117,88,1.702,92,1.117,93,1.117,94,1.019,107,0.69,108,0.52,109,2.482,110,1.117,111,0.933,112,1.019,113,0.787,114,0.725,115,1.768,116,0.725,117,0.856,118,0.856,119,0.668,120,0.725,121,1.702,122,0.787,123,0.401,124,0.295,125,1.496,126,1.117,127,1.117,128,1.117,129,2.482,130,1.765,131,0.856,132,2.872,133,1.844,134,1.117,135,1.117,136,1.117,137,1.117,138,1.117,139,1.117,140,1.421,141,1.117,142,1.702,143,1.117,144,2.149,145,1.117,146,1.454,147,0.615,148,1.117,149,1.702,150,2.149,151,1.702,152,1.702,153,1.702,154,1.702,155,1.105,156,1.697,157,1.117,158,1.117,159,1.581,160,1.019,161,1.581,162,1.019,163,1.117,164,1.117,165,1.117,166,1.702,167,1.117,168,1.117,169,1.552,170,1.542,171,1.117,172,1.117,173,1.117,174,0.933,175,0.933,176,1.117,177,1.117,178,1.117,179,1.117,180,1.117,181,0.933,182,1.117,183,1.117,184,0.933,185,1.117,186,1.117,187,1.117,188,1.117,189,1.117,190,1.421,191,1.117,192,2.073,193,1.117,194,0.933,195,1.117,196,1.117,197,2.482,198,2.616,199,2.804,200,1.117,201,1.117,202,1.117,203,2.005,204,1.044,205,1.722,206,0.881,207,0.856,208,1.117,209,1.117,210,1.702,211,1.338,212,1.702,213,2.264,214,1.117,215,2.385,216,1.722,217,1.117,218,0.787,219,1.117,220,1.702,221,1.702,222,1.702,223,1.117,224,1.117,225,1.552,226,1.702,227,1.117,228,1.901,229,1.552,230,1.117,231,2.062,232,1.702,233,0.937,234,1.019,235,1.117,236,0.856,237,1.019,238,1.019,239,1.117,240,1.117,241,1.117,242,2.062,243,2.062,244,2.062,245,1.552,246,1.019,247,1.117,248,1.702,249,1.117,250,1.117,251,1.552,252,1.75,253,1.105,254,1.702,255,1.421,256,1.2,257,1.702,258,1.702,259,1.552,260,1.421,261,1.117,262,1.844,263,2.103,264,2.085,265,2.306,266,1.702,267,2.062,268,1.702,269,1.117,270,1.117,271,1.117,272,1.2,273,1.019,274,1.117,275,1.117,276,0.933,277,1.117,278,1.117,279,1.702,280,1.702,281,0.856,282,0.933,283,1.019,284,1.117,285,1.019,286,1.019,287,0.933,288,1.117,289,1.117,290,1.117,291,1.117,292,1.117,293,1.117,294,1.117,295,0.455,296,1.421,297,1.117,298,1.324,299,1.611,379,0.016,380,0.016,445,0.615]],["title/interfaces/NotificationGlobalConfig.html",[295,0.31,582,2.076]],["body/interfaces/NotificationGlobalConfig.html",[3,0.382,4,0.382,9,0.335,21,0.43,22,0.708,60,0.033,62,0.644,63,1.485,123,0.43,130,1.568,131,1.853,133,1.704,156,2,159,2.362,161,2.21,175,2.408,181,2.408,206,1.078,211,1.871,216,2.408,285,2.811,295,0.335,298,1.56,299,2,308,5.07,309,4.895,311,3.839,313,3.338,323,3.839,328,3.338,379,0.023,380,0.023,393,2.204,424,0.591,445,1.005,447,2.239,493,3.537,496,1.525,517,3.839,518,3.839,581,2.239,582,2.964,586,2.9,587,3.474,588,4.599,589,4.599,590,4.599,591,4.599,592,3.983,593,3.839,594,3.338,595,3.839,596,4.58,597,2.666,598,4.58,599,4.599,600,4.599,601,3.839,602,4.599,603,5.487,604,4.58,605,3.839,606,4.599,607,4.599,608,4.599,609,4.599,610,3.839,611,4.599,612,4.599,613,4.599,614,4.599,615,4.599,616,4.599]],["title/classes/NotifireModel.html",[124,0.446,434,1.298]],["body/classes/NotifireModel.html",[3,0.304,4,0.304,9,0.267,21,0.343,22,0.606,26,1.586,30,1.696,49,1.342,57,2.048,59,1.696,60,0.033,61,1.562,62,0.652,63,1.288,66,1.451,70,1.562,71,1.7,73,1.654,90,2.195,91,2.318,107,0.691,116,1.796,122,1.026,123,0.343,124,0.384,125,2.114,130,1.796,133,1.951,150,2.009,155,1.342,170,1.138,206,1.082,211,1.342,228,1.796,260,1.727,264,2.009,298,1.327,299,1.866,318,2.282,370,2.069,379,0.019,380,0.019,424,1.032,434,2.122,448,2.01,449,2.952,475,2.857,486,2.01,496,2.009,502,2.952,503,3.286,511,4.162,514,2.952,521,2.857,538,2.312,584,1.785,617,2.01,618,5.063,619,2.312,620,3.936,621,3.936,622,5.063,623,3.822,624,4.579,625,3.619,626,4.579,627,5.473,628,2.77,629,3.936,630,2.77,631,2.77,632,2.77,633,3.936,634,3.936,635,2.77,636,3.936,637,3.936,638,3.936,639,3.286,640,2.77,641,2.77,642,3.936,643,2.77,644,3.936,645,2.77,646,3.936,647,3.936,648,2.77,649,3.936,650,3.936,651,2.77,652,1.605,653,2.77,654,3.936,655,3.936,656,2.01,657,2.77,658,2.77,659,2.77,660,2.77,661,2.77,662,2.77,663,2.77,664,2.77,665,3.936,666,3.286,667,3.936,668,3.286,669,2.77]],["title/components/PromptComponent.html",[0,0.661,374,1.298]],["body/components/PromptComponent.html",[0,1.092,1,0.987,2,2.301,3,0.407,4,0.407,5,2.151,7,2.151,8,2.151,9,0.357,12,1.374,13,1.778,14,2.251,15,1.374,19,1.779,21,0.46,22,0.739,26,1.934,57,1.919,59,1.374,60,0.033,61,1.815,62,0.527,63,0.907,66,1.174,70,1.265,90,2.301,91,1.934,107,0.738,108,0.907,116,1.265,119,1.831,123,0.46,124,0.514,155,1.637,170,1.073,204,1.277,206,0.958,233,1.539,256,1.779,272,1.779,281,1.934,318,3.461,364,2.151,365,2.151,366,3.262,367,2.151,368,2.151,369,1.495,370,1.95,371,2.151,372,1.495,373,2.151,374,2.267,375,2.151,376,1.495,377,2.151,378,2.151,379,0.024,380,0.024,424,0.992,426,4.007,427,4.007,428,3.095,429,3.095,431,3.485,434,2.144,436,3.097,437,2.391,438,2.391,439,1.95,502,2.391,520,2.693,670,3.097,671,4.801,672,5.322,673,5.322,674,4.801,675,3.71,676,4.801,677,3.71,678,4.801,679,3.71,680,3.71,681,4.801,682,3.71,683,4.801,684,3.485]],["title/interfaces/SnotifireAnimate.html",[295,0.31,685,2.076]],["body/interfaces/SnotifireAnimate.html",[0,1.096,3,0.483,4,0.483,6,3.877,9,0.424,21,0.545,22,0.823,60,0.032,62,0.632,66,1.524,123,0.545,233,1.545,236,1.772,260,1.93,282,2.626,283,2.108,295,0.424,298,1.531,379,0.026,380,0.026,393,2.56,424,0.749,445,1.272,496,1.93,595,3.671,597,3.613,685,3.443,686,2.549,687,3.671,688,4.066,689,4.398,690,4.459,691,3.671,692,4.398,693,4.398,694,4.398,695,4.398,696,4.398,697,4.994,698,5.342]],["title/interfaces/SnotifireConfig.html",[73,1.012,295,0.31]],["body/interfaces/SnotifireConfig.html",[3,0.302,4,0.302,9,0.265,21,0.341,22,0.603,60,0.033,62,0.702,63,1.585,66,1.504,73,1.23,107,0.728,113,1.019,114,0.938,115,2.003,120,1.336,123,0.341,124,0.543,130,1.336,131,2.003,133,1.451,140,2.182,144,2.44,146,2.023,147,1.133,156,1.862,184,2.182,190,2.182,192,2.182,194,2.182,204,1.528,206,1.047,207,1.578,228,1.695,234,1.878,252,2.023,281,2.2,286,2.383,295,0.265,298,1.612,299,1.993,303,2.844,304,2.844,305,2.525,306,3.27,313,2.844,318,2.271,379,0.019,380,0.019,421,2.844,424,0.468,444,3.205,445,0.796,447,1.774,493,2.525,501,3.27,540,2.613,584,1.774,593,3.27,652,2.882,685,3.205,686,1.595,688,3.52,699,4.795,700,4.15,701,3.918,702,3.918,703,3.918,704,4.971,705,4.971,706,3.918,707,4.15,708,3.918,709,3.918,710,3.918,711,4.15,712,3.918,713,3.918,714,3.918,715,3.918,716,3.918,717,3.918,718,3.918,719,3.918,720,3.27,721,3.918,722,3.918,723,3.918,724,2.752,725,2.752,726,2.752,727,2.297]],["title/classes/SnotifireModel.html",[117,1.298,124,0.446]],["body/classes/SnotifireModel.html",[3,0.414,4,0.414,9,0.363,21,0.467,22,0.747,49,1.655,57,2.045,59,1.397,60,0.033,61,1.286,62,0.691,63,1.549,66,1.558,73,1.84,107,0.744,113,1.397,114,1.286,117,1.955,120,1.286,123,0.467,124,0.523,130,2.08,131,2.281,133,2.171,204,1.623,207,1.955,228,2.08,263,2.808,379,0.024,380,0.024,424,1.038,461,2.326,584,2.431,617,2.737,622,5.388,652,3.396,707,4.891,727,3.148,728,3.148,729,3.771,730,3.771,731,3.771,732,4.852,733,3.771,734,3.771,735,3.771,736,3.771]],["title/interfaces/SnotifireNotifications.html",[295,0.31,484,2.076]],["body/interfaces/SnotifireNotifications.html",[3,0.454,4,0.454,9,0.399,21,0.513,22,0.792,60,0.032,62,0.697,63,1.605,107,0.573,123,0.513,295,0.399,379,0.025,380,0.025,424,0.704,434,2.678,439,2.175,445,1.196,484,3.316,594,4.252,686,2.398,737,3.454,738,4.89,739,4.89,740,4.89,741,4.89,742,4.89,743,4.89,744,4.89,745,4.89,746,4.137]],["title/components/ToastComponent.html",[0,0.661,376,1.298]],["body/components/ToastComponent.html",[0,0.796,1,0.555,2,1.531,3,0.229,4,0.229,5,1.21,7,1.21,8,1.21,9,0.201,11,1.183,12,1.437,13,1,14,1.905,15,0.773,19,1.183,21,0.259,22,0.492,26,1.287,30,1.437,32,1.907,49,0.712,54,1.257,57,2.032,59,1.183,60,0.033,61,1.482,62,0.543,63,0.781,70,1.892,71,1.952,90,1.859,91,1.563,107,0.649,108,0.51,116,0.712,119,1.471,122,0.773,123,0.259,124,0.289,125,0.712,147,0.923,150,1.563,155,1.685,170,0.603,203,1.751,204,0.85,206,1.04,211,1.323,213,1.859,218,1.183,228,1.089,233,0.603,253,1.089,255,1.401,256,1.183,272,1.183,276,1.401,298,1.368,302,1.742,303,3.4,304,2.318,364,1.21,365,1.21,366,2.519,367,1.21,368,1.21,369,0.841,370,2.462,371,1.21,372,0.841,373,1.21,374,0.841,375,1.21,376,1.751,377,1.21,378,1.21,379,0.016,380,0.016,393,1,424,1.022,428,2.058,429,2.058,431,2.318,432,1.515,434,1.751,437,1.345,439,1.097,440,1.345,441,1.742,442,2.666,449,1.345,461,1,466,3.238,474,2.318,475,2.816,479,3.238,481,3.238,496,0.916,514,2.501,519,1.742,520,1.515,525,2.666,540,2.597,597,1.21,623,3.238,625,2.816,652,1.21,656,2.318,666,2.666,668,2.666,684,3.155,688,3.019,747,1.742,748,3.194,749,3.879,750,3.91,751,4.346,752,4.346,753,4.94,754,4.346,755,4.346,756,4.346,757,4.346,758,3.194,759,3.194,760,2.087,761,2.087,762,2.087,763,2.087,764,3.194,765,3.194,766,2.087,767,2.087,768,2.087,769,2.087,770,5.303,771,5.303,772,2.087,773,3.194,774,2.087,775,3.194,776,2.087,777,3.194,778,2.087,779,3.194,780,3.194,781,3.194,782,2.087,783,4.346,784,3.879,785,2.087,786,3.194,787,3.194,788,3.194,789,3.194,790,2.087,791,2.087,792,3.194,793,2.087,794,2.087,795,2.087,796,3.194,797,2.087,798,3.194,799,2.087,800,2.087,801,2.087,802,4.94,803,5.547,804,4.94,805,2.087,806,2.087,807,4.346,808,2.087,809,2.087,810,2.087,811,2.087,812,4.346,813,3.194,814,2.087,815,1.742,816,2.087,817,3.194,818,2.087,819,2.087,820,2.087,821,2.087,822,2.087,823,3.194,824,2.087,825,2.087,826,2.087,827,3.194,828,3.879,829,2.087,830,2.087,831,2.087,832,2.087,833,1.742,834,2.087,835,2.087,836,2.087,837,2.087,838,2.087,839,3.879,840,2.087,841,2.087,842,2.087,843,3.194,844,3.194]],["title/interfaces/ToastData.html",[47,1.413,295,0.31]],["body/interfaces/ToastData.html",[0,0.665,1,0.566,3,0.233,4,0.233,9,0.205,10,1.019,11,0.787,12,1.2,14,0.787,15,0.787,16,1.117,17,1.117,18,1.117,19,0.787,20,1.117,21,0.263,22,0.499,23,1.019,24,1.117,25,1.117,27,2.062,29,1.117,30,1.844,32,0.933,33,1.117,34,1.117,35,1.117,36,1.117,37,1.117,38,1.117,39,1.117,40,1.117,41,1.117,43,1.117,44,1.117,45,1.722,46,1.722,47,2.271,48,1.722,49,0.725,51,1.702,52,1.117,53,1.702,54,1.135,55,1.117,56,1.702,60,0.033,62,0.519,64,1.117,65,1.117,66,1.385,67,1.117,69,1.117,71,1.105,73,1.232,74,1.117,88,1.702,92,1.117,93,1.117,94,1.019,107,0.69,108,0.52,109,2.482,110,1.117,111,0.933,112,1.019,113,0.787,114,0.725,115,1.305,116,0.725,117,0.856,118,0.856,119,0.668,120,0.725,121,1.702,122,0.787,123,0.401,124,0.295,125,1.496,126,1.117,127,1.117,128,1.117,129,2.482,130,1.901,131,0.856,132,2.872,133,2.025,134,1.117,135,1.117,136,1.117,137,1.117,138,1.117,139,1.117,140,1.421,141,1.117,142,1.702,143,1.117,144,2.149,145,1.117,146,1.454,147,0.615,148,1.117,149,1.702,150,2.149,151,1.702,152,1.702,153,1.702,154,1.702,155,1.105,156,1.338,157,1.117,158,1.117,159,1.581,160,1.019,161,1.581,162,1.019,163,1.117,164,1.117,165,1.117,166,1.702,167,1.117,168,1.117,169,1.552,170,1.542,171,1.117,172,1.117,173,1.117,174,0.933,175,0.933,176,1.117,177,1.117,178,1.117,179,1.117,180,1.117,181,0.933,182,1.117,183,1.117,184,0.933,185,1.117,186,1.117,187,1.117,188,1.117,189,1.117,190,1.421,191,1.117,192,2.073,193,1.117,194,0.933,195,1.117,196,1.117,197,2.482,198,2.616,199,2.804,200,1.117,201,1.117,202,1.117,203,2.005,204,1.044,205,1.722,206,0.881,207,0.856,208,1.117,209,1.117,210,1.702,211,1.338,212,1.702,213,2.264,214,1.117,215,2.385,216,1.722,217,1.117,218,0.787,219,1.117,220,1.702,221,1.702,222,1.702,223,1.117,224,1.117,225,1.552,226,1.702,227,1.117,228,1.901,229,1.552,230,1.117,231,2.062,232,1.702,233,0.937,234,1.019,235,1.117,236,0.856,237,1.019,238,1.019,239,1.117,240,1.117,241,1.117,242,2.062,243,2.062,244,2.062,245,1.552,246,1.019,247,1.117,248,1.702,249,1.117,250,1.117,251,1.552,252,1.75,253,1.105,254,1.702,255,1.421,256,1.2,257,1.702,258,1.702,259,1.552,260,1.421,261,1.117,262,1.844,263,2.103,264,2.085,265,2.306,266,1.702,267,2.062,268,1.702,269,1.117,270,1.117,271,1.117,272,1.2,273,1.019,274,1.117,275,1.117,276,0.933,277,1.117,278,1.117,279,1.702,280,1.702,281,0.856,282,0.933,283,1.019,284,1.117,285,1.019,286,1.019,287,0.933,288,1.117,289,1.117,290,1.117,291,1.117,292,1.117,293,1.117,294,1.117,295,0.455,296,0.933,297,1.117,298,1.324,299,1.611,379,0.016,380,0.016,445,0.615]],["title/pipes/TruncatePipe.html",[450,1.693,569,1.867]],["body/pipes/TruncatePipe.html",[3,0.451,4,0.451,9,0.396,11,1.523,13,1.97,22,0.633,26,1.656,30,2.165,57,1.904,59,1.523,60,0.033,61,1.904,62,0.613,63,1.005,66,1.429,70,1.402,90,2.456,91,2.354,107,0.57,108,1.005,123,0.509,124,0.57,125,1.993,147,1.189,170,1.189,203,1.656,206,0.7,253,1.904,262,1.523,287,2.248,298,1.094,379,0.025,380,0.025,424,0.995,450,2.934,452,2.649,455,2.984,456,4.277,458,4.277,540,2.16,569,2.97,601,3.431,684,4.052,845,3.431,846,5.583,847,4.11,848,5.124,849,4.11,850,5.124,851,4.11,852,5.583,853,5.124,854,4.11,855,4.11,856,4.11,857,4.11,858,4.11,859,4.11]],["title/interfaces/VisualConfig.html",[46,1.413,295,0.31]],["body/interfaces/VisualConfig.html",[0,0.656,1,0.556,3,0.229,4,0.229,9,0.201,10,1.001,11,0.774,12,1.184,14,0.774,15,0.774,16,1.098,17,1.098,18,1.098,19,0.774,20,1.098,21,0.259,22,0.492,23,1.001,24,1.098,25,1.098,27,2.04,29,1.098,30,1.831,32,0.916,33,1.098,34,1.098,35,1.098,36,1.098,37,1.098,38,1.098,39,1.098,40,1.098,41,1.098,43,1.098,44,1.098,45,1.703,46,1.908,47,2.169,48,1.703,49,0.712,51,1.68,52,1.098,53,1.68,54,1.122,55,1.098,56,1.68,60,0.033,62,0.583,64,1.098,65,1.098,66,1.257,67,1.098,69,1.098,71,1.09,73,1.219,74,1.098,88,1.68,92,1.098,93,1.098,94,1.001,107,0.685,108,0.511,109,2.463,110,1.098,111,0.916,112,1.001,113,0.774,114,0.712,115,1.287,116,0.712,117,0.841,118,0.841,119,0.656,120,0.712,121,1.68,122,0.774,123,0.396,124,0.289,125,1.483,126,1.098,127,1.098,128,1.098,129,2.463,130,1.754,131,0.841,132,2.858,133,1.831,134,1.098,135,1.098,136,1.098,137,1.098,138,1.098,139,1.098,140,1.402,141,1.098,142,1.68,143,1.098,144,2.137,145,1.098,146,1.438,147,0.604,148,1.098,149,2.463,150,2.137,151,2.463,152,2.463,153,2.463,154,2.463,155,1.09,156,1.324,157,1.098,158,1.098,159,1.564,160,1.001,161,1.564,162,1.001,163,1.098,164,1.098,165,1.098,166,1.68,167,1.098,168,1.098,169,1.532,170,1.534,171,1.098,172,1.098,173,1.098,174,0.916,175,0.916,176,1.098,177,1.098,178,1.098,179,1.098,180,1.098,181,0.916,182,1.098,183,1.098,184,0.916,185,1.098,186,1.098,187,1.098,188,1.098,189,1.098,190,1.402,191,1.098,192,2.056,193,1.098,194,0.916,195,1.098,196,1.098,197,2.463,198,2.598,199,2.788,200,1.098,201,1.098,202,1.098,203,1.991,204,1.033,205,1.703,206,0.875,207,0.841,208,1.098,209,1.098,210,1.68,211,1.324,212,1.68,213,2.246,214,1.098,215,2.369,216,1.703,217,1.098,218,0.774,219,1.098,220,1.68,221,1.68,222,1.68,223,1.098,224,1.098,225,1.532,226,1.68,227,1.098,228,1.892,229,1.532,230,1.098,231,2.04,232,1.68,233,0.924,234,1.001,235,1.098,236,0.841,237,1.001,238,1.001,239,1.098,240,1.098,241,1.098,242,2.04,243,2.04,244,2.04,245,1.532,246,1.001,247,1.098,248,1.68,249,1.098,250,1.098,251,1.532,252,1.736,253,1.09,254,1.68,255,1.402,256,1.184,257,1.68,258,1.68,259,1.532,260,1.402,261,1.098,262,1.831,263,2.084,264,2.072,265,2.285,266,1.68,267,2.04,268,1.68,269,1.098,270,1.098,271,1.098,272,1.184,273,1.001,274,1.098,275,1.098,276,0.916,277,1.098,278,1.098,279,1.68,280,1.68,281,0.841,282,0.916,283,1.001,284,1.098,285,1.001,286,1.001,287,0.916,288,1.098,289,1.098,290,1.098,291,1.098,292,1.098,293,1.098,294,1.098,295,0.452,296,0.916,297,1.098,298,1.315,299,2.016,379,0.016,380,0.016,445,0.604]],["title/coverage.html",[860,3.649]],["body/coverage.html",[0,1.161,1,0.901,9,0.326,10,2.79,45,1.486,46,1.486,47,1.486,48,1.486,54,0.979,60,0.033,62,0.372,73,1.063,117,1.364,118,1.364,124,0.627,206,0.576,211,1.154,287,1.486,295,0.6,296,1.486,347,5.041,369,1.364,372,1.364,374,1.364,376,1.364,379,0.022,380,0.022,424,1.113,425,2.826,434,1.364,444,2.182,446,2.826,447,3.28,448,4.107,450,2.376,451,1.962,453,2.826,463,2.826,464,2.826,465,2.826,484,2.182,540,3.374,569,1.962,579,2.457,580,2.826,582,2.182,586,2.826,618,2.826,619,2.826,670,2.826,685,2.182,686,2.95,687,2.826,728,2.826,737,2.826,747,2.826,845,2.826,860,2.826,861,2.826,862,3.385,863,3.385,864,3.385,865,3.385,866,2.826,867,3.385,868,5.089,869,4.52,870,3.385,871,3.385,872,2.826,873,2.826,874,2.826,875,5.821,876,2.826,877,2.826,878,2.826,879,3.385,880,3.385,881,3.385,882,2.826,883,2.826,884,6.115,885,3.385,886,3.385,887,3.385,888,3.385,889,3.385,890,3.385,891,6.177,892,3.385,893,2.826,894,3.385,895,3.385,896,3.773,897,4.248,898,4.248,899,4.248,900,2.826,901,2.826,902,2.826,903,3.773,904,3.385,905,3.385,906,5.089,907,3.385,908,2.826,909,3.773,910,2.826,911,3.773,912,3.385,913,3.385]],["title/dependencies.html",[384,2.242,914,2.255]],["body/dependencies.html",[60,0.033,108,1.145,111,2.056,113,2.055,114,1.892,122,1.736,379,0.027,380,0.027,384,2.716,578,3.911,915,4.685,916,6.437,917,4.685,918,5.548,919,4.685,920,4.685,921,4.685,922,4.685,923,4.685,924,4.685,925,4.685,926,4.685,927,4.685,928,4.685,929,4.685,930,4.685,931,4.685,932,4.685]],["title/miscellaneous/enumerations.html",[933,1.42,934,3.228]],["body/miscellaneous/enumerations.html",[3,0.562,21,0.508,60,0.033,91,2.672,115,2.062,116,1.746,215,2.453,225,2.453,245,2.453,272,1.896,305,3.299,316,4.273,317,4.273,318,2.967,379,0.025,380,0.025,424,0.949,564,4.273,594,2.979,604,4.273,639,4.273,652,2.967,686,2.967,738,3.425,739,3.425,740,3.425,741,3.425,742,3.425,743,3.425,744,3.425,745,3.425,933,2.157,934,3.425,935,5.119,936,5.119,937,5.119,938,4.104,939,4.104,940,4.104,941,4.104,942,4.104,943,4.104,944,4.104,945,4.104,946,4.104,947,4.104,948,4.104,949,4.104,950,4.104,951,4.104,952,4.104,953,4.104,954,4.104,955,4.104,956,5.119,957,4.104]],["title/miscellaneous/functions.html",[933,1.42,958,3.228]],["body/miscellaneous/functions.html",[21,0.52,59,2.182,60,0.031,61,2.064,62,0.647,63,1.44,66,1.44,70,1.771,94,2.013,206,0.959,233,1.214,253,1.432,298,1.381,299,1.771,379,0.026,380,0.026,424,0.959,455,3.048,461,2.702,495,3.506,496,2.584,625,3.048,720,3.506,872,3.506,873,4.334,874,4.334,876,3.506,877,4.334,878,4.334,899,3.506,900,4.334,901,4.334,902,4.705,933,2.207,958,3.506,959,5.637,960,4.2,961,4.2,962,4.2,963,4.2,964,4.2,965,4.2,966,4.2,967,4.2,968,4.2,969,4.2,970,4.2,971,4.2,972,5.889,973,5.889,974,6.164,975,4.2,976,4.2,977,4.2,978,5.193,979,4.2,980,4.2,981,4.2,982,4.2]],["title/index.html",[21,0.335,983,2.255,984,2.255]],["body/index.html",[6,3.413,23,2.254,60,0.027,119,1.477,120,1.896,144,1.894,146,1.742,156,1.604,204,1.251,206,0.8,228,1.604,236,1.894,379,0.027,380,0.027,474,3.413,493,3.031,494,4.036,516,3.925,592,3.413,596,3.925,597,2.726,610,3.925,690,3.925,711,4.641,985,4.703,986,4.703,987,4.703,988,4.703,989,4.703,990,3.925,991,3.925,992,4.703,993,5.56,994,4.703,995,4.703,996,4.703,997,4.703,998,3.925,999,3.925,1000,4.703,1001,3.925,1002,3.925,1003,4.703,1004,4.703,1005,5.56,1006,4.703]],["title/license.html",[983,2.255,984,2.255,1007,2.255]],["body/license.html",[4,0.608,9,0.488,57,0.621,60,0.018,61,1.213,107,0.252,124,0.252,130,0.621,147,0.526,207,0.733,216,0.799,218,0.675,236,0.733,237,0.873,238,3.017,259,0.873,262,1.496,320,1.52,328,2.085,340,4.69,343,1.52,379,0.014,380,0.014,393,0.873,421,1.322,445,0.526,461,2.239,494,1.322,496,0.799,502,1.174,514,1.851,546,1.52,581,1.174,592,1.322,598,3.371,605,3.371,691,2.969,750,1.52,833,1.52,861,2.969,866,1.52,991,1.52,998,1.52,999,4.354,1001,1.52,1002,4.457,1007,5.254,1008,4.039,1009,2.969,1010,2.872,1011,1.821,1012,1.821,1013,1.821,1014,5.618,1015,4.039,1016,4.396,1017,1.821,1018,5.752,1019,5.34,1020,5.068,1021,1.821,1022,1.821,1023,1.821,1024,1.821,1025,5.34,1026,5.538,1027,4.671,1028,5.34,1029,2.872,1030,1.821,1031,4.396,1032,1.821,1033,1.821,1034,1.821,1035,4.039,1036,5.215,1037,2.872,1038,2.872,1039,1.821,1040,3.557,1041,2.872,1042,2.872,1043,1.821,1044,5.903,1045,4.039,1046,2.872,1047,4.671,1048,1.821,1049,2.872,1050,1.821,1051,1.821,1052,1.821,1053,1.821,1054,1.821,1055,1.821,1056,3.557,1057,1.821,1058,3.557,1059,2.872,1060,1.821,1061,1.821,1062,4.671,1063,4.039,1064,2.872,1065,3.557,1066,3.557,1067,1.821,1068,1.821,1069,1.821,1070,1.821,1071,1.821,1072,2.872,1073,1.821,1074,1.821,1075,3.557,1076,2.872,1077,1.821,1078,1.821,1079,5.215,1080,2.872,1081,1.821,1082,4.396,1083,2.872,1084,1.821,1085,5.903,1086,5.945,1087,1.821,1088,1.821,1089,1.821,1090,1.821,1091,1.821,1092,1.821,1093,1.821,1094,2.872,1095,2.872,1096,1.821,1097,1.821,1098,1.821,1099,1.821,1100,1.821,1101,4.039,1102,4.396,1103,1.821,1104,2.872,1105,4.039,1106,2.872,1107,1.821,1108,4.396,1109,2.872,1110,1.821,1111,1.821,1112,3.557,1113,1.821,1114,1.821,1115,1.821,1116,1.821,1117,2.872,1118,1.821,1119,1.821,1120,1.821,1121,3.557,1122,1.821,1123,1.821,1124,3.557,1125,1.821,1126,1.821,1127,1.821,1128,4.039,1129,5.34,1130,1.821,1131,1.821,1132,2.872,1133,5.068,1134,3.557,1135,2.872,1136,2.872,1137,2.872,1138,2.872,1139,3.557,1140,2.872,1141,3.557,1142,2.872,1143,2.872,1144,2.872,1145,2.872,1146,1.821,1147,2.872,1148,1.821,1149,1.821,1150,4.396,1151,4.89,1152,3.557,1153,2.872,1154,1.821,1155,1.821,1156,2.872,1157,2.872,1158,1.821,1159,1.821,1160,3.557,1161,2.872,1162,1.821,1163,1.821,1164,1.821,1165,3.557,1166,1.821,1167,1.821,1168,1.821,1169,2.872,1170,2.872,1171,1.821,1172,1.821,1173,1.821,1174,1.821,1175,1.821,1176,1.821,1177,1.821,1178,2.872,1179,1.821,1180,1.821,1181,1.821,1182,1.821,1183,1.821,1184,1.821,1185,1.821,1186,4.396,1187,1.821,1188,3.557,1189,1.821,1190,1.821,1191,3.557,1192,1.821,1193,1.821,1194,1.821,1195,1.821,1196,5.068,1197,1.821,1198,1.821,1199,1.821,1200,1.821,1201,1.821,1202,4.039,1203,2.872,1204,4.039,1205,1.821,1206,1.821,1207,1.821,1208,1.821,1209,1.821,1210,3.557,1211,1.821,1212,1.821,1213,2.872,1214,2.872,1215,1.821,1216,1.821,1217,1.821,1218,1.821,1219,2.872,1220,2.872,1221,1.821,1222,1.821,1223,4.396,1224,1.821,1225,1.821,1226,1.821,1227,1.821,1228,1.821,1229,3.557,1230,3.557,1231,1.821,1232,1.821,1233,1.821,1234,1.821,1235,1.821,1236,1.821,1237,1.821,1238,1.821,1239,1.821,1240,1.821,1241,2.872,1242,1.821,1243,1.821,1244,2.872,1245,1.821,1246,1.821,1247,4.039,1248,1.821,1249,1.821,1250,1.821,1251,1.821,1252,1.821,1253,1.821,1254,4.039,1255,3.557,1256,3.557,1257,3.557,1258,2.872,1259,2.872,1260,3.557,1261,2.872,1262,2.872,1263,2.872,1264,2.872,1265,1.821,1266,1.821,1267,1.821,1268,1.821,1269,1.821,1270,1.821,1271,1.821,1272,1.821,1273,2.872,1274,1.821,1275,1.821,1276,1.821,1277,1.821,1278,4.396,1279,1.821,1280,1.821,1281,1.821,1282,1.821,1283,1.821,1284,1.821,1285,1.821,1286,1.821,1287,4.396,1288,1.821,1289,1.821,1290,1.821,1291,1.821,1292,1.821,1293,1.821,1294,1.821,1295,1.821,1296,1.821,1297,1.821,1298,1.821,1299,1.821,1300,1.821,1301,1.821,1302,1.821,1303,1.821,1304,1.821,1305,3.557,1306,1.821,1307,1.821,1308,1.821,1309,1.52,1310,1.821,1311,2.872,1312,1.821,1313,1.821,1314,1.821,1315,1.821,1316,1.821,1317,1.821,1318,1.821,1319,1.821,1320,1.821,1321,1.821,1322,1.821,1323,1.821,1324,1.821,1325,1.821,1326,1.821,1327,2.872,1328,1.821,1329,1.821,1330,1.821,1331,2.872,1332,2.872,1333,1.821,1334,1.821,1335,1.821,1336,1.821,1337,1.821,1338,1.821,1339,1.821,1340,1.821,1341,1.821,1342,1.821,1343,1.821,1344,1.821,1345,1.821,1346,1.821,1347,1.821,1348,1.821,1349,1.821,1350,1.821,1351,1.821,1352,1.821,1353,1.821,1354,1.821]],["title/modules.html",[383,2.534]],["body/modules.html",[60,0.029,76,4.839,114,1.977,379,0.029,380,0.029,382,3.257,383,2.929,390,2.929,1309,4.839,1355,5.797]],["title/overview.html",[1356,3.649]],["body/overview.html",[1,1.672,2,2.072,54,1.651,60,0.032,147,1.25,255,2.505,369,2.3,372,2.532,374,2.3,376,2.3,379,0.026,380,0.026,382,4.121,383,2.506,384,3.064,385,3.608,386,3.608,387,3.608,388,3.608,389,3.608,390,3.806,391,3.837,392,3.138,393,2.072,445,1.25,451,3.309,452,2.786,566,3.608,567,3.608,568,3.608,569,3.309,617,3.138,815,3.608,893,3.608,1356,3.608,1357,4.322]],["title/properties.html",[22,0.596,914,2.255]],["body/properties.html",[22,0.788,60,0.03,379,0.029,380,0.029,1009,4.269,1358,5.114,1359,5.114]],["title/miscellaneous/variables.html",[933,1.42,1360,3.228]],["body/miscellaneous/variables.html",[21,0.425,60,0.033,62,0.708,90,2.859,91,2.354,118,1.837,140,1.506,144,2.2,146,1.271,147,0.992,150,2.495,155,2.091,156,1.17,159,1.382,161,1.382,169,2.617,174,1.506,175,1.506,181,1.506,184,1.506,190,2.002,192,2.396,194,2.002,204,0.913,205,2.396,206,0.584,229,1.645,233,0.992,251,1.645,252,1.69,262,2.023,264,2.2,281,1.382,282,2.002,379,0.023,380,0.023,424,0.872,461,2.617,486,3.719,540,2.693,581,2.212,583,4.277,597,1.989,656,3.311,688,2.212,697,2.864,699,2.864,700,2.864,882,2.864,883,3.807,896,2.864,897,4.878,898,4.878,903,2.864,908,2.864,909,4.558,910,2.864,911,2.864,933,1.804,990,3.807,1360,2.864,1361,4.561,1362,5.46,1363,3.431,1364,3.431,1365,3.431,1366,5.124,1367,5.124,1368,4.561,1369,5.124,1370,3.431,1371,3.431,1372,3.431,1373,3.431,1374,3.431,1375,3.431,1376,4.561,1377,4.561,1378,3.431,1379,4.561,1380,4.561,1381,4.561,1382,4.561,1383,4.561]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":540,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":702,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["0.11.4",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":703,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["1.0.1",{"_index":1358,"title":{},"body":{"properties.html":{}}}],["1.1.19",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":601,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"pipes/TruncatePipe.html":{}}}],["10/17",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["10rem",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1357,"title":{},"body":{"overview.html":{}}}],["14.2.0",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["14.2.7",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["15/16",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1500",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["16",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1rem",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"overview.html":{}}}],["2.0",{"_index":1010,"title":{},"body":{"license.html":{}}}],["2.0unless",{"_index":1349,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["2004",{"_index":1012,"title":{},"body":{"license.html":{}}}],["25",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":596,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{}}}],["3.2rem",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["3/4",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["3rem",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["4.2.10",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["400",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["40rem",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["44/52",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":815,"title":{},"body":{"components/ToastComponent.html":{},"overview.html":{}}}],["5/5",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":866,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["5000",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["7.5.0",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["8",{"_index":990,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["84",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1023,"title":{},"body":{"license.html":{}}}],["93",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["__booleans",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["__length,&__ui",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["ability",{"_index":992,"title":{},"body":{"index.html":{}}}],["above",{"_index":1233,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1308,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1305,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["act",{"_index":1315,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1033,"title":{},"body":{"license.html":{}}}],["action",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["action(this",{"_index":664,"title":{},"body":{"classes/NotifireModel.html":{}}}],["actions",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["activate",{"_index":710,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["acts",{"_index":1285,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["add",{"_index":1220,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":1222,"title":{},"body":{"license.html":{}}}],["addicon",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["addicon(iconname",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["additional",{"_index":1223,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1103,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1303,"title":{},"body":{"license.html":{}}}],["affects",{"_index":593,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{}}}],["afterviewinit",{"_index":467,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["against",{"_index":1170,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1318,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1257,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1238,"title":{},"body":{"license.html":{}}}],["align",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["alleging",{"_index":1175,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1166,"title":{},"body":{"license.html":{}}}],["along",{"_index":1211,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1221,"title":{},"body":{"license.html":{}}}],["amet",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["and/or",{"_index":1312,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":578,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/material",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["angular/material/input",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/router",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["animate.css",{"_index":692,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["animate.interface",{"_index":725,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["animate.interface.ts",{"_index":687,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"coverage.html":{}}}],["animation",{"_index":688,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["animationframe",{"_index":749,"title":{},"body":{"components/ToastComponent.html":{}}}],["animations",{"_index":690,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["annotations",{"_index":1091,"title":{},"body":{"license.html":{}}}],["answer",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apache",{"_index":1008,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1216,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1083,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1255,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1159,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1327,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":382,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1335,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1271,"title":{},"body":{"license.html":{}}}],["archives.copyright",{"_index":1343,"title":{},"body":{"license.html":{}}}],["args",{"_index":846,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args.length",{"_index":853,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args[1",{"_index":858,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["argument.decorator.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arising",{"_index":1292,"title":{},"body":{"license.html":{}}}],["array",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["asserted",{"_index":1324,"title":{},"body":{"license.html":{}}}],["assets/${svg}.svg",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["associated",{"_index":1276,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1274,"title":{},"body":{"license.html":{}}}],["async",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["attach",{"_index":1328,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1081,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1202,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1029,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1075,"title":{},"body":{"license.html":{}}}],["available",{"_index":1077,"title":{},"body":{"license.html":{}}}],["b",{"_index":1192,"title":{},"body":{"license.html":{}}}],["backdrop",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["base",{"_index":765,"title":{},"body":{"components/ToastComponent.html":{}}}],["based",{"_index":1087,"title":{},"body":{"license.html":{}}}],["baseline",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["basis",{"_index":1259,"title":{},"body":{"license.html":{}}}],["before",{"_index":638,"title":{},"body":{"classes/NotifireModel.html":{}}}],["before_hide",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["before_show",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforedestroy",{"_index":779,"title":{},"body":{"components/ToastComponent.html":{}}}],["beforehide",{"_index":955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforeshow",{"_index":949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["behalf",{"_index":1108,"title":{},"body":{"license.html":{}}}],["below",{"_index":1084,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1055,"title":{},"body":{"license.html":{}}}],["beta",{"_index":1359,"title":{},"body":{"properties.html":{}}}],["between",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["bind",{"_index":1100,"title":{},"body":{"license.html":{}}}],["block",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["blocksizea",{"_index":469,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["blocksizeb",{"_index":470,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["body",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["bodymaxlength",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":1329,"title":{},"body":{"license.html":{}}}],["bold",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["boydmaxlength",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["brackets",{"_index":1332,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1355,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{}}}],["button'},{'name",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["button.text",{"_index":443,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["buttons.component.html",{"_index":430,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons__clear",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["buttons__html",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["buttonscomponent",{"_index":369,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonsconfig",{"_index":444,"title":{"interfaces/ButtonsConfig.html":{}},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["c",{"_index":1199,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":836,"title":{},"body":{"components/ToastComponent.html":{}}}],["callbacks",{"_index":1003,"title":{},"body":{"index.html":{}}}],["called",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["calls",{"_index":600,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["can't",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["cancel",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelanimationframe(this.animationframe",{"_index":842,"title":{},"body":{"components/ToastComponent.html":{}}}],["carry",{"_index":1194,"title":{},"body":{"license.html":{}}}],["case",{"_index":563,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["cause",{"_index":1042,"title":{},"body":{"license.html":{}}}],["center",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["center_bottom",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_center",{"_index":946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_top",{"_index":945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["centerbottom",{"_index":738,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centercenter",{"_index":739,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centertop",{"_index":740,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["change",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["changed",{"_index":1198,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":426,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy",{"_index":436,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":427,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changes",{"_index":500,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["character",{"_index":1291,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1141,"title":{},"body":{"license.html":{}}}],["check",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choose",{"_index":1306,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1172,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1161,"title":{},"body":{"license.html":{}}}],["class",{"_index":124,"title":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":617,"title":{},"body":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{},"overview.html":{}}}],["clear",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["click",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"miscellaneous/enumerations.html":{}}}],["close",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["closeonclick",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule",{"_index":566,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_declarations",{"_index":567,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_exports",{"_index":568,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["code",{"_index":1065,"title":{},"body":{"license.html":{}}}],["column",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["combination",{"_index":1167,"title":{},"body":{"license.html":{}}}],["come",{"_index":607,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["comes",{"_index":614,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["comment",{"_index":1336,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1300,"title":{},"body":{"license.html":{}}}],["common",{"_index":833,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["commonmodule",{"_index":577,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["communication",{"_index":1112,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1071,"title":{},"body":{"license.html":{}}}],["completely",{"_index":773,"title":{},"body":{"components/ToastComponent.html":{}}}],["compliance",{"_index":1346,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1227,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["component_template",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/buttons/buttons",{"_index":724,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["components/toast/notifire",{"_index":746,"title":{},"body":{"interfaces/SnotifireNotifications.html":{}}}],["computer",{"_index":1297,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1014,"title":{},"body":{"license.html":{}}}],["config",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["config.interface",{"_index":584,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["config.interface.ts",{"_index":447,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["configuration",{"_index":581,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["consequential",{"_index":1290,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1314,"title":{},"body":{"license.html":{}}}],["console.log('clicked",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log('said",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log('toast",{"_index":795,"title":{},"body":{"components/ToastComponent.html":{}}}],["console.log(result",{"_index":558,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["console.log(toast.value",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["conspicuously",{"_index":1125,"title":{},"body":{"license.html":{}}}],["const",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["constitutes",{"_index":1176,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["constructor(iconregistry",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(id",{"_index":628,"title":{},"body":{"classes/NotifireModel.html":{}}}],["constructor(private",{"_index":441,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(readonly",{"_index":523,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["constructor(service",{"_index":432,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(type",{"_index":729,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["construed",{"_index":1224,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1207,"title":{},"body":{"license.html":{}}}],["contains",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["content",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["contents",{"_index":1217,"title":{},"body":{"license.html":{}}}],["context",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1046,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1102,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1165,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1229,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1129,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1177,"title":{},"body":{"license.html":{}}}],["control",{"_index":1035,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":998,"title":{},"body":{"index.html":{},"license.html":{}}}],["conversions",{"_index":1073,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1184,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1191,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1026,"title":{},"body":{"license.html":{}}}],["countdown",{"_index":715,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["counterclaim",{"_index":1173,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":860,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":993,"title":{},"body":{"index.html":{}}}],["created",{"_index":609,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["cross",{"_index":1171,"title":{},"body":{"license.html":{}}}],["current",{"_index":517,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["custom",{"_index":711,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"index.html":{}}}],["customary",{"_index":1249,"title":{},"body":{"license.html":{}}}],["d",{"_index":1205,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1287,"title":{},"body":{"license.html":{}}}],["dark",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["data",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["date",{"_index":1181,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["deep",{"_index":966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["default_limit",{"_index":848,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["default_trail",{"_index":850,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["defaults.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1320,"title":{},"body":{"license.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"license.html":{}}}],["defines",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definition",{"_index":1037,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1017,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":1282,"title":{},"body":{"license.html":{}}}],["demo",{"_index":986,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":384,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":723,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["derivative",{"_index":1085,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1088,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1250,"title":{},"body":{"license.html":{}}}],["description",{"_index":496,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["descriptor",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["designated",{"_index":1127,"title":{},"body":{"license.html":{}}}],["destroyed",{"_index":639,"title":{},"body":{"classes/NotifireModel.html":{},"miscellaneous/enumerations.html":{}}}],["detected",{"_index":591,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["determining",{"_index":1270,"title":{},"body":{"license.html":{}}}],["different",{"_index":494,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{},"license.html":{}}}],["direct",{"_index":1040,"title":{},"body":{"license.html":{}}}],["direction",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["directive",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["disable",{"_index":719,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disabled",{"_index":704,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disappear",{"_index":606,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["disclaimer",{"_index":1253,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1122,"title":{},"body":{"license.html":{}}}],["display",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["dissapear",{"_index":706,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["distribute",{"_index":1150,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1210,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1016,"title":{},"body":{"license.html":{}}}],["div",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["divider",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["dock",{"_index":587,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["docksizea",{"_index":471,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["docksizeb",{"_index":472,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["document",{"_index":1024,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":861,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dolor",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["don't",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["down",{"_index":616,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["duplicated",{"_index":589,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["duplicates",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["dynamic",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":663,"title":{},"body":{"classes/NotifireModel.html":{}}}],["e.g",{"_index":714,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["each",{"_index":605,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["easier",{"_index":1341,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":1089,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":1092,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1109,"title":{},"body":{"license.html":{}}}],["element",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["emits",{"_index":633,"title":{},"body":{"classes/NotifireModel.html":{}}}],["emitter",{"_index":473,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["enable/disable",{"_index":717,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["enabled",{"_index":588,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["encapsulation",{"_index":428,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["enclosed",{"_index":1331,"title":{},"body":{"license.html":{}}}],["end",{"_index":1326,"title":{},"body":{"license.html":{}}}],["enter",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["entities",{"_index":1034,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1028,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":934,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":627,"title":{},"body":{"classes/NotifireModel.html":{}}}],["equals(toast",{"_index":644,"title":{},"body":{"classes/NotifireModel.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["erroraction",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["even",{"_index":1302,"title":{},"body":{"license.html":{}}}],["event",{"_index":502,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"license.html":{}}}],["event.target.value",{"_index":682,"title":{},"body":{"components/PromptComponent.html":{}}}],["event.type",{"_index":651,"title":{},"body":{"classes/NotifireModel.html":{}}}],["event.type.ts",{"_index":937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":623,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["events",{"_index":650,"title":{},"body":{"classes/NotifireModel.html":{}}}],["eventsholder",{"_index":624,"title":{},"body":{"classes/NotifireModel.html":{}}}],["example",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["except",{"_index":1152,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1124,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1140,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1239,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1277,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1057,"title":{},"body":{"license.html":{}}}],["exit",{"_index":697,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1231,"title":{},"body":{"license.html":{}}}],["export",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["exports",{"_index":572,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["express",{"_index":1262,"title":{},"body":{"license.html":{}}}],["extensions/rxjs/blob/master/doc/api/core/operators/create.md",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["extract",{"_index":460,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["fadein",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fadeout",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1298,"title":{},"body":{"license.html":{}}}],["false",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["features",{"_index":989,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1307,"title":{},"body":{"license.html":{}}}],["field",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fields",{"_index":1330,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1050,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1182,"title":{},"body":{"license.html":{}}}],["files",{"_index":1066,"title":{},"body":{"license.html":{}}}],["filter",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{}}}],["filterduplicates",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["filtered",{"_index":590,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["fire",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["first",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fitness",{"_index":1266,"title":{},"body":{"license.html":{}}}],["flex",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["focused",{"_index":681,"title":{},"body":{"components/PromptComponent.html":{}}}],["following",{"_index":1188,"title":{},"body":{"license.html":{}}}],["form",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["format",{"_index":1338,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formcontrol",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formgroup",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["forroot",{"_index":574,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["found",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["free",{"_index":1143,"title":{},"body":{"license.html":{}}}],["fs",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":712,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["fully",{"_index":997,"title":{},"body":{"index.html":{}}}],["function",{"_index":448,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"classes/NotifireModel.html":{},"coverage.html":{}}}],["functional",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["functionalconfig",{"_index":45,"title":{"interfaces/FunctionalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["functions",{"_index":958,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":1072,"title":{},"body":{"license.html":{}}}],["generates",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getconfig",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getfunctionalconfig",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["getnotificationarray",{"_index":477,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationarray(notifications",{"_index":483,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationconfig",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["getpositionformcontrol",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg(svg",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getthemecontrol",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["getting",{"_index":983,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoastdata",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["getvalue",{"_index":674,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvalue($event",{"_index":676,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvisualconfig",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["give",{"_index":1189,"title":{},"body":{"license.html":{}}}],["global",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["goodwill",{"_index":1295,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1353,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["grant",{"_index":1134,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1059,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1030,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1136,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":1283,"title":{},"body":{"license.html":{}}}],["harmless",{"_index":1322,"title":{},"body":{"license.html":{}}}],["helper",{"_index":506,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["here",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1135,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1235,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hober",{"_index":716,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["hold",{"_index":1321,"title":{},"body":{"license.html":{}}}],["holds",{"_index":636,"title":{},"body":{"classes/NotifireModel.html":{}}}],["hover",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1348,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/terms",{"_index":1013,"title":{},"body":{"license.html":{}}}],["httpclientmodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["https://ccpatrut.github.io/ngx",{"_index":988,"title":{},"body":{"index.html":{}}}],["https://github.com/reactive",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icon",{"_index":699,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":700,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["iconregistry",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icons",{"_index":995,"title":{},"body":{"index.html":{}}}],["id",{"_index":625,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{}}}],["identification",{"_index":1342,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1334,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ii",{"_index":1048,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1054,"title":{},"body":{"license.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["implied",{"_index":1263,"title":{},"body":{"license.html":{}}}],["import",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["imports",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["improving",{"_index":1123,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1293,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1289,"title":{},"body":{"license.html":{}}}],["include",{"_index":691,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"license.html":{}}}],["included",{"_index":1080,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1001,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":999,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusion",{"_index":1106,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1132,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1323,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1319,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1310,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1078,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1041,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1056,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["informational",{"_index":1218,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1164,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1178,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":764,"title":{},"body":{"components/ToastComponent.html":{}}}],["inittoast",{"_index":751,"title":{},"body":{"components/ToastComponent.html":{}}}],["injectable",{"_index":893,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["inline",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["inputs",{"_index":431,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["inputtype",{"_index":672,"title":{},"body":{"components/PromptComponent.html":{}}}],["instalation",{"_index":1004,"title":{},"body":{"index.html":{}}}],["install",{"_index":1006,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1168,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":1104,"title":{},"body":{"license.html":{}}}],["interface",{"_index":295,"title":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{}}}],["ipsum",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["irrevocable",{"_index":1144,"title":{},"body":{"license.html":{}}}],["iscloseonclick",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isdestroying",{"_index":788,"title":{},"body":{"components/ToastComponent.html":{}}}],["isfilterduplicates",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isnewitemsontop",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isobject",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobject(item",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispauseonhover",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ispromptfocused",{"_index":673,"title":{},"body":{"components/PromptComponent.html":{}}}],["isshowprogressbar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["issue",{"_index":1118,"title":{},"body":{"license.html":{}}}],["it's",{"_index":721,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["item",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["january",{"_index":1011,"title":{},"body":{"license.html":{}}}],["justify",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":585,"title":{},"body":{"interfaces/NotificationDefaults.html":{}}}],["keyindex",{"_index":553,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keyof",{"_index":549,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keys",{"_index":454,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":451,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":1261,"title":{},"body":{"license.html":{}}}],["language",{"_index":1352,"title":{},"body":{"license.html":{}}}],["later",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["law",{"_index":1256,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1174,"title":{},"body":{"license.html":{}}}],["left",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["left_bottom",{"_index":941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_center",{"_index":940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_top",{"_index":939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["leftbottom",{"_index":741,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["leftcenter",{"_index":742,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["lefttop",{"_index":743,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["legal",{"_index":1031,"title":{},"body":{"license.html":{}}}],["legend",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["length",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["liability",{"_index":1278,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1286,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1162,"title":{},"body":{"license.html":{}}}],["license",{"_index":1007,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1345,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1179,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1025,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":771,"title":{},"body":{"components/ToastComponent.html":{}}}],["limit",{"_index":852,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":1264,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1354,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1063,"title":{},"body":{"license.html":{}}}],["link",{"_index":1099,"title":{},"body":{"license.html":{}}}],["lists",{"_index":1116,"title":{},"body":{"license.html":{}}}],["literal",{"_index":583,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":1169,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loading",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["location",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["lorem",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loss",{"_index":1294,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1301,"title":{},"body":{"license.html":{}}}],["made",{"_index":1076,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1115,"title":{},"body":{"license.html":{}}}],["main",{"_index":620,"title":{},"body":{"classes/NotifireModel.html":{}}}],["make",{"_index":1155,"title":{},"body":{"license.html":{}}}],["making",{"_index":1061,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1299,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1120,"title":{},"body":{"license.html":{}}}],["management",{"_index":1043,"title":{},"body":{"license.html":{}}}],["many",{"_index":516,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{}}}],["margin",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["marked",{"_index":1126,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1245,"title":{},"body":{"license.html":{}}}],["mat",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matformfieldmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["math.min",{"_index":841,"title":{},"body":{"components/ToastComponent.html":{}}}],["maticonmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonregistry",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matinputmodule",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["maxatposition",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":705,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["maxonscreen",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":1019,"title":{},"body":{"license.html":{}}}],["means",{"_index":1038,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1068,"title":{},"body":{"license.html":{}}}],["media",{"_index":1074,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1185,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1187,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1265,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1098,"title":{},"body":{"license.html":{}}}],["merge",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergedeep",{"_index":901,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mergedeep(...sources",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["message",{"_index":732,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["milliseconds",{"_index":718,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["miscellaneous",{"_index":933,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":621,"title":{},"body":{"classes/NotifireModel.html":{}}}],["models",{"_index":520,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["models/snotifire",{"_index":521,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"classes/NotifireModel.html":{}}}],["models/snotifire.type",{"_index":653,"title":{},"body":{"classes/NotifireModel.html":{}}}],["modifications",{"_index":1062,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1193,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1219,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1225,"title":{},"body":{"license.html":{}}}],["module",{"_index":381,"title":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}},"body":{}}],["modules",{"_index":383,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":576,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["more",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"license.html":{}}}],["mounted",{"_index":564,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mouse_enter",{"_index":950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouse_leave",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseenter",{"_index":951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseleave",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ms",{"_index":698,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["much",{"_index":996,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":1244,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":1163,"title":{},"body":{"license.html":{}}}],["need",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["negligence",{"_index":1281,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1284,"title":{},"body":{"license.html":{}}}],["new",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["newontop",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngaftercontentinit",{"_index":752,"title":{},"body":{"components/ToastComponent.html":{}}}],["ngafterviewinit",{"_index":478,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["ngmodule",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["ngondestroy",{"_index":479,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngx",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["ngxsnotifire",{"_index":985,"title":{},"body":{"index.html":{}}}],["ngxsnotifirecomponent",{"_index":372,"title":{"components/NgxSnotifireComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxsnotifiremodule",{"_index":390,"title":{"modules/NgxSnotifireModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["nice",{"_index":613,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["non",{"_index":1139,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1215,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1234,"title":{},"body":{"license.html":{}}}],["noti",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["notice",{"_index":1079,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1196,"title":{},"body":{"license.html":{}}}],["notification",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconf",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconfig",{"_index":48,"title":{"interfaces/NotificationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notificationdefaults",{"_index":579,"title":{"interfaces/NotificationDefaults.html":{}},"body":{"interfaces/NotificationDefaults.html":{},"coverage.html":{}}}],["notificationeventtype",{"_index":503,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["notificationformvalue",{"_index":296,"title":{"interfaces/NotificationFormValue.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notificationglobalconfig",{"_index":582,"title":{"interfaces/NotificationGlobalConfig.html":{}},"body":{"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"coverage.html":{}}}],["notifications",{"_index":474,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["notifications.interface",{"_index":522,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notifications.interface.ts",{"_index":737,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["notifications[position",{"_index":559,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notificationtype",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notifire",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["notifire/ngx",{"_index":464,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["notifireconfig",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["notifireeventtype",{"_index":634,"title":{},"body":{"classes/NotifireModel.html":{}}}],["notifiremodel",{"_index":434,"title":{"classes/NotifireModel.html":{}},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["notwithstanding",{"_index":1232,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1005,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":461,"title":{},"body":{"pipes/KeysPipe.html":{},"interfaces/NotificationDefaults.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(snotificationpositiontype",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["object.keys(snotificationpositiontype).indexof",{"_index":554,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["object.keys(value",{"_index":462,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["object.values(snotificationpositiontype",{"_index":556,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["objects",{"_index":495,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/functions.html":{}}}],["obligations",{"_index":1311,"title":{},"body":{"license.html":{}}}],["observable",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observable((observer",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observables",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.complete",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.error",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.next",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["obtain",{"_index":1347,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1156,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["on(event",{"_index":647,"title":{},"body":{"classes/NotifireModel.html":{}}}],["on(snotifireeventtype.input",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onasyncloading",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclear",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclick",{"_index":753,"title":{},"body":{"components/ToastComponent.html":{}}}],["onconfirmation",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ondestroy",{"_index":466,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["one",{"_index":1208,"title":{},"body":{"license.html":{}}}],["onerror",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onexittransitionend",{"_index":754,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverenter",{"_index":775,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverleave",{"_index":777,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhtml",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninfo",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onmouseenter",{"_index":755,"title":{},"body":{"components/ToastComponent.html":{}}}],["onmouseleave",{"_index":756,"title":{},"body":{"components/ToastComponent.html":{}}}],["onprompt",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onremove",{"_index":757,"title":{},"body":{"components/ToastComponent.html":{}}}],["onsuccess",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onwarning",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["opacity",{"_index":501,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["option",{"_index":603,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":994,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1251,"title":{},"body":{"license.html":{}}}],["original",{"_index":1095,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1047,"title":{},"body":{"license.html":{}}}],["out",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":792,"title":{},"body":{"components/ToastComponent.html":{}}}],["outputs",{"_index":759,"title":{},"body":{"components/ToastComponent.html":{}}}],["outstanding",{"_index":1052,"title":{},"body":{"license.html":{}}}],["overrides",{"_index":709,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["overview",{"_index":1356,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1027,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1049,"title":{},"body":{"license.html":{}}}],["package",{"_index":914,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["param",{"_index":449,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":689,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["parseint(args[0",{"_index":854,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["part",{"_index":1204,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1267,"title":{},"body":{"license.html":{}}}],["party",{"_index":1214,"title":{},"body":{"license.html":{}}}],["pass",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["patent",{"_index":1151,"title":{},"body":{"license.html":{}}}],["pause",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["paused",{"_index":787,"title":{},"body":{"components/ToastComponent.html":{}}}],["pauseonhover",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["percent",{"_index":1051,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1148,"title":{},"body":{"license.html":{}}}],["performance.now",{"_index":835,"title":{},"body":{"components/ToastComponent.html":{}}}],["permission",{"_index":1242,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1058,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1137,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1203,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":450,"title":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.unsubscribe",{"_index":525,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["pipes",{"_index":452,"title":{},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":458,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":1209,"title":{},"body":{"license.html":{}}}],["position",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["position.type",{"_index":726,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["position.type.ts",{"_index":936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["positionformcontrol",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["positions",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["possibility",{"_index":1304,"title":{},"body":{"license.html":{}}}],["power",{"_index":1039,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1060,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1146,"title":{},"body":{"license.html":{}}}],["printed",{"_index":1340,"title":{},"body":{"license.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["product",{"_index":1246,"title":{},"body":{"license.html":{}}}],["production",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["project",{"_index":987,"title":{},"body":{"index.html":{}}}],["projects/.../set",{"_index":960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../snotifire",{"_index":935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../snotifire.type.ts",{"_index":938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.ts",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../toast",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../transform",{"_index":961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../utils.ts",{"_index":959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":424,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1195,"title":{},"body":{"license.html":{}}}],["promise",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["promise((resolve",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"miscellaneous/enumerations.html":{}}}],["prompt'},{'name",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["prompt(this.toastdata.body",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt.component.html",{"_index":671,"title":{},"body":{"components/PromptComponent.html":{}}}],["promptcomponent",{"_index":374,"title":{"components/PromptComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prompttype",{"_index":789,"title":{},"body":{"components/ToastComponent.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"properties.html":{}}}],["property",{"_index":547,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["propertydescriptor",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["protected",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["provide",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SnotifireConfig.html":{},"license.html":{}}}],["provided",{"_index":1082,"title":{},"body":{"license.html":{}}}],["providers",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["provides",{"_index":1258,"title":{},"body":{"license.html":{}}}],["public",{"_index":622,"title":{},"body":{"classes/NotifireModel.html":{},"classes/SnotifireModel.html":{}}}],["publicly",{"_index":1147,"title":{},"body":{"license.html":{}}}],["pulls",{"_index":615,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["pure",{"_index":459,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["purpose",{"_index":1121,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":598,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"license.html":{}}}],["push",{"_index":816,"title":{},"body":{"components/ToastComponent.html":{}}}],["queue",{"_index":518,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["random",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range",{"_index":701,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["reactiveformsmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["readable",{"_index":1206,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["reason",{"_index":1325,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1248,"title":{},"body":{"license.html":{}}}],["received",{"_index":1130,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1190,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1339,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":722,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["redistributing",{"_index":1273,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1183,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1240,"title":{},"body":{"license.html":{}}}],["reject",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["remain",{"_index":1096,"title":{},"body":{"license.html":{}}}],["remove",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["removes",{"_index":780,"title":{},"body":{"components/ToastComponent.html":{}}}],["replaced",{"_index":1333,"title":{},"body":{"license.html":{}}}],["repository",{"_index":1000,"title":{},"body":{"index.html":{}}}],["represent",{"_index":1093,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1114,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1145,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1252,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1015,"title":{},"body":{"license.html":{}}}],["requestanimationframe",{"_index":786,"title":{},"body":{"components/ToastComponent.html":{}}}],["requestanimationframe((timestamp",{"_index":838,"title":{},"body":{"components/ToastComponent.html":{}}}],["require",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1247,"title":{},"body":{"license.html":{}}}],["reset",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["resolve",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["responsibility",{"_index":1317,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1269,"title":{},"body":{"license.html":{}}}],["result",{"_index":546,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"license.html":{}}}],["result[searchedstring]?.push(toast",{"_index":557,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["resulting",{"_index":1067,"title":{},"body":{"license.html":{}}}],["results",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1200,"title":{},"body":{"license.html":{}}}],["return",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["returns",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":541,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["revisions",{"_index":1090,"title":{},"body":{"license.html":{}}}],["right",{"_index":611,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["right_bottom",{"_index":944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_center",{"_index":943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_top",{"_index":942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rightbottom",{"_index":594,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rightcenter",{"_index":744,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":1313,"title":{},"body":{"license.html":{}}}],["righttop",{"_index":745,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["risks",{"_index":1275,"title":{},"body":{"license.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["root'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["royalty",{"_index":1142,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":839,"title":{},"body":{"components/ToastComponent.html":{}}}],["rxjs",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["safehtml",{"_index":707,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["same",{"_index":592,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{},"license.html":{}}}],["sanitizer",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["screen",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{}}}],["searchedstring",{"_index":555,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["second",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["section",{"_index":1154,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1021,"title":{},"body":{"license.html":{}}}],["see",{"_index":1350,"title":{},"body":{"license.html":{}}}],["select",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["sell",{"_index":1157,"title":{},"body":{"license.html":{}}}],["sent",{"_index":1113,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1097,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1237,"title":{},"body":{"license.html":{}}}],["service",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["services",{"_index":440,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/ToastComponent.html":{}}}],["settimeout",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["settoasttype",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["settoasttype(target",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shall",{"_index":1018,"title":{},"body":{"license.html":{}}}],["share",{"_index":696,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["shares",{"_index":1053,"title":{},"body":{"license.html":{}}}],["show",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["shown",{"_index":604,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"miscellaneous/enumerations.html":{}}}],["showprogressbar",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":608,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["simple",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["sit",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["slice",{"_index":507,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["slide",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["snotificationpositiontype",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["snotificationpositiontype.hasownproperty(property",{"_index":548,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotificationpositiontype.right_bottom",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotificationservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["snotifire",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["snotifire'},{'name",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["snotifire.component.html",{"_index":468,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts",{"_index":465,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire.component.ts:110",{"_index":491,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:138",{"_index":485,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:149",{"_index":499,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:179",{"_index":488,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:20",{"_index":515,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:24",{"_index":513,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:28",{"_index":512,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:32",{"_index":509,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:36",{"_index":510,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:40",{"_index":505,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:44",{"_index":508,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:48",{"_index":504,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:52",{"_index":482,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:55",{"_index":487,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:57",{"_index":489,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.module.ts",{"_index":571,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.module.ts:25",{"_index":575,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.type",{"_index":727,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/components/buttons/buttons",{"_index":446,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts",{"_index":425,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:24",{"_index":433,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:31",{"_index":435,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/ngx",{"_index":463,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts",{"_index":670,"title":{},"body":{"components/PromptComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:18",{"_index":679,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:22",{"_index":675,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:26",{"_index":680,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:28",{"_index":677,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/toast/notifire",{"_index":618,"title":{},"body":{"classes/NotifireModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts",{"_index":747,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:115",{"_index":769,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:124",{"_index":774,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:134",{"_index":776,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:149",{"_index":772,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:165",{"_index":763,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:178",{"_index":782,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:21",{"_index":791,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:210",{"_index":767,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:26",{"_index":761,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:27",{"_index":762,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:32",{"_index":785,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:37",{"_index":790,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:43",{"_index":760,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:47",{"_index":768,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:71",{"_index":766,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:91",{"_index":778,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/decorators/set",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/decorators/transform",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/defaults/defaults.interface.ts",{"_index":580,"title":{},"body":{"interfaces/NotificationDefaults.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/global",{"_index":586,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/toast",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/models/snotifire",{"_index":686,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts",{"_index":728,"title":{},"body":{"classes/SnotifireModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:11",{"_index":735,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:15",{"_index":731,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:19",{"_index":733,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:23",{"_index":734,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:5",{"_index":730,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:7",{"_index":736,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.type.ts",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/ngx",{"_index":570,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts",{"_index":453,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts:11",{"_index":457,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts",{"_index":845,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:11",{"_index":849,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:12",{"_index":851,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:13",{"_index":847,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/services/notification.service.ts",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["snotifire/src/lib/test.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/utils.ts",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/test.ts",{"_index":903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifireanimate",{"_index":685,"title":{"interfaces/SnotifireAnimate.html":{}},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["snotifireconfig",{"_index":73,"title":{"interfaces/SnotifireConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["snotifireeventtype",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["snotifireeventtype.input",{"_index":678,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifireform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifiremodel",{"_index":117,"title":{"classes/SnotifireModel.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["snotifirenotifications",{"_index":484,"title":{"interfaces/SnotifireNotifications.html":{}},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["snotifiretype",{"_index":652,"title":{},"body":{"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snotifiretype.async",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.confirm",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.error",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.info",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.prompt",{"_index":656,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["snotifiretype.success",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.warning",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotify",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["snotifybutton",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifynotifications",{"_index":497,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifytypetype",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":1064,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1316,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1268,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["sources",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["space",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1288,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1351,"title":{},"body":{"license.html":{}}}],["split",{"_index":492,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts",{"_index":480,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts(toasts",{"_index":490,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:112",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:119",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:126",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:134",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:140",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:144",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:212",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:249",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:279",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:283",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:286",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:290",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:294",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":783,"title":{},"body":{"components/ToastComponent.html":{}}}],["started",{"_index":984,"title":{"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":784,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout",{"_index":758,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout(starttime",{"_index":781,"title":{},"body":{"components/ToastComponent.html":{}}}],["state",{"_index":750,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["statechanged",{"_index":481,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["statechanged(event",{"_index":498,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["stated",{"_index":1153,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1226,"title":{},"body":{"license.html":{}}}],["statements",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":573,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["stating",{"_index":1197,"title":{},"body":{"license.html":{}}}],["still",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["stoppage",{"_index":1296,"title":{},"body":{"license.html":{}}}],["string",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":720,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/functions.html":{}}}],["style.opacity]=\"backdrop",{"_index":565,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["styling",{"_index":610,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"index.html":{}}}],["subject",{"_index":514,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1149,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1228,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1107,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1105,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":649,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subscribe((id",{"_index":800,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toast",{"_index":794,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toasts",{"_index":526,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["subscribers",{"_index":637,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subscription",{"_index":511,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["subscription.unsubscribe",{"_index":660,"title":{},"body":{"classes/NotifireModel.html":{}}}],["subsequently",{"_index":1131,"title":{},"body":{"license.html":{}}}],["success",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["successaction",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["such",{"_index":1044,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1236,"title":{},"body":{"license.html":{}}}],["support",{"_index":1309,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["switch",{"_index":562,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["syntax",{"_index":1337,"title":{},"body":{"license.html":{}}}],["system",{"_index":599,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["systems",{"_index":1117,"title":{},"body":{"license.html":{}}}],["table",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":713,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["takeuntil",{"_index":519,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["target",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["terminate",{"_index":1180,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1020,"title":{},"body":{"license.html":{}}}],["tests",{"_index":646,"title":{},"body":{"classes/NotifireModel.html":{}}}],["text",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["themecontrol",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["themes",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["theory",{"_index":1279,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1101,"title":{},"body":{"license.html":{}}}],["third",{"_index":1213,"title":{},"body":{"license.html":{}}}],["this.addicon('icon",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.animationframe",{"_index":837,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.backdrop",{"_index":561,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizea",{"_index":533,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizeb",{"_index":535,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.body",{"_index":665,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.config",{"_index":654,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.config.type",{"_index":655,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.default_limit",{"_index":855,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.default_trail",{"_index":859,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.docksizea",{"_index":530,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.docksizeb",{"_index":532,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.eventemitter.subscribe((e",{"_index":662,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.eventsholder.foreach((subscription",{"_index":659,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.eventsholder.push",{"_index":661,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.fb.group",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.backdrop",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.boydmaxlength",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.timeout",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.titlemaxlengt",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.getconfig",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.iconregistry.addsvgicon",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.inittoast",{"_index":798,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.notificationconfig.maxatposition",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notificationconfig.maxonscreen",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notifications",{"_index":542,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.on(snotifireeventtype.hidden",{"_index":658,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.onremove",{"_index":801,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.positions",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.positions[3",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(this.getsvg(location",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.service.defaultconfig",{"_index":527,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global",{"_index":528,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxatposition",{"_index":534,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxonscreen",{"_index":531,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.newontop",{"_index":529,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig",{"_index":808,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation",{"_index":809,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation.time",{"_index":814,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.emitter",{"_index":524,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.remove(this.toast.id",{"_index":442,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["this.service.toastchanged",{"_index":793,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.toastdeleted",{"_index":799,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.snotificationservice",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.async",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.clear",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.confirm",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.error",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.html(html",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.info",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.remove(toast.id",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.setdefaults",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.success",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotificationservice.warning",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('position",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('toaststyle",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().notificationconf",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().position",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastdata",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastfunctionalconfig",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastvisualconfig",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.splittoasts",{"_index":543,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.starttimeout(0",{"_index":834,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.starttimeout(this.toast.config.timeout",{"_index":829,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.animation",{"_index":807,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.isdestroying",{"_index":817,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.paused",{"_index":828,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.progress",{"_index":830,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged(snotifireeventtype.mounted",{"_index":545,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_hide",{"_index":819,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_show",{"_index":810,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.hidden",{"_index":821,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.themes[0",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.title",{"_index":667,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.toast",{"_index":802,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config",{"_index":803,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation",{"_index":812,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.enter",{"_index":813,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.exit",{"_index":820,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.time",{"_index":823,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.closeonclick",{"_index":825,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.pauseonhover",{"_index":827,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.showprogressbar",{"_index":805,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.timeout",{"_index":804,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_hide",{"_index":818,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_show",{"_index":811,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.click",{"_index":824,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.hidden",{"_index":822,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mounted",{"_index":806,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_enter",{"_index":826,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_leave",{"_index":831,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.shown",{"_index":832,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.id",{"_index":796,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastdata.body",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.toastdata.title",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.value",{"_index":657,"title":{},"body":{"classes/NotifireModel.html":{}}}],["this.visualconfig.iscloseonclick",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isfilterduplicates",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isnewitemsontop",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.ispauseonhover",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isshowprogressbar",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.withbackdrop",{"_index":536,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.withbackdrop.length",{"_index":560,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["those",{"_index":1160,"title":{},"body":{"license.html":{}}}],["through",{"_index":1022,"title":{},"body":{"license.html":{}}}],["time",{"_index":597,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["times",{"_index":602,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["timestamp",{"_index":840,"title":{},"body":{"components/ToastComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["titlemaxlengt",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["titlemaxlength",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toast.body",{"_index":666,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":748,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config",{"_index":538,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{}}}],["toast.config.backdrop",{"_index":539,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.bodymaxlength",{"_index":844,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.placeholder",{"_index":683,"title":{},"body":{"components/PromptComponent.html":{}}}],["toast.config.position",{"_index":552,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.titlemaxlength",{"_index":843,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.type",{"_index":669,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.id",{"_index":797,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.model",{"_index":439,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{}}}],["toast.model.ts",{"_index":619,"title":{},"body":{"classes/NotifireModel.html":{},"coverage.html":{}}}],["toast.model.ts:13",{"_index":632,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:18",{"_index":635,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:23",{"_index":643,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:28",{"_index":629,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:31",{"_index":640,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:32",{"_index":641,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:33",{"_index":630,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:34",{"_index":631,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:51",{"_index":648,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.model.ts:67",{"_index":645,"title":{},"body":{"classes/NotifireModel.html":{}}}],["toast.title",{"_index":668,"title":{},"body":{"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["toast.value",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toast/notifire",{"_index":438,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{}}}],["toastcomponent",{"_index":376,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastdata",{"_index":47,"title":{"interfaces/ToastData.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["toastdefaults",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastdefaults.toast",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastfunctionalconfig",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastrs",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["toasts",{"_index":493,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireConfig.html":{},"index.html":{}}}],["toasts.filter",{"_index":537,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.foreach((toast",{"_index":551,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.slice(this.docksizea",{"_index":544,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toaststyle",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastvisualconfig",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toggle",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["togle",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationGlobalConfig.html":{}}}],["top:0",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["top:2rem",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["top:4.5rem",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":1280,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":1119,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1243,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1201,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1241,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1158,"title":{},"body":{"license.html":{}}}],["transform",{"_index":455,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["transform(value",{"_index":456,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformargument",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformargument(target",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformation",{"_index":1069,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1070,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["trigger",{"_index":770,"title":{},"body":{"components/ToastComponent.html":{}}}],["true",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":684,"title":{},"body":{"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":569,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["ts",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["tslib",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationDefaults.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/NotificationGlobalConfig.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.decorator.ts",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":550,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["types",{"_index":991,"title":{},"body":{"index.html":{},"license.html":{}}}],["undefined",{"_index":486,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1036,"title":{},"body":{"license.html":{}}}],["union",{"_index":1032,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1230,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":475,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{}}}],["use",{"_index":1002,"title":{},"body":{"index.html":{},"license.html":{}}}],["user",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["usevalue",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1272,"title":{},"body":{"license.html":{}}}],["uuid",{"_index":902,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":626,"title":{},"body":{"classes/NotifireModel.html":{}}}],["validate",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validator",{"_index":642,"title":{},"body":{"classes/NotifireModel.html":{}}}],["validators",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validators.required",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["value",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"classes/NotifireModel.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":856,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substring(0",{"_index":857,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1360,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1110,"title":{},"body":{"license.html":{}}}],["version",{"_index":1009,"title":{},"body":{"license.html":{},"properties.html":{}}}],["very",{"_index":612,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{}}}],["viewencapsulation",{"_index":437,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["viewencapsulation.none",{"_index":429,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["visualconfig",{"_index":46,"title":{"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["void",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/NotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["want",{"_index":595,"title":{},"body":{"interfaces/NotificationGlobalConfig.html":{},"interfaces/SnotifireAnimate.html":{}}}],["warning",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":1260,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1254,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":1212,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1045,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1094,"title":{},"body":{"license.html":{}}}],["width",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["width:70rem",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["witch",{"_index":708,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["withbackdrop",{"_index":476,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["within",{"_index":1133,"title":{},"body":{"license.html":{}}}],["without",{"_index":1186,"title":{},"body":{"license.html":{}}}],["work",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["works",{"_index":1086,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1138,"title":{},"body":{"license.html":{}}}],["write",{"_index":693,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["writing",{"_index":1128,"title":{},"body":{"license.html":{}}}],["written",{"_index":1111,"title":{},"body":{"license.html":{}}}],["yes",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["you'll",{"_index":695,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yourself",{"_index":694,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yyyy",{"_index":1344,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positions\n                            \n                            \n                                snotifireForm\n                            \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addIcon\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Private\n                                getSvg\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAsyncLoading\n                            \n                            \n                                onClear\n                            \n                            \n                                onConfirmation\n                            \n                            \n                                onError\n                            \n                            \n                                onHtml\n                            \n                            \n                                onInfo\n                            \n                            \n                                onPrompt\n                            \n                            \n                                onSuccess\n                            \n                            \n                                onWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    positionFormControl\n                                \n                                \n                                    themeControl\n                                \n                                \n                                    functionalConfig\n                                \n                                \n                                    visualConfig\n                                \n                                \n                                    toastData\n                                \n                                \n                                    notificationConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, snotificationService: SnotificationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snotificationService\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addIcon(iconName: string, location: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iconName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SnotifireConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSvg(svg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAsyncLoading\n                        \n                    \n                \n            \n            \n                \nonAsyncLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClear\n                        \n                    \n                \n            \n            \n                \nonClear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmation\n                        \n                    \n                \n            \n            \n                \nonConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHtml\n                        \n                    \n                \n            \n            \n                \nonHtml()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInfo\n                        \n                    \n                \n            \n            \n                \nonInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrompt\n                        \n                    \n                \n            \n            \n                \nonPrompt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSuccess\n                        \n                    \n                \n            \n            \n                \nonSuccess()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWarning\n                        \n                    \n                \n            \n            \n                \nonWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        positions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snotifireForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['material', 'dark', 'simple']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        positionFormControl\n                    \n                \n\n                \n                    \n                        getpositionFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        themeControl\n                    \n                \n\n                \n                    \n                        getthemeControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functionalConfig\n                    \n                \n\n                \n                    \n                        getfunctionalConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:279\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visualConfig\n                    \n                \n\n                \n                    \n                        getvisualConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:283\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toastData\n                    \n                \n\n                \n                    \n                        gettoastData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:286\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        notificationConfig\n                    \n                \n\n                \n                    \n                        getnotificationConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:290\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n    \n        \n    \n        \n            \n            Config Noti\n            \n            Toast\n            \n        \n\n        \n            \n                \n                    \n                        Name\n                        \n                    \n                    \n                        Body\n                        \n                    \n                \n                \n                \n                    \n                        \n                            Title Max Length\n                            \n                        \n                        \n                            Body Max Length\n                            \n                        \n                    \n                    \n                        \n                            Timeout\n                            \n                        \n                        \n                            Backdrop\n                            \n                        \n                    \n                \n                \n                \n                    \n                        Select Notification Position\n                        \n                            \n                                {{position}}\n                            \n                        \n                    \n                \n                \n                    Show Progress Bar\n                    Close on click\n                    Pause on hover\n                    New items on top\n                    Filter duplicates\n\n                \n\n                \n                \n                    \n                        Max number of Toastrs on Screen\n                        \n                    \n                    \n                        Max number of Toastrs per Position\n                        \n                    \n\n                \n\n                \n                    Select theme\n                    \n                        \n                            {{theme}}\n                        \n                    \n                \n            \n\n        \n    \n    \n        \n            \n                Success\n            \n            \n                Info\n            \n            \n                Error\n            \n            \n                Warning\n            \n        \n        \n\n            \n                Async\n            \n            \n                Confirm\n            \n            \n                Prompt\n            \n        \n        \n            \n                HTML\n            \n        \n        \n            \n                Clear all\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.page{\n  padding-top:2rem;\n  padding-bottom: 1rem;\n  justify-content: center;\n  align-content: center;\n\n  display: flex;\n  .config{\n    max-width: 40rem;\n    padding: 0rem 3rem;\n    .title{\n      text-align: center;\n    }\n    .functional-config{\n        &__length,&__ui{\n        display: flex;\n        align-items: baseline;\n        justify-content: space-between;\n\n        mat-form-field{\n          width: 45%;\n        }\n      }\n    }\n    &__booleans{\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 3.2rem;\n      max-width: 100%;\n      mat-slide-togle{\n        width: 40%;\n        display: inline-block;\n      }\n    }\n  }\n  .buttons{\n\n    max-width:70rem;\n    display: flex;\n    flex-direction: column;\n    margin-top:4.5rem;\n    margin-left: 10rem;\n    div{\n      display: flex;\n      justify-content: space-between;\n      margin-top: 1rem;\n      width: 100%;\n\n    }\n    button{\n      margin-left: 1rem;\n    }\n    .buttons__html, .buttons__clear-all{\n      display: block;\n      text-align: center;\n    }\n  }\n}\nmat-form-field{\n  width:100%;\n}\nmat-divider{\n  padding-top:0;\n  margin-bottom: 2rem;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Config Noti                        Toast                                                                                                    Name                                                                                        Body                                                                                                                                                                    Title Max Length                                                                                                        Body Max Length                                                                                                                                                Timeout                                                                                                        Backdrop                                                                                                                                                                    Select Notification Position                                                                                    {{position}}                                                                                                                            Show Progress Bar                    Close on click                    Pause on hover                    New items on top                    Filter duplicates                                                                                            Max number of Toastrs on Screen                                                                                        Max number of Toastrs per Position                                                                                                Select theme                                                                        {{theme}}                                                                                                                            Success                                        Info                                        Error                                        Warning                                                        Async                                        Confirm                                        Prompt                                                        HTML                                                        Clear all                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nSnotificationService\n\nSnotificationService\n\nAppModule -->\n\nSnotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxSnotifireModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxSnotifireModule, SnotificationService } from 'ngx-snotifire';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastDefaults } from 'ngx-snotifire';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NgxSnotifireModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatIconModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: 'NotifireConfig', useValue: ToastDefaults },\n    SnotificationService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                notifire-button\n            \n\n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n                \n                    \n                        Get buttons Array\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:31\n                \n            \n\n\n            \n                \n                    remove toast\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NotifireModel } from '../toast/notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'notifire-button',\n  templateUrl: './buttons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n/**\n * Buttons component\n */\nexport class ButtonsComponent {\n  /**\n   * Get buttons Array\n   */\n  @Input() toast!: NotifireModel;\n\n  constructor(private readonly service: SnotificationService) {}\n\n  /**\n   * remove toast\n   */\n  remove() {\n    this.service.remove(this.toast.id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{ button.text }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ button.text }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonsConfig.html":{"url":"interfaces/ButtonsConfig.html","title":"interface - ButtonsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bold\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Action which will be called after buttons click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should buttons text be bold.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Button text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NotifireModel } from '../toast/notifire-toast.model';\n\nexport interface ButtonsConfig {\n  /**\n   * Button text\n   */\n  text: string;\n\n  /**\n   * Should buttons text be bold.\n   */\n  bold?: boolean;\n\n  /**\n   * Action which will be called after buttons click\n   * @param text? string\n   * @returns void\n   */\n  action?: (toast: NotifireModel) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionalConfig.html":{"url":"interfaces/FunctionalConfig.html","title":"interface - FunctionalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FunctionalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                        \n                                            boydMaxLength\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            titleMaxLengt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boydMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        boydMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLengt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLengt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false,\n})\n/**\n * Extract object keys pipe\n */\nexport class KeysPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return value;\n    }\n    return Object.keys(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxSnotifireComponent.html":{"url":"components/NgxSnotifireComponent.html","title":"component - NgxSnotifireComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgxSnotifireComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotifire\n            \n\n\n\n\n            \n                templateUrl\n                ./ngx-snotifire.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backdrop\n                            \n                            \n                                blockSizeA\n                            \n                            \n                                blockSizeB\n                            \n                            \n                                dockSizeA\n                            \n                            \n                                dockSizeB\n                            \n                            \n                                emitter\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                    Readonly\n                                unsubscribe$\n                            \n                            \n                                withBackdrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNotificationArray\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                splitToasts\n                            \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNotificationArray\n                        \n                    \n                \n            \n            \n                \ngetNotificationArray(notifications: SnotifireNotifications, position: SnotificationPositionType)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notifications\n                                    \n                                                SnotifireNotifications\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                SnotificationPositionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitToasts\n                        \n                    \n                \n            \n            \n                \nsplitToasts(toasts: NotifireModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:110\n                \n            \n\n\n            \n                \n                    Split toasts toasts into different objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toasts\n                                    \n                                                NotifireModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        notifire-toast[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SnotifireNotifications\n\n                    \n                    \n                        SnotifyNotifications\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateChanged\n                        \n                    \n                \n            \n            \n                \nstateChanged(event: SnotifireEventType)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:149\n                \n            \n\n\n            \n                \n                    Changes the backdrop opacity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SnotifireEventType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationEventType\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:48\n                        \n                    \n\n            \n                \n                    Backdrop Opacity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:40\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:44\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:32\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:36\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:28\n                        \n                    \n\n            \n                \n                    Toasts emitter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireNotifications\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:24\n                        \n                    \n\n            \n                \n                    Toasts array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotifireModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                        \n                    \n\n            \n                \n                    How many toasts with backdrop in current queue\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotificationPositionType } from '../../models';\nimport { SnotifireNotifications } from '../../models/snotifire-notifications.interface';\nimport { NotifireModel } from '../toast/notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'ngx-snotifire',\n  templateUrl: './ngx-snotifire.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxSnotifireComponent implements OnInit, OnDestroy, AfterViewInit {\n  private readonly unsubscribe$ = new Subject();\n  /**\n   * Toasts array\n   */\n  notifications!: SnotifireNotifications;\n  /**\n   * Toasts emitter\n   */\n  emitter!: Subscription;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeB!: number | undefined;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeB!: number | undefined;\n  /**\n   * Backdrop Opacity\n   */\n  backdrop: number | undefined = -1;\n  /**\n   * How many toasts with backdrop in current queue\n   */\n  withBackdrop: NotifireModel[] = [];\n\n  constructor(readonly service: SnotificationService) {}\n  ngAfterViewInit(): void {}\n\n  ngOnInit(): void {\n    this.service.emitter\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toasts: NotifireModel[]) => {\n        if (\n          this.service.defaultConfig &&\n          this.service.defaultConfig.global &&\n          this.service.defaultConfig.global.newOnTop\n        ) {\n          this.dockSizeA = this.service.defaultConfig.global.maxOnScreen\n            ? -this.service.defaultConfig.global.maxOnScreen\n            : 6;\n          this.dockSizeB = undefined;\n          this.blockSizeA = this.service.defaultConfig.global.maxAtPosition\n            ? -this.service.defaultConfig.global.maxAtPosition\n            : 4;\n          this.blockSizeB = undefined;\n          this.withBackdrop = toasts.filter(\n            (toast) =>\n              toast.config &&\n              toast.config.backdrop &&\n              toast.config.backdrop >= 0\n          );\n        } else {\n          this.dockSizeA = 0;\n          this.dockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxOnScreen;\n          this.blockSizeA = 0;\n          this.blockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxAtPosition;\n          this.withBackdrop = toasts\n            .filter(\n              (toast) =>\n                toast.config &&\n                toast.config.backdrop &&\n                toast.config.backdrop >= 0\n            )\n            .reverse();\n        }\n        this.notifications = this.splitToasts(\n          toasts.slice(this.dockSizeA, this.dockSizeB)\n        );\n        this.stateChanged(SnotifireEventType.MOUNTED);\n      });\n  }\n\n  /**\n   * Split toasts toasts into different objects\n   * @param toasts notifire-toast[]\n   * @returns SnotifyNotifications\n   */\n  splitToasts(toasts: NotifireModel[]): SnotifireNotifications {\n    const result: SnotifireNotifications = {};\n\n    for (const property in SnotificationPositionType) {\n      if (SnotificationPositionType.hasOwnProperty(property)) {\n        result[\n          SnotificationPositionType[\n            property as keyof typeof SnotificationPositionType\n          ]\n        ] = [];\n      }\n    }\n\n    toasts.forEach((toast: NotifireModel) => {\n      if (toast.config.position) {\n        const keyIndex = Object.keys(SnotificationPositionType).indexOf(\n          toast.config.position\n        );\n        const searchedString = Object.values(SnotificationPositionType)[\n          keyIndex\n        ];\n        result[searchedString]?.push(toast);\n      }\n    });\n    console.log(result);\n    return result;\n  }\n\n  getNotificationArray(\n    notifications: SnotifireNotifications,\n    position: SnotificationPositionType\n  ): NotifireModel[] | undefined {\n    return notifications[position];\n  }\n\n  /**\n   * Changes the backdrop opacity\n   * @param event NotificationEventType\n   */\n  stateChanged(event: SnotifireEventType) {\n    if (!this.withBackdrop.length) {\n      if (this.backdrop && this.backdrop >= 0) {\n        this.backdrop = -1;\n      }\n      return;\n    }\n    switch (event) {\n      case 'mounted':\n        if (this.backdrop && this.backdrop \n    \n\n    \n        = 0\"\n    [style.opacity]=\"backdrop\"\n>\n\n\n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '= 0\"    [style.opacity]=\"backdrop\">        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxSnotifireComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxSnotifireModule.html":{"url":"modules/NgxSnotifireModule.html","title":"module - NgxSnotifireModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxSnotifireModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsComponent\n                        \n                        \n                            KeysPipe\n                        \n                        \n                            NgxSnotifireComponent\n                        \n                        \n                            PromptComponent\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TruncatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxSnotifireComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ButtonsComponent,\n  NgxSnotifireComponent,\n  PromptComponent,\n  ToastComponent,\n} from './components';\nimport { KeysPipe, TruncatePipe } from './pipes';\nimport { SnotificationService } from './services';\n\n@NgModule({\n  declarations: [\n    PromptComponent,\n    ToastComponent,\n    ButtonsComponent,\n    TruncatePipe,\n    KeysPipe,\n    NgxSnotifireComponent,\n  ],\n  imports: [CommonModule],\n  exports: [NgxSnotifireComponent],\n})\nexport class NgxSnotifireModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSnotifireModule,\n      providers: [SnotificationService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationConfig.html":{"url":"interfaces/NotificationConfig.html","title":"interface - NotificationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                        \n                                            maxOnScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationDefaults.html":{"url":"interfaces/NotificationDefaults.html","title":"interface - NotificationDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Global configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            global\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            snotifireConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        global\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global:         NotificationGlobalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotificationGlobalConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snotifireConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snotifireConfig:         SnotifireConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotificationGlobalConfig } from './global-config.interface';\nimport { SnotifireConfig } from '../models/snotifire-config.interface';\n\n/**\n * Global configuration object\n */\nexport interface NotificationDefaults {\n  global?: NotificationGlobalConfig;\n  snotifireConfig?: SnotifireConfig;\n  type?: {\n    [key: string]: SnotifireConfig;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationFormValue.html":{"url":"interfaces/NotificationFormValue.html","title":"interface - NotificationFormValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationFormValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            toastData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toastData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toastData:         ToastData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationGlobalConfig.html":{"url":"interfaces/NotificationGlobalConfig.html","title":"interface - NotificationGlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationGlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast dock configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterDuplicates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxOnScreen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newOnTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When enabled duplicated notification are filtered out.\nDuplicates are detected when they have the same title, body and type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items at position.\nSame as maxOnScreen, but affects only current toast position (like rightBottom)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items on screen.\n\nFor example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\nWith this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should new items come from top or bottom side.\n\nThis option created for styling purposes.\nFor example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificationGlobalConfig {\n  /**\n   * Max toast items on screen.\n   *\n   * > For example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\n   * >\n   * > With this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n   */\n  maxOnScreen?: number;\n  /**\n   * Max toast items at position.\n   *\n   * Same as maxOnScreen, but affects only current toast position (like rightBottom)\n   */\n  maxAtPosition?: number;\n  /**\n   * Should new items come from top or bottom side.\n   *\n   * > This option created for styling purposes.\n   * >\n   * > For example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n   */\n  newOnTop?: boolean;\n\n  /**\n   * When enabled duplicated notification are filtered out.\n   *\n   * Duplicates are detected when they have the same title, body and type.\n   *\n   */\n  filterDuplicates?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotifireModel.html":{"url":"classes/NotifireModel.html","title":"class - NotifireModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotifireModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast main model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                eventsHolder\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                title\n                            \n                            \n                                valid\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, title: string, body: string, config: SnotifireConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:13\n                        \n                    \n\n            \n                \n                    Emits NotifireEventType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventsHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:18\n                        \n                    \n\n            \n                \n                    Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                        \n                    \n\n            \n                \n                    Toast validator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:23\n                        \n                    \n\n            \n                \n                    Toast prompt value\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(toast: NotifireModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:67\n                \n            \n\n\n            \n                \n                    Tests if a toast equals this toast.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    toast\n                                    \n                                                NotifireModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        notifire-toast\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean true then equals else false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n            \n                \non(event: SnotifireEventType, action: (undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:51\n                \n            \n\n\n            \n                \n                    Subscribe to toast events\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SnotifireEventType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationEventType\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        (toast: this) => void\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Subject, Subscription } from 'rxjs';\nimport { SnotifireConfig } from '../../models/snotifire-config.interface';\nimport { SnotifireEventType } from '../../models/snotifire-event.type';\nimport { SnotifireType } from '../../models/snotifire.type';\n\n/**\n * Toast main model\n */\nexport class NotifireModel {\n  /**\n   * Emits NotifireEventType\n   */\n  readonly eventEmitter = new Subject();\n\n  /**\n   * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n   */\n  private eventsHolder: Subscription[] = [];\n\n  /**\n   * Toast prompt value\n   */\n  value?: string;\n\n  /**\n   * Toast validator\n   */\n  valid: boolean = true;\n\n  constructor(\n    public readonly id: number,\n    public readonly title: string,\n    public readonly body: string,\n    public readonly config: SnotifireConfig\n  ) {\n    if (this.config && this.config.type === SnotifireType.PROMPT) {\n      this.value = '';\n    }\n    this.on(SnotifireEventType.HIDDEN, () => {\n      this.eventsHolder.forEach((subscription: Subscription) => {\n        subscription.unsubscribe();\n      });\n    });\n  }\n  /**\n   * Subscribe to toast events\n   * @returns this\n   * @param event NotificationEventType\n   * @param action (toast: this) => void\n   */\n  on(event: SnotifireEventType, action: (toast: this) => void): this {\n    this.eventsHolder.push(\n      this.eventEmitter.subscribe((e: SnotifireEventType) => {\n        if (e === event) {\n          action(this);\n        }\n      })\n    );\n    return this;\n  }\n\n  /**\n   * Tests if a toast equals this toast.\n   * @returns boolean true then equals else false.\n   * @param toast notifire-toast\n   */\n  equals(toast: NotifireModel): boolean {\n    return this.config && toast.config\n      ? this.body === toast.body &&\n          this.title === toast.title &&\n          this.config.type === toast.config.type\n      : this.body === toast.body && this.title === toast.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptComponent.html":{"url":"components/PromptComponent.html","title":"component - PromptComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotify-prompt\n            \n\n\n\n\n            \n                templateUrl\n                ./prompt.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputType\n                            \n                            \n                                isPromptFocused\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:22\n                            \n                        \n                \n                    \n                        Get PROMPT placeholder\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inputType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SnotifireEventType.INPUT\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPromptFocused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:26\n                        \n                    \n\n            \n                \n                    Is PROMPT focused\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { SnotifireEventType } from '../../models';\nimport { NotifireModel } from '../toast/notifire-toast.model';\n\n@Component({\n  selector: 'ngx-snotify-prompt',\n  templateUrl: './prompt.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PromptComponent {\n  inputType = SnotifireEventType.INPUT;\n  /**\n   * Get PROMPT placeholder\n   */\n  @Input() toast!: NotifireModel;\n  /**\n   * Is PROMPT focused\n   */\n  isPromptFocused = false;\n\n  getValue($event: any): string {\n    return $event.target.value;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            {{ toast.config.placeholder | truncate }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ toast.config.placeholder | truncate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PromptComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireAnimate.html":{"url":"interfaces/SnotifireAnimate.html","title":"interface - SnotifireAnimate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireAnimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation params\nIf you want more animations, you can include animate.css or write animations yourself in your styles\nThen you'll need to share this styles with snotify component [ng-snotify] component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enter\n                                        \n                                \n                                \n                                        \n                                            exit\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    In animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Out animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Animation time in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SnotifireAnimate {\n  /**\n   * In animation\n   */\n  enter: string;\n  /**\n   * Out animation\n   */\n  exit: string;\n  /**\n   * Animation time in ms\n   */\n  time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireConfig.html":{"url":"interfaces/SnotifireConfig.html","title":"interface - SnotifireConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            animation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            buttons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closeOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pauseOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showProgressBar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            titleMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animation:         SnotifireAnimate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireAnimate\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Animation config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Backdrop opacity.\n\nRange: 0.0 - 1.0.\nDisabled: -1\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast body maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttons:         ButtonsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Buttons config.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the notification should dissapear on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     string | SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html string witch overrides toast content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Activate custom icon.\nYou should provide full tag, e.g.\n\n    \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom icon class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the timeout countdown should pause on hober\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder for Prompt toast\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toasts position on screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable/Disable progress bar.\nDisabled if timeout is 0.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification timeout in milliseconds.\nDisable timeout = 0\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast title maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnotifireType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of toast, affects toast style.\nIt's not recommended to change it.\nDepends on toast type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { ButtonsConfig } from '../components/buttons/buttons-config.interface';\nimport { SnotifireAnimate } from './snotifire-animate.interface';\nimport { SnotificationPositionType } from './snotifire-position.type';\nimport { SnotifireType } from './snotifire.type';\n\nexport interface SnotifireConfig {\n  /**\n   * Notification timeout in milliseconds.\n   * Disable timeout = 0\n   */\n  timeout?: number;\n\n  /**\n   * Enable/Disable progress bar.\n   * Disabled if timeout is 0.\n   */\n  showProgressBar?: boolean;\n\n  /**\n   * Type of toast, affects toast style.\n   * It's not recommended to change it.\n   * Depends on toast type.\n   */\n  type?: SnotifireType;\n\n  /**\n   * If the notification should dissapear on click\n   */\n  closeOnClick?: boolean;\n\n  /**\n   * If the timeout countdown should pause on hober\n   */\n  pauseOnHover?: boolean;\n\n  /**\n   * Buttons config.\n   */\n  buttons?: ButtonsConfig[];\n\n  /**\n   * Placeholder for Prompt toast\n   */\n  placeholder?: string;\n  /**\n   * Toast title maximum length\n   */\n  titleMaxLength?: number;\n  /**\n   * Toast body maximum length\n   */\n  bodyMaxLength?: number;\n  /**\n   * Activate custom icon.\n   * You should provide full tag, e.g.\n   * ```html\n   * \n   * ```\n   * ```html\n   * \n   *     \n   * \n   * ```\n   */\n  icon?: string;\n\n  /**\n   * Custom icon class.\n   */\n  iconClass?: string;\n\n  /**\n   * Animation config\n   */\n  animation?: SnotifireAnimate;\n  /**\n   * Html string witch overrides toast content\n   */\n  html?: string | SafeHtml;\n  /**\n   * Toasts position on screen\n   */\n  position?: SnotificationPositionType;\n\n  /**\n   * Backdrop opacity.\n   * * **Range:** `0.0 - 1.0`.\n   * * **Disabled:** `-1`\n   */\n  backdrop?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnotifireModel.html":{"url":"classes/SnotifireModel.html","title":"class - SnotifireModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnotifireModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                body\n                            \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                            \n                                    Public\n                                    Optional\n                                html\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type?: SnotifireType, title?: string, body?: string, config?: SnotifireConfig, html?: string | SafeHtml)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        SnotifireType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        html\n                                                  \n                                                        \n                                                                    string | SafeHtml\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:15\n                        \n                    \n\n            \n                \n                    Notification message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:19\n                        \n                    \n\n            \n                \n                    Config object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | SafeHtml\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:23\n                        \n                    \n\n            \n                \n                    Html content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:11\n                        \n                    \n\n            \n                \n                    Notification Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireType\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { SnotifireConfig } from './snotifire-config.interface';\nimport { SnotifireType } from './snotifire.type';\n\nexport class SnotifireModel {\n  constructor(\n    public type?: SnotifireType,\n    /**\n     * Notification Title\n     */\n    public title?: string,\n    /**\n     * Notification message\n     */\n    public body?: string,\n    /**\n     * Config object\n     */\n    public config?: SnotifireConfig,\n    /**\n     * Html content\n     */\n    public html?: string | SafeHtml\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireNotifications.html":{"url":"interfaces/SnotifireNotifications.html","title":"interface - SnotifireNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            centerBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        centerBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightBottom:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightCenter:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightTop:         NotifireModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NotifireModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotifireModel } from '../components/toast/notifire-toast.model';\n\nexport interface SnotifireNotifications {\n  leftTop?: NotifireModel[];\n  leftCenter?: NotifireModel[];\n  leftBottom?: NotifireModel[];\n\n  rightTop?: NotifireModel[];\n  rightCenter?: NotifireModel[];\n  rightBottom?: NotifireModel[];\n\n  centerTop?: NotifireModel[];\n  centerCenter?: NotifireModel[];\n  centerBottom?: NotifireModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-toast\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationFrame\n                            \n                            \n                                state\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initToast\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onExitTransitionEnd\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                onRemove\n                            \n                            \n                                startTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotificationService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         NotifireModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:26\n                            \n                        \n                \n                    \n                        Get toast from notifications array\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initToast\n                        \n                    \n                \n            \n            \n                \ninitToast()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:165\n                \n            \n\n\n            \n                \n                    Initialize base toast config\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:115\n                \n            \n\n\n            \n                \n                    Trigger OnClick lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onExitTransitionEnd\n                        \n                    \n                \n            \n            \n                \nonExitTransitionEnd()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:149\n                \n            \n\n\n            \n                \n                    Remove toast completely after animation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:124\n                \n            \n\n\n            \n                \n                    Trigger onHoverEnter lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:134\n                \n            \n\n\n            \n                \n                    Trigger onHoverLeave lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemove\n                        \n                    \n                \n            \n            \n                \nonRemove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:91\n                \n            \n\n\n            \n                \n                    Trigger beforeDestroy lifecycle. Removes toast\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTimeout\n                        \n                    \n                \n            \n            \n                \nstartTimeout(startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:178\n                \n            \n\n\n            \n                \n                    Start progress bar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:32\n                        \n                    \n\n            \n                \n                    requestAnimationFrame id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:37\n                        \n                    \n\n            \n                \n                    Toast state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotifireType } from '../../models';\nimport { NotifireModel } from './notifire-toast.model';\nimport { SnotificationService } from '../../services';\n\n@Component({\n  selector: 'ngx-toast',\n  templateUrl: './toast.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  /**\n   * Get toast from notifications array\n   */\n  @Input() toast!: NotifireModel;\n  @Output() stateChanged = new EventEmitter();\n\n  /**\n   * requestAnimationFrame id\n   */\n  animationFrame!: number;\n\n  /**\n   * Toast state\n   */\n  state = {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  };\n\n  constructor(private readonly service: SnotificationService) {}\n\n  ngOnInit(): void {\n    this.service.toastChanged\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toast: NotifireModel) => {\n        console.log('toast');\n        if (this.toast.id === toast.id) {\n          this.initToast();\n        }\n      });\n\n    this.service.toastDeleted\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((id) => {\n        if (this.toast.id === id) {\n          this.onRemove();\n        }\n      });\n    if (this.toast && this.toast.config && !this.toast.config.timeout) {\n      this.toast.config.showProgressBar = false;\n    }\n\n    this.toast.eventEmitter.next(SnotifireEventType.MOUNTED);\n    this.state.animation = 'notifire-toast--in';\n  }\n  ngAfterContentInit() {\n    if (\n      this.service.defaultConfig.snotifireConfig &&\n      this.service.defaultConfig.snotifireConfig.animation\n    ) {\n      setTimeout(() => {\n        this.stateChanged.emit(SnotifireEventType.BEFORE_SHOW);\n        this.toast.eventEmitter.next(SnotifireEventType.BEFORE_SHOW);\n        this.state.animation =\n          this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.enter\n            ? this.toast.config.animation.enter\n            : '';\n      }, this.service.defaultConfig.snotifireConfig.animation.time / 5); // time to show toast push animation (notifire-toast--in)\n    }\n  }\n  /**\n   * Trigger beforeDestroy lifecycle. Removes toast\n   */\n  onRemove() {\n    this.state.isDestroying = true;\n    this.toast.eventEmitter.next(SnotifireEventType.BEFORE_HIDE);\n    this.stateChanged.emit(SnotifireEventType.BEFORE_HIDE);\n    this.state.animation =\n      (this.toast.config &&\n        this.toast.config.animation &&\n        this.toast.config.animation.exit) ||\n      '';\n    setTimeout(() => {\n      this.stateChanged.emit(SnotifireEventType.HIDDEN);\n      this.state.animation = 'notifire-toast--out';\n      this.toast.eventEmitter.next(SnotifireEventType.HIDDEN);\n      setTimeout(\n        () => this.service.remove(this.toast.id, true),\n        this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.time / 2\n      );\n    }, this.toast.config && this.toast.config.animation && this.toast.config.animation.time / 2);\n  }\n  /**\n   * Trigger OnClick lifecycle\n   */\n  onClick() {\n    this.toast.eventEmitter.next(SnotifireEventType.CLICK);\n    if (this.toast && this.toast.config && this.toast.config.closeOnClick) {\n      this.service.remove(this.toast.id);\n    }\n  }\n  /**\n   * Trigger onHoverEnter lifecycle\n   */\n  onMouseEnter() {\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_ENTER);\n    if (this.toast && this.toast.config && this.toast.config.pauseOnHover) {\n      this.state.paused = true;\n    }\n  }\n\n  /**\n   * Trigger onHoverLeave lifecycle\n   */\n  onMouseLeave() {\n    if (\n      this.toast &&\n      this.toast.config &&\n      this.toast.config.pauseOnHover &&\n      this.toast.config.timeout\n    ) {\n      this.state.paused = false;\n      this.startTimeout(this.toast.config.timeout * this.state.progress);\n    }\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_LEAVE);\n  }\n  /**\n   * Remove toast completely after animation\n   */\n  onExitTransitionEnd() {\n    if (this.state.isDestroying) {\n      return;\n    }\n    this.initToast();\n    this.toast.eventEmitter.next(SnotifireEventType.SHOWN);\n  }\n\n  /*\n   Common\n   */\n\n  /**\n   * Initialize base toast config\n   *\n   */\n  initToast(): void {\n    if (\n      (this.toast && this.toast.config && this.toast.config.timeout\n        ? this.toast.config.timeout\n        : 0) > 0\n    ) {\n      this.startTimeout(0);\n    }\n  }\n  /**\n   * Start progress bar\n   * @param startTime number\n   */\n  startTimeout(startTime: number = 0) {\n    const start = performance.now();\n    const calculate = () => {\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        const runtime = timestamp + startTime - start;\n        const progress = Math.min(\n          runtime /\n            (this.toast && this.toast.config && this.toast.config.timeout\n              ? this.toast.config.timeout\n              : 1),\n          1\n        );\n        if (this.state.paused) {\n          cancelAnimationFrame(this.animationFrame);\n        } else if (\n          runtime \n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                {{ toast.title | truncate: toast.config.titleMaxLength }}\n            \n            \n                {{ toast.body | truncate: toast.config.bodyMaxLength }}\n            \n            \n            \n            \n            \n                \n            \n        \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ toast.title | truncate: toast.config.titleMaxLength }}                                        {{ toast.body | truncate: toast.config.bodyMaxLength }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastData.html":{"url":"interfaces/ToastData.html","title":"interface - ToastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, ...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_TRAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '...'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\n/**\n * Truncate toast text pipe\n */\nexport class TruncatePipe implements PipeTransform {\n  private readonly DEFAULT_LIMIT = 40;\n  private readonly DEFAULT_TRAIL = '...';\n  transform(value: string, ...args: Array): any {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : this.DEFAULT_LIMIT;\n\n    return value.length > limit\n      ? value.substring(0, limit) +\n          (args.length > 1 ? args[1] : this.DEFAULT_TRAIL)\n      : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualConfig.html":{"url":"interfaces/VisualConfig.html","title":"interface - VisualConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCloseOnClick\n                                        \n                                \n                                \n                                        \n                                            isFilterDuplicates\n                                        \n                                \n                                \n                                        \n                                            isNewItemsOnTop\n                                        \n                                \n                                \n                                        \n                                            isPauseOnHover\n                                        \n                                \n                                \n                                        \n                                            isShowProgressBar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCloseOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCloseOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFilterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFilterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewItemsOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNewItemsOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isShowProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isShowProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotificationService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotificationService: SnotificationService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [4, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotificationService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.toast,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotificationService.success(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onInfo() {\n    this.snotificationService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotificationService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotificationService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotificationService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotificationService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 5000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotificationService.async(\n      'This will resolve with error',\n      'Async',\n      errorAction,\n      config\n    );\n    this.snotificationService.async(\n      'This will resolve with success',\n      successAction,\n      config\n    );\n    this.snotificationService.async(\n      'Called with promise',\n      'Error async',\n      new Promise((resolve, reject) => {\n        setTimeout(\n          () =>\n            reject({\n              title: 'Error!!!',\n              body: 'We got an example error!',\n              config: {\n                closeOnClick: true,\n              },\n            }),\n          1000\n        );\n        setTimeout(() => resolve({}), 1500);\n      }),\n      config\n    );\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService.confirm(\n      this.toastData.body,\n      this.toastData.title,\n      {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: () => console.log('Clicked: Yes'),\n            bold: false,\n          },\n          { text: 'No', action: () => console.log('Clicked: No') },\n          {\n            text: 'Later',\n            action: (toast: any) => {\n              console.log('Clicked: Later');\n              this.snotificationService.remove(toast.id);\n            },\n          },\n          {\n            text: 'Close',\n            action: (toast: any) => {\n              console.log('Clicked: Close');\n              this.snotificationService.remove(toast.id);\n            },\n            bold: true,\n          },\n        ],\n      }\n    );\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotificationService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotificationService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n            \n            interface\n            ButtonsConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n            \n            component\n            ButtonsComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n            \n            component\n            NgxSnotifireComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n            \n            component\n            PromptComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n            \n            class\n            NotifireModel\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n            \n            function\n            SetToastType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n            \n            function\n            TransformArgument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n            \n            interface\n            NotificationDefaults\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n            \n            interface\n            NotificationGlobalConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n            \n            variable\n            ToastDefaults\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n            \n            interface\n            SnotifireAnimate\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n            \n            interface\n            SnotifireConfig\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n            \n            interface\n            SnotifireNotifications\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n            \n            class\n            SnotifireModel\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/services/notification.service.ts\n            \n            injectable\n            SnotificationService\n            \n                84 %\n                (44/52)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            mergeDeep\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            uuid\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            FunctionalConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationFormValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            ToastData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            VisualConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.7\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/material : ^14.2.7\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            graceful-fs : ^4.2.10\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SnotificationPositionType   (projects/.../snotifire-position.type.ts)\n                        \n                        \n                            SnotifireEventType   (projects/.../snotifire-event.type.ts)\n                        \n                        \n                            SnotifireType   (projects/.../snotifire.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/models/snotifire-position.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotificationPositionType\n                    \n                \n                        \n                            \n                                 LEFT_TOP\n                            \n                        \n                        \n                            \n                                Value : leftTop\n                            \n                        \n                        \n                            \n                                 LEFT_CENTER\n                            \n                        \n                        \n                            \n                                Value : leftCenter\n                            \n                        \n                        \n                            \n                                 LEFT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : leftBottom\n                            \n                        \n                        \n                            \n                                 RIGHT_TOP\n                            \n                        \n                        \n                            \n                                Value : rightTop\n                            \n                        \n                        \n                            \n                                 RIGHT_CENTER\n                            \n                        \n                        \n                            \n                                Value : rightCenter\n                            \n                        \n                        \n                            \n                                 RIGHT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : rightBottom\n                            \n                        \n                        \n                            \n                                 CENTER_TOP\n                            \n                        \n                        \n                            \n                                Value : centerTop\n                            \n                        \n                        \n                            \n                                 CENTER_CENTER\n                            \n                        \n                        \n                            \n                                Value : centerCenter\n                            \n                        \n                        \n                            \n                                 CENTER_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : centerBottom\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire-event.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireEventType\n                    \n                \n                        \n                            \n                                 MOUNTED\n                            \n                        \n                        \n                            \n                                Value : mounted\n                            \n                        \n                        \n                            \n                                 BEFORE_SHOW\n                            \n                        \n                        \n                            \n                                Value : beforeShow\n                            \n                        \n                        \n                            \n                                 SHOWN\n                            \n                        \n                        \n                            \n                                Value : shown\n                            \n                        \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 CLICK\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n                        \n                            \n                                 MOUSE_ENTER\n                            \n                        \n                        \n                            \n                                Value : mouseenter\n                            \n                        \n                        \n                            \n                                 MOUSE_LEAVE\n                            \n                        \n                        \n                            \n                                Value : mouseleave\n                            \n                        \n                        \n                            \n                                 BEFORE_HIDE\n                            \n                        \n                        \n                            \n                                Value : beforeHide\n                            \n                        \n                        \n                            \n                                 HIDDEN\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 DESTROYED\n                            \n                        \n                        \n                            \n                                Value : destroyed\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireType\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 ASYNC\n                            \n                        \n                        \n                            \n                                Value : async\n                            \n                        \n                        \n                            \n                                 CONFIRM\n                            \n                        \n                        \n                            \n                                Value : confirm\n                            \n                        \n                        \n                            \n                                 PROMPT\n                            \n                        \n                        \n                            \n                                Value : prompt\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isObject   (projects/.../utils.ts)\n                        \n                        \n                            mergeDeep   (projects/.../utils.ts)\n                        \n                        \n                            SetToastType   (projects/.../set-toast-type.decorator.ts)\n                        \n                        \n                            TransformArgument   (projects/.../transform-argument.decorator.ts)\n                        \n                        \n                            uuid   (projects/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isObject\n                        \n                    \n                \n            \n            \n                \nisObject(item: any)\n                \n            \n\n\n\n\n            \n                \n                    Simple is object check.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeDeep\n                        \n                    \n                \n            \n            \n                \nmergeDeep(...sources: any)\n                \n            \n\n\n\n\n            \n                \n                    Deep merge objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array>\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n            \n                \nuuid()\n                \n            \n\n\n\n\n            \n                \n                    Generates random id\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number\n\n                    \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SetToastType\n                        \n                    \n                \n            \n            \n                \nSetToastType(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                    Defines toast style depending on method name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any\n\n                                    \n                                \n                                \n                                    propertyKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NotificationType\n\n                                    \n                                \n                                \n                                    descriptor\n                                    \n                                            PropertyDescriptor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        PropertyDescriptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TransformArgument\n                        \n                    \n                \n            \n            \n                \nTransformArgument(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                    Transform arguments to Snotify object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any\n\n                                    \n                                \n                                \n                                    propertyKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SnotifyTypeType\n\n                                    \n                                \n                                \n                                    descriptor\n                                    \n                                            PropertyDescriptor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        PropertyDescriptor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxSnotifire\nDemo project at https://ccpatrut.github.io/ngx-snotifire/\nFeatures\n\n8 types of toast notifications\nAbility to create toasts in different positions at the same time\nMany config options (icons, backdrop, timeout, position and much more)\nCustom fully controlled styling including animations\nRepository includes 3 different styles. So you can use on of them, or create your own\nCallbacks\nCustom HTML\n\nInstalation\nNPM\nnpm install ngx-snotifire\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.Copyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxSnotifireModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\nSnotificationService\n\nSnotificationService\n\nAppModule -->\n\nSnotificationService->AppModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.1-beta\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            ToastDefaults   (projects/.../toast-defaults.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/lib/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ToastDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  global: {\n    newOnTop: true,\n    maxOnScreen: 8,\n    maxAtPosition: 8,\n    filterDuplicates: false,\n  },\n  toast: {\n    type: SnotifireType.INFO,\n    showProgressBar: true,\n    timeout: 5000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    bodyMaxLength: 150,\n    titleMaxLength: 16,\n    backdrop: -1,\n    icon: undefined,\n    iconClass: undefined,\n    html: undefined,\n    position: SnotificationPositionType.RIGHT_BOTTOM,\n    animation: { enter: 'fadeIn', exit: 'fadeOut', time: 400 },\n  },\n  type: {\n    [SnotifireType.PROMPT]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      placeholder: 'Enter answer here...',\n      type: SnotifireType.PROMPT,\n    },\n    [SnotifireType.CONFIRM]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      type: SnotifireType.CONFIRM,\n    },\n    [SnotifireType.SUCCESS]: {\n      type: SnotifireType.SUCCESS,\n    },\n    [SnotifireType.ERROR]: {\n      type: SnotifireType.ERROR,\n    },\n    [SnotifireType.WARNING]: {\n      type: SnotifireType.WARNING,\n    },\n    [SnotifireType.INFO]: {\n      type: SnotifireType.INFO,\n    },\n    [SnotifireType.ASYNC]: {\n      pauseOnHover: false,\n      closeOnClick: false,\n      timeout: 0,\n      showProgressBar: false,\n      type: SnotifireType.ASYNC,\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Snotify default configuration object\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
