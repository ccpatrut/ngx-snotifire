var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.695,1,0.892]],["body/components/AppComponent.html",[0,0.635,1,0.949,2,1.126,3,0.353,4,0.166,5,0.817,6,1.02,7,0.817,8,0.817,9,0.147,10,0.678,11,0.875,12,1.123,13,0.678,14,1.659,15,1.123,16,1.233,17,1.233,18,1.581,19,0.875,20,1.233,21,0.185,22,0.377,23,1.444,24,1.581,25,1.581,26,0.95,27,2.044,28,2.325,29,1.842,30,1.737,31,2.325,32,1.543,33,1.842,34,1.842,35,1.842,36,1.842,37,1.842,38,1.842,39,1.842,40,1.842,41,1.842,42,2.325,43,1.581,44,1.581,45,1.712,46,1.712,47,2.049,48,1.712,49,0.808,50,1.4,51,1.842,52,1.581,53,1.842,54,1.304,55,1.581,56,1.842,57,2.039,58,2.325,59,1.123,60,0.032,61,1.531,62,0.567,63,0.751,64,1.233,65,1.233,66,1.371,67,1.581,68,1.4,69,1.233,70,1.834,71,1.834,72,1.4,73,0.949,74,1.233,75,1.4,76,1.17,77,1.4,78,1.4,79,1.4,80,1.4,81,1.4,82,1.4,83,1.4,84,1.4,85,1.4,86,1.4,87,1.4,88,1.581,89,1.4,90,0.678,91,0.572,92,1.233,93,1.233,94,1.126,95,1.4,96,1.4,97,1.4,98,1.4,99,1.4,100,1.4,101,1.4,102,1.4,103,1.4,104,1.4,105,1.4,106,1.4,107,0.611,108,0.352,109,2.044,110,0.742,111,0.622,112,0.678,113,0.527,114,0.486,115,0.875,116,0.486,117,0.572,118,0.572,119,1.114,120,0.486,121,1.233,122,0.527,123,0.308,124,0.206,125,1.207,126,0.742,127,0.742,128,0.742,129,2.044,130,1.715,131,1.219,132,2.538,133,1.859,134,0.742,135,0.742,136,0.742,137,0.742,138,0.742,139,0.742,140,1.033,141,0.742,142,1.233,143,0.742,144,2.017,145,1.233,146,1.451,147,0.414,148,0.742,149,1.233,150,1.885,151,1.233,152,1.233,153,1.233,154,1.233,155,0.808,156,1.76,157,0.742,158,0.742,159,1.219,160,1.126,161,1.219,162,0.742,163,0.742,164,0.742,165,1.233,166,0.742,167,0.742,168,1.126,169,1.365,170,0.742,171,0.742,172,0.742,173,0.622,174,0.622,175,0.742,176,0.742,177,0.742,178,0.742,179,0.742,180,0.622,181,0.742,182,0.742,183,0.622,184,0.742,185,0.742,186,0.742,187,0.742,188,0.742,189,1.033,190,0.742,191,1.712,192,0.742,193,0.622,194,0.742,195,0.742,196,2.205,197,0.742,198,1.581,199,2.336,200,0.742,201,0.742,202,1.699,203,1.203,204,1.325,205,0.963,206,1.8,207,0.742,208,0.742,209,1.233,210,1.339,211,1.233,212,1.867,213,0.742,214,2.234,215,1.219,216,0.742,217,0.527,218,0.742,219,1.233,220,1.233,221,1.233,222,0.742,223,0.742,224,1.682,225,1.233,226,0.742,227,1.892,228,0.742,229,0.678,230,1.581,231,1.233,232,0.883,233,0.622,234,0.742,235,0.572,236,0.678,237,0.678,238,0.742,239,0.742,240,0.742,241,1.581,242,1.842,243,1.233,244,1.581,245,1.867,246,1.444,247,0.678,248,0.742,249,1.233,250,0.742,251,0.742,252,1.126,253,1.659,254,0.808,255,1.233,256,1.033,257,1.308,258,1.233,259,1.233,260,1.126,261,1.033,262,0.742,263,1.908,264,1.682,265,1.8,266,1.842,267,1.233,268,1.581,269,1.842,270,0.742,271,0.742,272,0.742,273,0.875,274,1.444,275,0.742,276,0.742,277,0.622,278,0.742,279,1.233,280,1.233,281,0.572,282,0.622,283,0.678,284,0.742,285,2.673,286,1.867,287,1.033,288,0.742,289,0.742,290,0.742,291,0.742,292,0.742,293,0.742,294,0.742,295,0.405,296,0.622,297,0.742,298,1.348,299,1.339,300,2.325,301,3.474,302,1.945,303,1.694,304,1.694,305,1.507,306,1.945,307,2.325,308,3.224,309,2.905,310,1.945,311,1.945,312,3.474,313,1.694,314,2.325,315,3.474,316,1.945,317,1.945,318,1.357,319,2.325,320,1.694,321,2.325,322,2.325,323,1.945,324,1.694,325,1.694,326,1.17,327,2.325,328,1.945,329,4.159,330,2.325,331,2.905,332,3.855,333,3.855,334,4.788,335,4.613,336,3.361,337,4.788,338,4.613,339,1.4,340,1.4,341,1.4,342,1.4,343,1.4,344,2.325,345,2.325,346,2.325,347,3.474,348,1.945,349,1.4,350,1.4,351,2.494,352,2.983,353,4.788,354,1.4,355,1.945,356,1.4,357,1.4,358,1.4,359,2.325,360,1.4,361,1.4,362,2.983,363,1.4,364,1.4,365,1.02,366,1.4,367,1.4,368,2.983,369,1.4,370,1.4,371,2.325,372,1.4,373,1.4,374,1.4,375,1.4,376,2.983,377,3.474,378,1.4,379,1.4,380,1.4,381,1.4,382,1.4,383,1.4,384,0.907,385,1.4,386,1.4,387,1.4,388,1.4,389,1.4,390,1.4,391,1.4,392,1.4,393,1.945,394,1.4,395,1.17,396,1.4,397,0.678,398,1.4,399,1.4,400,1.4,401,1.4,402,0.622,403,0.817,404,2.028,405,0.817,406,0.817,407,0.572,408,0.742,409,0.817,410,0.572,411,0.817,412,0.572,413,0.817,414,0.572,415,0.817,416,0.817,417,0.011,418,0.011]],["title/modules/AppModule.html",[419,1.906,420,2.116]],["body/modules/AppModule.html",[1,1.76,3,0.456,4,0.456,9,0.405,54,1.798,60,0.032,73,1.052,107,0.955,108,0.97,111,1.712,112,1.866,113,1.859,114,1.339,118,2.017,119,1.236,120,1.339,123,0.51,124,0.566,274,1.866,402,1.712,417,0.023,418,0.023,419,2.249,420,4.154,421,2.249,422,2.249,423,3.968,424,3.968,425,3.968,426,2.808,427,3.223,428,3.223,429,3.223,430,3.223,431,3.223,432,3.546,433,3.597,434,2.808,435,1.866,436,3.854,437,4.129,438,4.129,439,4.937,440,4.937,441,3.854,442,4.937,443,4.937,444,3.854,445,3.854,446,4.937,447,3.854,448,4.937,449,3.854,450,4.937,451,3.854,452,3.854,453,4.937,454,3.854,455,4.937,456,3.854,457,4.937,458,4.937,459,3.854,460,2.808,461,3.854]],["title/components/ButtonsComponent.html",[0,0.695,407,1.334]],["body/components/ButtonsComponent.html",[0,1.218,1,1.043,2,2.377,3,0.452,4,0.452,5,2.229,7,2.229,8,2.229,9,0.401,12,1.438,13,1.849,14,2.32,15,1.438,19,1.848,21,0.505,26,2.005,49,1.326,54,1.694,57,1.884,59,1.438,60,0.032,61,1.884,62,0.581,63,0.961,70,1.326,71,1.326,107,0.796,108,0.961,119,1.739,123,0.505,124,0.561,125,1.326,203,1.34,205,1.182,217,1.848,232,1.13,253,2.042,254,1.705,257,1.848,273,1.848,277,2.692,365,3.575,402,1.696,403,2.229,404,3.341,405,2.229,406,2.229,407,2.339,408,2.875,409,2.229,410,1.56,411,2.229,412,1.56,413,2.229,414,1.56,415,2.229,416,2.229,417,0.023,418,0.023,462,1.02,463,3.193,464,4.104,465,4.104,466,3.18,467,3.18,468,4.908,469,3.575,470,2.782,471,4.908,472,2.216,473,3.818,474,3.193,475,2.474,476,2.474,477,2.024,478,2.474,479,3.193,480,3.193,481,4.908]],["title/interfaces/ButtonsConfig.html",[295,0.343,482,2.116]],["body/interfaces/ButtonsConfig.html",[3,0.519,4,0.519,9,0.46,21,0.58,22,0.868,60,0.032,62,0.684,63,1.514,66,1.514,70,1.523,71,1.859,107,0.644,123,0.58,204,2.787,205,0.855,247,2.592,253,2.265,263,2.432,265,2.563,295,0.46,299,2.006,305,3.468,365,3.899,417,0.025,418,0.025,462,0.781,472,2.187,476,2.842,477,2.325,482,3.468,483,1.298,484,3.668,485,2.842,486,3.899,487,2.842]],["title/interfaces/FunctionalConfig.html",[45,1.45,295,0.343]],["body/interfaces/FunctionalConfig.html",[0,0.683,1,0.572,3,0.248,4,0.248,9,0.22,10,1.014,11,0.788,12,1.208,14,0.788,15,0.788,16,1.11,17,1.11,18,1.11,19,0.788,20,1.11,21,0.277,22,0.52,23,1.014,24,1.11,25,1.11,27,2.069,29,1.11,30,1.873,32,0.93,33,1.11,34,1.11,35,1.11,36,1.11,37,1.11,38,1.11,39,1.11,40,1.11,41,1.11,43,1.11,44,1.11,45,1.943,46,1.733,47,2.21,48,1.733,49,0.727,51,1.701,52,1.11,53,1.701,54,1.155,55,1.11,56,1.701,60,0.032,62,0.613,64,1.11,65,1.11,66,1.304,67,1.11,69,1.11,71,1.115,73,1.066,74,1.11,88,1.701,92,1.11,93,1.11,94,1.014,107,0.731,108,0.527,109,2.5,110,1.11,111,0.93,112,1.014,113,0.788,114,0.727,115,1.208,116,0.727,117,0.856,118,0.856,119,0.671,120,0.727,121,1.701,122,0.788,123,0.425,124,0.308,125,1.519,126,1.11,127,1.11,128,1.11,129,2.5,130,1.799,131,0.856,132,2.905,133,1.873,134,1.11,135,1.11,136,1.11,137,1.11,138,1.11,139,1.11,140,1.426,141,1.11,142,2.5,143,1.11,144,2.324,145,1.701,146,1.873,147,0.62,148,1.11,149,1.701,150,2.183,151,1.701,152,1.701,153,1.701,154,1.701,155,1.115,156,1.355,157,1.11,158,1.11,159,1.594,160,1.554,161,1.594,162,1.11,163,1.11,164,1.11,165,1.701,166,1.11,167,1.11,168,1.554,169,1.582,170,1.11,171,1.11,172,1.11,173,0.93,174,0.93,175,1.11,176,1.11,177,1.11,178,1.11,179,1.11,180,0.93,181,1.11,182,1.11,183,0.93,184,1.11,185,1.11,186,1.11,187,1.11,188,1.11,189,1.426,190,1.11,191,2.095,192,1.11,193,0.93,194,1.11,195,1.11,196,2.638,197,1.11,198,2.069,199,2.746,200,1.11,201,1.11,202,2.033,203,1.066,204,1.733,205,1.01,206,0.856,207,1.11,208,1.11,209,1.701,210,1.355,211,1.701,212,2.284,213,1.11,214,2.41,215,1.594,216,1.11,217,0.788,218,1.11,219,1.701,220,1.701,221,1.701,222,1.11,223,1.11,224,1.554,225,1.701,226,1.11,227,1.942,228,1.11,229,1.014,230,2.069,231,1.701,232,0.95,233,0.93,234,1.11,235,0.856,236,1.014,237,1.014,238,1.11,239,1.11,240,1.11,241,2.069,242,2.319,243,1.701,244,2.069,245,1.89,246,1.89,247,1.014,248,1.11,249,1.701,250,1.11,251,1.11,252,1.554,253,1.776,254,1.115,255,1.701,256,1.426,257,1.208,258,1.701,259,1.701,260,1.554,261,1.426,262,1.11,263,1.873,264,2.118,265,2.116,266,2.319,267,1.701,268,2.069,269,1.701,270,1.11,271,1.11,272,1.11,273,1.208,274,1.014,275,1.11,276,1.11,277,0.93,278,1.11,279,1.701,280,1.701,281,0.856,282,0.93,283,1.014,284,1.11,285,1.014,286,1.014,287,0.93,288,1.11,289,1.11,290,1.11,291,1.11,292,1.11,293,1.11,294,1.11,295,0.495,296,0.93,297,2.319,298,1.612,299,1.638,417,0.015,418,0.015,483,0.62]],["title/pipes/KeysPipe.html",[488,1.731,489,1.906]],["body/pipes/KeysPipe.html",[3,0.548,4,0.548,9,0.486,11,1.743,13,2.243,26,1.892,57,1.608,59,1.743,60,0.032,61,2.054,62,0.548,63,1.166,70,1.608,91,2.416,107,0.68,108,1.166,123,0.613,124,0.68,155,1.608,169,1.637,384,3.001,417,0.026,418,0.026,462,0.985,488,3.136,489,3.228,490,3.001,491,3.873,492,5.914,493,4.626,494,4.631,495,4.626,496,4.631,497,4.631,498,2.243,499,4.631]],["title/components/NgxSnotifireComponent.html",[0,0.695,410,1.334]],["body/components/NgxSnotifireComponent.html",[0,0.835,1,0.577,2,1.564,3,0.25,4,0.25,5,1.233,7,1.233,8,1.233,9,0.222,11,1.216,12,1.477,13,1.023,14,1.956,15,0.795,19,1.216,21,0.279,22,0.524,26,1.32,30,1.477,32,1.952,49,0.734,54,1.3,57,2.091,59,1.654,60,0.032,61,1.734,62,0.684,63,1.106,70,1.805,71,1.734,90,1.9,91,1.603,107,0.733,108,0.532,115,1.956,116,1.526,119,1.666,120,1.122,122,0.795,123,0.279,124,0.31,125,1.362,146,2.068,147,1.161,156,1.362,159,1.795,160,1.023,161,1.795,169,1.161,202,1.795,203,0.882,205,0.923,210,1.122,217,1.216,232,0.625,254,1.122,257,1.216,298,1.53,310,1.766,395,1.766,397,2.516,402,0.938,403,1.233,404,2.564,405,1.233,406,1.233,407,0.863,408,2.08,409,1.233,410,1.795,411,1.233,412,0.863,413,1.233,414,0.863,415,1.233,416,1.233,417,0.015,418,0.015,462,1.08,466,2.093,467,2.093,470,1.539,472,2.244,475,1.368,476,1.368,477,1.12,478,1.368,487,2.093,488,2.841,500,5.071,501,5.071,502,1.766,503,3.281,504,3.923,505,3.23,506,3.923,507,3.923,508,3.923,509,3.923,510,4.734,511,3.449,512,2.858,513,3.923,514,3.923,515,4.393,516,3.281,517,3.23,518,2.702,519,3.23,520,2.112,521,3.559,522,2.112,523,3.632,524,2.112,525,2.112,526,2.112,527,3.23,528,2.112,529,3.23,530,3.792,531,2.353,532,2.702,533,1.435,534,3.23,535,3.23,536,2.112,537,3.23,538,3.674,539,2.542,540,2.702,541,2.112,542,2.112,543,5.358,544,5.358,545,2.112,546,2.112,547,2.112,548,3.281,549,2.112,550,2.112,551,2.542,552,2.112,553,2.702,554,2.702,555,2.702,556,1.766,557,1.539,558,1.539,559,2.112,560,2.112,561,2.112,562,1.766,563,2.112,564,2.112,565,3.923,566,2.112,567,3.23,568,3.923,569,3.923,570,3.23,571,3.923,572,2.112,573,3.23,574,3.23,575,2.112,576,2.702,577,4.393,578,2.112,579,2.112,580,2.112,581,2.112,582,3.281,583,3.23,584,2.112,585,2.112,586,2.112,587,2.112,588,3.23,589,3.23,590,2.112,591,2.112,592,2.112,593,2.112,594,2.112,595,2.112,596,4.734,597,2.112,598,2.112,599,1.766,600,3.23]],["title/modules/NgxSnotifireModule.html",[419,1.906,432,1.906]],["body/modules/NgxSnotifireModule.html",[2,1.926,3,0.471,4,0.471,9,0.418,26,1.625,54,1.491,57,1.382,60,0.032,70,1.382,107,0.88,108,1.001,123,0.526,124,0.584,169,1.177,402,1.767,407,2.502,410,2.645,412,2.502,414,2.502,417,0.024,418,0.024,419,2.322,421,2.322,422,2.322,423,4.027,424,2.898,425,3.67,426,4.027,432,3.852,433,3.67,434,2.898,435,1.926,437,3.327,438,4.623,462,0.897,478,2.577,489,3.575,490,2.577,601,3.327,602,3.327,603,3.327,604,3.575,605,5.037,606,3.978,607,5.037,608,5.528,609,3.978,610,5.528,611,5.037,612,3.327]],["title/interfaces/NotificationConfig.html",[48,1.45,295,0.343]],["body/interfaces/NotificationConfig.html",[0,0.689,1,0.579,3,0.251,4,0.251,9,0.223,10,1.026,11,0.798,12,1.219,14,0.798,15,0.798,16,1.123,17,1.123,18,1.123,19,0.798,20,1.123,21,0.28,22,0.525,23,1.026,24,1.123,25,1.123,27,2.084,29,1.123,30,1.882,32,0.941,33,1.123,34,1.123,35,1.123,36,1.123,37,1.123,38,1.123,39,1.123,40,1.123,41,1.123,43,1.123,44,1.123,45,1.746,46,1.746,47,2.221,48,1.955,49,0.736,51,1.717,52,1.123,53,1.717,54,1.163,55,1.123,56,1.717,60,0.032,62,0.561,64,1.123,65,1.123,66,1.309,67,1.123,69,1.123,71,1.125,73,1.073,74,1.123,88,1.717,92,1.123,93,1.123,94,1.026,107,0.734,108,0.533,109,2.514,110,1.123,111,0.941,112,1.026,113,0.798,114,0.736,115,1.219,116,0.736,117,0.866,118,0.866,119,0.679,120,0.736,121,1.717,122,0.798,123,0.428,124,0.311,125,1.529,126,1.123,127,1.123,128,1.123,129,2.514,130,1.807,131,0.866,132,2.915,133,1.882,134,1.123,135,1.123,136,1.123,137,1.123,138,1.123,139,1.123,140,1.439,141,1.123,142,1.717,143,1.123,144,2.192,145,1.717,146,1.48,147,0.627,148,1.123,149,1.717,150,2.192,151,1.717,152,1.717,153,1.717,154,1.717,155,1.125,156,1.365,157,1.123,158,1.123,159,2.043,160,1.569,161,2.043,162,1.123,163,1.123,164,1.123,165,1.717,166,1.123,167,1.123,168,1.569,169,1.588,170,1.123,171,1.123,172,1.123,173,0.941,174,0.941,175,1.123,176,1.123,177,1.123,178,1.123,179,1.123,180,0.941,181,1.123,182,1.123,183,0.941,184,1.123,185,1.123,186,1.123,187,1.123,188,1.123,189,1.439,190,1.123,191,2.106,192,1.123,193,0.941,194,1.123,195,1.123,196,2.651,197,1.123,198,2.084,199,2.758,200,1.123,201,1.123,202,2.043,203,1.073,204,1.746,205,1.014,206,0.866,207,1.123,208,1.123,209,1.717,210,1.365,211,1.717,212,2.296,213,1.123,214,2.421,215,1.606,216,1.123,217,0.798,218,1.123,219,1.717,220,1.717,221,1.717,222,1.123,223,1.123,224,1.569,225,1.717,226,1.123,227,1.948,228,1.123,229,1.026,230,2.084,231,1.717,232,0.959,233,0.941,234,1.123,235,0.866,236,1.026,237,1.026,238,1.123,239,1.123,240,1.123,241,2.084,242,2.333,243,1.717,244,2.084,245,1.904,246,1.904,247,1.026,248,1.123,249,1.717,250,1.123,251,1.123,252,1.569,253,1.785,254,1.125,255,1.717,256,1.439,257,1.219,258,1.717,259,1.717,260,1.569,261,1.439,262,1.123,263,1.882,264,2.132,265,2.125,266,2.333,267,1.717,268,2.084,269,1.717,270,1.123,271,1.123,272,1.123,273,1.219,274,1.026,275,1.123,276,1.123,277,0.941,278,1.123,279,1.717,280,1.717,281,0.866,282,0.941,283,1.026,284,1.123,285,1.026,286,1.026,287,0.941,288,1.123,289,1.123,290,1.123,291,1.123,292,1.123,293,1.123,294,1.123,295,0.498,296,0.941,297,1.123,298,1.532,299,1.647,417,0.015,418,0.015,483,0.627]],["title/interfaces/NotificationFormValue.html",[295,0.343,296,1.45]],["body/interfaces/NotificationFormValue.html",[0,0.689,1,0.579,3,0.251,4,0.251,9,0.223,10,1.026,11,0.798,12,1.219,14,0.798,15,0.798,16,1.123,17,1.123,18,1.123,19,0.798,20,1.123,21,0.28,22,0.525,23,1.026,24,1.123,25,1.123,27,2.084,29,1.123,30,1.882,32,0.941,33,1.123,34,1.123,35,1.123,36,1.123,37,1.123,38,1.123,39,1.123,40,1.123,41,1.123,43,1.123,44,1.123,45,1.746,46,1.746,47,2.534,48,1.746,49,0.736,51,1.717,52,1.123,53,1.717,54,1.163,55,1.123,56,1.717,60,0.032,62,0.561,64,1.123,65,1.123,66,1.309,67,1.123,69,1.123,71,1.125,73,1.073,74,1.123,88,1.717,92,1.123,93,1.123,94,1.026,107,0.734,108,0.533,109,2.514,110,1.123,111,0.941,112,1.026,113,0.798,114,0.736,115,1.657,116,0.736,117,0.866,118,0.866,119,0.679,120,0.736,121,1.717,122,0.798,123,0.428,124,0.311,125,1.529,126,1.123,127,1.123,128,1.123,129,2.514,130,1.807,131,0.866,132,2.915,133,1.882,134,1.123,135,1.123,136,1.123,137,1.123,138,1.123,139,1.123,140,1.439,141,1.123,142,1.717,143,1.123,144,2.192,145,1.717,146,1.48,147,0.627,148,1.123,149,1.717,150,2.192,151,1.717,152,1.717,153,1.717,154,1.717,155,1.125,156,1.737,157,1.123,158,1.123,159,1.606,160,1.569,161,1.606,162,1.123,163,1.123,164,1.123,165,1.717,166,1.123,167,1.123,168,1.569,169,1.588,170,1.123,171,1.123,172,1.123,173,0.941,174,0.941,175,1.123,176,1.123,177,1.123,178,1.123,179,1.123,180,0.941,181,1.123,182,1.123,183,0.941,184,1.123,185,1.123,186,1.123,187,1.123,188,1.123,189,1.439,190,1.123,191,2.106,192,1.123,193,0.941,194,1.123,195,1.123,196,2.651,197,1.123,198,2.084,199,2.758,200,1.123,201,1.123,202,2.043,203,1.073,204,1.746,205,1.014,206,0.866,207,1.123,208,1.123,209,1.717,210,1.365,211,1.717,212,2.296,213,1.123,214,2.421,215,1.606,216,1.123,217,0.798,218,1.123,219,1.717,220,1.717,221,1.717,222,1.123,223,1.123,224,1.569,225,1.717,226,1.123,227,1.948,228,1.123,229,1.026,230,2.084,231,1.717,232,0.959,233,0.941,234,1.123,235,0.866,236,1.026,237,1.026,238,1.123,239,1.123,240,1.123,241,2.084,242,2.333,243,1.717,244,2.084,245,1.904,246,1.904,247,1.026,248,1.123,249,1.717,250,1.123,251,1.123,252,1.569,253,1.785,254,1.125,255,1.717,256,1.439,257,1.219,258,1.717,259,1.717,260,1.569,261,1.439,262,1.123,263,1.882,264,2.132,265,2.125,266,2.333,267,1.717,268,2.084,269,1.717,270,1.123,271,1.123,272,1.123,273,1.219,274,1.026,275,1.123,276,1.123,277,0.941,278,1.123,279,1.717,280,1.717,281,0.866,282,0.941,283,1.026,284,1.123,285,1.026,286,1.026,287,0.941,288,1.123,289,1.123,290,1.123,291,1.123,292,1.123,293,1.123,294,1.123,295,0.498,296,1.439,297,1.123,298,1.365,299,1.647,417,0.015,418,0.015,483,0.627]],["title/components/PromptComponent.html",[0,0.695,412,1.334]],["body/components/PromptComponent.html",[0,1.14,1,1.016,2,2.337,3,0.44,4,0.44,5,2.172,7,2.172,8,2.172,9,0.391,12,1.401,13,1.802,14,2.306,15,1.401,19,1.817,21,0.492,22,0.782,26,1.972,57,1.969,59,1.401,60,0.032,61,1.861,62,0.571,63,0.937,66,1.215,70,1.292,90,2.337,91,1.972,107,0.787,108,0.937,116,1.292,119,1.883,123,0.492,124,0.546,155,1.676,169,1.101,203,1.318,205,1.105,232,1.585,257,1.817,273,1.817,281,1.972,318,3.513,402,1.653,403,2.172,404,3.308,405,2.172,406,2.172,407,1.52,408,1.973,409,2.172,410,1.52,411,2.172,412,2.316,413,2.172,414,1.52,415,2.172,416,2.172,417,0.023,418,0.023,462,1.046,464,4.036,465,4.036,466,3.127,467,3.127,469,3.516,472,2.189,474,3.112,475,2.411,476,2.411,477,1.973,539,2.411,557,2.711,613,3.112,614,4.826,615,5.357,616,5.357,617,4.826,618,3.721,619,4.826,620,3.721,621,4.826,622,3.721,623,3.721,624,4.826,625,3.721,626,4.826,627,3.516]],["title/interfaces/SnotifireAnimate.html",[295,0.343,628,2.116]],["body/interfaces/SnotifireAnimate.html",[0,1.145,3,0.524,4,0.524,6,3.92,9,0.465,21,0.585,22,0.872,60,0.032,62,0.686,66,1.583,123,0.585,232,1.593,235,1.808,261,1.965,282,2.68,283,2.143,295,0.465,298,1.584,417,0.026,418,0.026,435,2.606,462,0.788,483,1.309,533,1.965,628,3.487,629,2.582,630,3.7,631,4.124,632,4.424,633,3.7,634,4.5,635,3.7,636,4.424,637,4.424,638,4.424,639,4.424,640,4.424,641,5.046,642,3.67,643,5.381]],["title/interfaces/SnotifireConfig.html",[73,0.892,295,0.343]],["body/interfaces/SnotifireConfig.html",[3,0.324,4,0.324,9,0.288,21,0.362,22,0.635,60,0.032,62,0.763,63,1.646,66,1.56,73,1.069,107,0.775,113,1.031,114,0.951,115,1.878,120,1.36,123,0.362,124,0.575,130,1.36,131,2.038,133,1.474,140,2.215,144,2.492,146,2.066,147,1.159,156,1.906,183,2.215,189,2.215,191,2.215,193,2.215,203,1.578,205,1.209,206,1.6,215,1.6,227,1.732,233,1.739,253,2.066,281,2.242,286,2.415,295,0.288,298,1.666,299,2.043,303,2.853,304,2.853,305,2.538,306,3.275,313,2.853,318,2.286,397,2.415,417,0.019,418,0.019,460,2.853,462,0.488,482,3.232,483,0.811,485,1.775,530,2.538,538,3.275,628,3.232,629,1.599,631,3.556,644,4.832,645,4.171,646,3.916,647,3.916,648,3.916,649,4.987,650,4.987,651,3.916,652,4.171,653,3.916,654,3.916,655,3.916,656,4.171,657,3.916,658,3.916,659,3.916,660,3.916,661,3.916,662,3.916,663,3.916,664,3.916,665,2.911,666,3.275,667,3.275,668,3.916,669,3.916,670,3.916,671,2.739,672,1.775,673,2.739,674,2.739,675,2.291]],["title/interfaces/SnotifireDefaults.html",[295,0.343,676,2.379]],["body/interfaces/SnotifireDefaults.html",[3,0.532,4,0.532,9,0.472,21,0.595,22,0.881,60,0.032,62,0.768,63,1.589,66,1.132,73,1.771,107,0.798,123,0.595,173,2.836,295,0.472,417,0.026,418,0.026,462,0.801,483,1.331,498,2.632,533,1.997,558,3.276,672,3.521,676,3.959,677,3.761,678,3.521,679,3.931,680,4.545,681,4.497]],["title/interfaces/SnotifireGlobalConfig.html",[295,0.343,679,2.116]],["body/interfaces/SnotifireGlobalConfig.html",[3,0.412,4,0.412,9,0.365,21,0.46,22,0.749,60,0.032,62,0.699,63,1.541,123,0.46,130,1.605,131,1.887,133,1.739,156,2.052,159,2.414,161,2.257,174,2.453,180,2.453,205,1.246,210,1.918,215,2.257,285,2.861,295,0.365,298,1.613,299,2.052,308,5.12,309,4.941,311,3.864,313,3.365,331,3.864,336,3.365,417,0.022,418,0.022,435,2.237,462,0.62,483,1.03,485,2.256,530,3.579,533,1.546,554,3.864,555,3.864,633,3.864,642,2.696,666,3.864,678,2.256,679,2.993,682,2.911,683,3.481,684,4.62,685,4.62,686,4.62,687,4.62,688,4.024,689,3.365,690,4.619,691,4.619,692,4.62,693,4.62,694,3.864,695,4.62,696,5.523,697,4.619,698,3.864,699,4.62,700,4.62,701,4.62,702,4.62,703,3.864,704,4.62,705,4.62,706,4.62,707,4.62,708,4.62,709,4.62]],["title/classes/SnotifireModel.html",[117,1.334,124,0.48]],["body/classes/SnotifireModel.html",[3,0.448,4,0.448,9,0.397,21,0.5,22,0.791,49,1.695,57,2.1,59,1.424,60,0.032,61,1.314,62,0.751,63,1.609,66,1.618,73,1.612,107,0.793,113,1.424,114,1.314,117,1.993,120,1.314,123,0.5,124,0.556,130,2.136,131,2.33,133,2.223,203,1.679,206,1.993,227,2.136,264,2.859,417,0.023,418,0.023,462,1.096,498,2.363,652,4.938,665,3.446,672,2.452,675,3.164,710,2.756,711,3.164,712,5.446,713,3.783,714,3.783,715,3.783,716,4.879,717,3.783,718,3.783,719,3.783,720,3.783]],["title/interfaces/SnotifireNotifications.html",[295,0.343,521,2.116]],["body/interfaces/SnotifireNotifications.html",[3,0.492,4,0.492,9,0.437,21,0.55,22,0.84,60,0.031,62,0.758,63,1.668,107,0.611,123,0.55,295,0.437,417,0.025,418,0.025,462,0.741,472,2.741,477,2.204,483,1.23,521,3.356,629,2.427,689,4.301,721,3.477,722,4.938,723,4.938,724,4.938,725,4.938,726,4.938,727,4.938,728,4.938,729,4.938,730,4.158]],["title/classes/SnotifireToastModel.html",[124,0.48,472,1.334]],["body/classes/SnotifireToastModel.html",[3,0.327,4,0.327,9,0.29,21,0.366,22,0.639,26,1.611,30,1.73,49,1.37,57,2.102,59,1.73,60,0.032,61,1.596,62,0.708,63,1.333,66,1.505,70,1.596,71,1.74,73,1.446,90,2.226,91,2.367,107,0.736,116,1.84,122,1.042,123,0.366,124,0.406,125,2.17,130,1.84,133,1.994,150,2.047,155,1.37,169,1.167,205,1.251,210,1.37,227,1.84,246,1.91,261,1.752,265,2.047,298,1.368,299,1.913,318,2.302,408,2.091,417,0.019,418,0.019,462,1.089,472,2.164,486,2.016,487,2.978,512,2.873,523,1.793,533,2.042,539,2.978,540,3.298,548,4.19,551,2.978,558,2.873,576,2.314,665,1.615,672,1.793,710,2.016,712,5.111,731,5.111,732,2.314,733,3.944,734,3.944,735,3.844,736,4.596,737,3.65,738,4.596,739,5.506,740,2.767,741,3.944,742,2.767,743,2.767,744,2.767,745,3.944,746,3.944,747,2.767,748,3.944,749,3.944,750,3.944,751,3.298,752,2.767,753,2.767,754,3.944,755,2.767,756,3.944,757,2.767,758,3.944,759,3.944,760,2.767,761,3.944,762,2.767,763,2.767,764,3.944,765,3.944,766,2.016,767,2.767,768,2.767,769,2.767,770,2.767,771,2.767,772,2.767,773,2.767,774,2.767,775,3.944,776,3.298,777,3.944,778,3.298,779,2.767]],["title/components/ToastComponent.html",[0,0.695,414,1.334]],["body/components/ToastComponent.html",[0,0.827,1,0.568,2,1.546,3,0.246,4,0.246,5,1.214,7,1.214,8,1.214,9,0.218,11,1.202,12,1.463,13,1.007,14,1.945,15,0.783,19,1.202,21,0.275,22,0.518,26,1.304,30,1.463,32,1.936,49,0.722,54,1.29,57,2.085,59,1.202,60,0.032,61,1.514,62,0.587,63,0.804,70,1.939,71,2.001,90,1.882,91,1.588,107,0.691,108,0.524,116,0.722,119,1.508,122,0.783,123,0.275,124,0.305,125,0.722,147,0.945,150,1.588,155,1.724,169,0.616,202,1.781,203,0.872,205,1.201,210,1.35,212,1.882,217,1.202,227,1.109,232,0.616,254,1.109,256,1.418,257,1.202,273,1.202,277,1.418,298,1.411,302,1.74,303,3.426,304,2.326,397,2.404,402,0.924,403,1.214,404,2.544,405,1.214,406,1.214,407,0.85,408,2.493,409,1.214,410,0.85,411,1.214,412,0.85,413,1.214,414,1.781,415,1.214,416,1.214,417,0.015,418,0.015,435,1.007,462,1.077,466,2.069,467,2.069,469,2.326,470,1.515,472,1.781,475,1.348,477,1.103,478,1.348,479,1.74,480,2.67,487,1.348,498,1.007,503,3.25,511,2.326,512,2.831,516,3.25,518,3.25,533,0.924,551,2.518,556,1.74,557,1.515,562,2.67,627,3.175,631,3.047,642,1.214,665,1.214,735,3.25,737,2.831,766,2.326,776,2.67,778,2.67,780,1.74,781,3.193,782,3.886,783,3.933,784,4.359,785,4.359,786,4.963,787,4.359,788,4.359,789,4.359,790,4.359,791,3.193,792,3.193,793,2.08,794,2.08,795,2.08,796,2.08,797,3.193,798,3.193,799,2.08,800,2.08,801,2.08,802,2.08,803,5.332,804,5.332,805,2.08,806,3.193,807,2.08,808,3.193,809,2.08,810,3.193,811,2.08,812,3.193,813,3.193,814,3.193,815,2.08,816,4.359,817,3.886,818,2.08,819,3.193,820,3.193,821,3.193,822,3.193,823,2.08,824,2.08,825,3.193,826,2.08,827,2.08,828,3.193,829,2.08,830,3.193,831,2.08,832,2.08,833,2.08,834,4.963,835,5.582,836,4.963,837,2.08,838,2.08,839,4.359,840,2.08,841,2.08,842,2.08,843,2.08,844,4.359,845,3.193,846,2.08,847,1.74,848,2.08,849,3.193,850,2.08,851,2.08,852,2.08,853,2.08,854,2.08,855,3.193,856,2.08,857,2.08,858,2.08,859,3.193,860,3.886,861,2.08,862,2.08,863,2.08,864,2.08,865,1.74,866,2.08,867,2.08,868,2.08,869,2.08,870,2.08,871,3.886,872,2.08,873,2.08,874,2.08,875,3.193,876,3.193]],["title/interfaces/ToastData.html",[47,1.45,295,0.343]],["body/interfaces/ToastData.html",[0,0.689,1,0.579,3,0.251,4,0.251,9,0.223,10,1.026,11,0.798,12,1.219,14,0.798,15,0.798,16,1.123,17,1.123,18,1.123,19,0.798,20,1.123,21,0.28,22,0.525,23,1.026,24,1.123,25,1.123,27,2.084,29,1.123,30,1.882,32,0.941,33,1.123,34,1.123,35,1.123,36,1.123,37,1.123,38,1.123,39,1.123,40,1.123,41,1.123,43,1.123,44,1.123,45,1.746,46,1.746,47,2.31,48,1.746,49,0.736,51,1.717,52,1.123,53,1.717,54,1.163,55,1.123,56,1.717,60,0.032,62,0.561,64,1.123,65,1.123,66,1.436,67,1.123,69,1.123,71,1.125,73,1.073,74,1.123,88,1.717,92,1.123,93,1.123,94,1.026,107,0.734,108,0.533,109,2.514,110,1.123,111,0.941,112,1.026,113,0.798,114,0.736,115,1.219,116,0.736,117,0.866,118,0.866,119,0.679,120,0.736,121,1.717,122,0.798,123,0.428,124,0.311,125,1.529,126,1.123,127,1.123,128,1.123,129,2.514,130,1.948,131,0.866,132,2.915,133,2.07,134,1.123,135,1.123,136,1.123,137,1.123,138,1.123,139,1.123,140,1.439,141,1.123,142,1.717,143,1.123,144,2.192,145,1.717,146,1.48,147,0.627,148,1.123,149,1.717,150,2.192,151,1.717,152,1.717,153,1.717,154,1.717,155,1.125,156,1.365,157,1.123,158,1.123,159,1.606,160,1.569,161,1.606,162,1.123,163,1.123,164,1.123,165,1.717,166,1.123,167,1.123,168,1.569,169,1.588,170,1.123,171,1.123,172,1.123,173,0.941,174,0.941,175,1.123,176,1.123,177,1.123,178,1.123,179,1.123,180,0.941,181,1.123,182,1.123,183,0.941,184,1.123,185,1.123,186,1.123,187,1.123,188,1.123,189,1.439,190,1.123,191,2.106,192,1.123,193,0.941,194,1.123,195,1.123,196,2.651,197,1.123,198,2.084,199,2.758,200,1.123,201,1.123,202,2.043,203,1.073,204,1.746,205,1.014,206,0.866,207,1.123,208,1.123,209,1.717,210,1.365,211,1.717,212,2.296,213,1.123,214,2.421,215,1.606,216,1.123,217,0.798,218,1.123,219,1.717,220,1.717,221,1.717,222,1.123,223,1.123,224,1.569,225,1.717,226,1.123,227,1.948,228,1.123,229,1.026,230,2.084,231,1.717,232,0.959,233,0.941,234,1.123,235,0.866,236,1.026,237,1.026,238,1.123,239,1.123,240,1.123,241,2.084,242,2.333,243,1.717,244,2.084,245,1.904,246,1.904,247,1.026,248,1.123,249,1.717,250,1.123,251,1.123,252,1.569,253,1.785,254,1.125,255,1.717,256,1.439,257,1.219,258,1.717,259,1.717,260,1.569,261,1.439,262,1.123,263,1.882,264,2.132,265,2.125,266,2.333,267,1.717,268,2.084,269,1.717,270,1.123,271,1.123,272,1.123,273,1.219,274,1.026,275,1.123,276,1.123,277,0.941,278,1.123,279,1.717,280,1.717,281,0.866,282,0.941,283,1.026,284,1.123,285,1.026,286,1.026,287,0.941,288,1.123,289,1.123,290,1.123,291,1.123,292,1.123,293,1.123,294,1.123,295,0.498,296,0.941,297,1.123,298,1.365,299,1.647,417,0.015,418,0.015,483,0.627]],["title/pipes/TruncatePipe.html",[488,1.731,604,1.906]],["body/pipes/TruncatePipe.html",[3,0.489,4,0.489,9,0.434,11,1.555,13,2,22,0.669,26,1.687,30,2.218,57,1.953,59,1.555,60,0.032,61,1.953,62,0.666,63,1.039,66,1.483,70,1.434,90,2.498,91,2.407,107,0.606,108,1.039,123,0.546,124,0.606,125,2.046,147,1.222,169,1.222,202,1.687,205,0.805,254,1.953,263,1.555,287,2.291,298,1.128,384,2.676,397,2,417,0.024,418,0.024,462,1.049,488,2.982,490,2.676,493,4.313,495,4.313,604,3.01,627,4.097,694,3.454,877,3.454,878,5.624,879,4.13,880,5.157,881,4.13,882,5.157,883,4.13,884,5.624,885,5.157,886,4.13,887,4.13,888,4.13,889,4.13,890,4.13,891,4.13]],["title/interfaces/VisualConfig.html",[46,1.45,295,0.343]],["body/interfaces/VisualConfig.html",[0,0.68,1,0.568,3,0.246,4,0.246,9,0.219,10,1.008,11,0.784,12,1.203,14,0.784,15,0.784,16,1.104,17,1.104,18,1.104,19,0.784,20,1.104,21,0.275,22,0.518,23,1.008,24,1.104,25,1.104,27,2.061,29,1.104,30,1.869,32,0.925,33,1.104,34,1.104,35,1.104,36,1.104,37,1.104,38,1.104,39,1.104,40,1.104,41,1.104,43,1.104,44,1.104,45,1.727,46,1.937,47,2.205,48,1.727,49,0.723,51,1.694,52,1.104,53,1.694,54,1.151,55,1.104,56,1.694,60,0.032,62,0.631,64,1.104,65,1.104,66,1.301,67,1.104,69,1.104,71,1.11,73,1.062,74,1.104,88,1.694,92,1.104,93,1.104,94,1.008,107,0.729,108,0.524,109,2.494,110,1.104,111,0.925,112,1.008,113,0.784,114,0.723,115,1.203,116,0.723,117,0.851,118,0.851,119,0.667,120,0.723,121,1.694,122,0.784,123,0.423,124,0.306,125,1.515,126,1.104,127,1.104,128,1.104,129,2.494,130,1.795,131,0.851,132,2.9,133,1.869,134,1.104,135,1.104,136,1.104,137,1.104,138,1.104,139,1.104,140,1.419,141,1.104,142,1.694,143,1.104,144,2.179,145,1.694,146,1.464,147,0.616,148,1.104,149,2.494,150,2.179,151,2.494,152,2.494,153,2.494,154,2.494,155,1.11,156,1.35,157,1.104,158,1.104,159,1.588,160,1.547,161,1.588,162,1.104,163,1.104,164,1.104,165,1.694,166,1.104,167,1.104,168,1.547,169,1.579,170,1.104,171,1.104,172,1.104,173,0.925,174,0.925,175,1.104,176,1.104,177,1.104,178,1.104,179,1.104,180,0.925,181,1.104,182,1.104,183,0.925,184,1.104,185,1.104,186,1.104,187,1.104,188,1.104,189,1.419,190,1.104,191,2.089,192,1.104,193,0.925,194,1.104,195,1.104,196,2.632,197,1.104,198,2.061,199,2.74,200,1.104,201,1.104,202,2.028,203,1.062,204,1.727,205,1.008,206,0.851,207,1.104,208,1.104,209,1.694,210,1.35,211,1.694,212,2.278,213,1.104,214,2.404,215,1.588,216,1.104,217,0.784,218,1.104,219,1.694,220,1.694,221,1.694,222,1.104,223,1.104,224,1.547,225,1.694,226,1.104,227,1.939,228,1.104,229,1.008,230,2.061,231,1.694,232,0.946,233,0.925,234,1.104,235,0.851,236,1.008,237,1.008,238,1.104,239,1.104,240,1.104,241,2.061,242,2.312,243,1.694,244,2.061,245,1.883,246,1.883,247,1.008,248,1.104,249,1.694,250,1.104,251,1.104,252,1.547,253,1.771,254,1.11,255,1.694,256,1.419,257,1.203,258,1.694,259,1.694,260,1.547,261,1.419,262,1.104,263,1.869,264,2.112,265,2.112,266,2.312,267,1.694,268,2.061,269,1.694,270,1.104,271,1.104,272,1.104,273,1.203,274,1.008,275,1.104,276,1.104,277,0.925,278,1.104,279,1.694,280,1.694,281,0.851,282,0.925,283,1.008,284,1.104,285,1.008,286,1.008,287,0.925,288,1.104,289,1.104,290,1.104,291,1.104,292,1.104,293,1.104,294,1.104,295,0.494,296,0.925,297,1.104,298,1.356,299,2.068,417,0.015,418,0.015,483,0.616]],["title/changelog.html",[892,1.998,893,1.998,894,2.742]],["body/changelog.html",[60,0.028,233,2.283,417,0.028,418,0.028,895,5.139,896,5.139,897,5.139,898,5.139,899,5.139,900,5.139]],["title/coverage.html",[901,3.701]],["body/coverage.html",[0,1.227,1,0.96,9,0.369,10,2.869,45,1.562,46,1.562,47,1.562,48,1.562,54,1.04,60,0.032,62,0.416,73,0.96,117,1.436,118,1.436,124,0.683,205,0.686,210,1.221,287,1.562,295,0.663,296,1.562,320,2.561,355,5.131,397,3.098,407,1.436,410,1.436,412,1.436,414,1.436,417,0.022,418,0.022,462,1.174,463,2.94,472,1.436,482,2.278,484,2.94,485,3.376,486,4.201,488,2.465,489,2.052,491,2.94,500,2.94,501,2.94,502,2.94,521,2.278,604,2.052,613,2.94,628,2.278,629,3.041,630,2.94,676,2.561,677,2.94,679,2.278,682,2.94,711,2.94,721,2.94,731,2.94,732,2.94,780,2.94,877,2.94,901,2.94,902,3.515,903,3.515,904,3.515,905,3.515,906,2.94,907,3.515,908,5.211,909,4.65,910,3.515,911,3.515,912,2.94,913,2.94,914,2.94,915,5.925,916,2.94,917,2.94,918,2.94,919,3.515,920,3.515,921,3.515,922,2.94,923,2.94,924,5.767,925,3.515,926,3.515,927,3.515,928,3.515,929,3.515,930,3.515,931,5.925,932,3.515,933,2.94,934,3.515,935,3.515,936,3.889,937,2.94,938,2.94,939,4.358,940,2.94,941,2.94,942,2.94,943,3.515,944,3.515,945,5.211,946,3.515,947,2.94,948,3.889,949,2.94,950,3.515,951,3.515]],["title/dependencies.html",[422,2.287,952,2.293]],["body/dependencies.html",[60,0.032,108,1.188,111,2.096,113,2.106,114,1.943,122,1.777,417,0.027,418,0.027,422,2.754,612,3.947,953,4.719,954,6.567,955,4.719,956,4.719,957,4.719,958,4.719,959,4.719,960,4.719,961,4.719,962,4.719,963,4.719,964,4.719,965,4.719,966,4.719,967,4.719,968,4.719,969,4.719]],["title/miscellaneous/enumerations.html",[970,1.454,971,3.277]],["body/miscellaneous/enumerations.html",[3,0.61,21,0.545,60,0.032,91,2.735,115,1.94,116,1.79,214,2.495,224,2.495,245,2.495,273,1.94,305,3.338,316,4.309,317,4.309,318,3.007,417,0.024,418,0.024,462,1.001,599,4.309,629,3.007,665,3.007,689,3.004,697,4.309,722,3.448,723,3.448,724,3.448,725,3.448,726,3.448,727,3.448,728,3.448,729,3.448,751,4.309,970,2.186,971,3.448,972,5.152,973,5.152,974,5.152,975,4.123,976,4.123,977,4.123,978,4.123,979,3.448,980,4.123,981,4.123,982,4.123,983,4.123,984,4.123,985,4.123,986,4.123,987,4.123,988,4.123,989,4.123,990,4.123,991,4.123,992,4.123,993,5.152,994,4.123]],["title/miscellaneous/functions.html",[970,1.454,995,3.277]],["body/miscellaneous/functions.html",[21,0.558,59,2.235,60,0.03,61,2.119,62,0.672,63,1.494,66,1.494,70,1.816,94,2.044,205,1.108,232,1.249,254,1.466,298,1.428,299,1.816,384,2.735,417,0.025,418,0.025,462,1.012,498,2.751,523,2.735,532,3.53,533,2.637,667,3.53,737,3.075,912,3.53,913,4.372,914,4.372,916,3.53,917,4.372,918,4.372,939,3.53,940,4.372,941,4.372,942,4.75,970,2.238,995,3.53,996,5.68,997,4.221,998,4.221,999,4.221,1000,4.221,1001,4.221,1002,4.221,1003,4.221,1004,4.221,1005,4.221,1006,4.221,1007,4.221,1008,4.221,1009,5.936,1010,5.936,1011,6.217,1012,4.221,1013,4.221,1014,4.221,1015,5.228,1016,4.221,1017,4.221,1018,4.221,1019,4.221]],["title/index.html",[21,0.363,892,1.998,893,1.998]],["body/index.html",[6,3.451,23,2.294,60,0.027,119,1.519,120,1.947,144,1.935,146,1.783,156,1.645,203,1.294,205,0.924,227,1.645,235,1.935,323,4.689,417,0.027,418,0.027,511,3.451,530,3.069,531,4.084,553,3.962,634,3.962,642,2.765,656,4.689,688,3.451,690,3.962,703,3.962,1020,4.737,1021,4.737,1022,4.737,1023,4.737,1024,4.737,1025,3.962,1026,3.962,1027,4.737,1028,5.606,1029,4.737,1030,4.737,1031,4.737,1032,4.737,1033,3.962,1034,3.962,1035,4.737,1036,3.962,1037,3.962,1038,4.737,1039,4.737,1040,4.737]],["title/license.html",[892,1.998,893,1.998,1041,1.998]],["body/license.html",[4,0.659,9,0.534,57,0.626,60,0.022,61,1.232,107,0.265,124,0.265,130,0.626,147,0.534,206,0.737,215,1.648,217,0.679,235,0.737,236,0.873,237,3.072,260,0.873,263,1.519,320,2.584,324,2.939,325,2.081,326,2.966,328,1.508,336,2.081,348,4.722,351,1.508,393,1.508,417,0.014,418,0.014,435,0.873,460,1.314,483,0.534,498,2.265,531,1.314,533,0.801,539,1.169,551,1.851,582,1.508,635,2.966,678,1.169,688,1.314,691,3.374,698,3.374,783,1.508,865,1.508,906,1.508,1026,1.508,1033,1.508,1034,4.377,1036,1.508,1037,4.484,1041,4.62,1042,2.966,1043,1.803,1044,1.803,1045,1.803,1046,5.647,1047,4.034,1048,4.397,1049,1.803,1050,5.784,1051,5.361,1052,5.082,1053,1.803,1054,1.803,1055,1.803,1056,1.803,1057,5.361,1058,5.564,1059,4.677,1060,5.361,1061,2.856,1062,1.803,1063,4.397,1064,1.803,1065,1.803,1066,1.803,1067,4.034,1068,5.234,1069,2.856,1070,2.856,1071,1.803,1072,3.547,1073,2.856,1074,2.856,1075,1.803,1076,5.94,1077,4.034,1078,2.856,1079,4.677,1080,1.803,1081,2.856,1082,1.803,1083,1.803,1084,1.803,1085,1.803,1086,1.803,1087,1.803,1088,3.547,1089,1.803,1090,3.547,1091,2.856,1092,1.803,1093,1.803,1094,4.677,1095,4.034,1096,2.856,1097,3.547,1098,3.547,1099,1.803,1100,1.803,1101,1.803,1102,1.803,1103,1.803,1104,2.856,1105,1.803,1106,3.547,1107,2.856,1108,1.803,1109,1.803,1110,5.234,1111,2.856,1112,1.803,1113,4.397,1114,2.856,1115,1.803,1116,5.94,1117,5.982,1118,1.803,1119,1.803,1120,1.803,1121,1.803,1122,1.803,1123,1.803,1124,1.803,1125,2.856,1126,2.856,1127,1.803,1128,1.803,1129,1.803,1130,1.803,1131,1.803,1132,4.034,1133,4.397,1134,1.803,1135,2.856,1136,4.034,1137,2.856,1138,1.803,1139,4.397,1140,2.856,1141,1.803,1142,1.803,1143,3.547,1144,1.803,1145,1.803,1146,1.803,1147,1.803,1148,2.856,1149,1.803,1150,1.803,1151,1.803,1152,3.547,1153,1.803,1154,1.803,1155,3.547,1156,1.803,1157,1.803,1158,1.803,1159,4.034,1160,5.361,1161,1.803,1162,1.803,1163,2.856,1164,5.082,1165,3.547,1166,2.856,1167,2.856,1168,2.856,1169,2.856,1170,3.547,1171,2.856,1172,3.547,1173,2.856,1174,2.856,1175,2.856,1176,2.856,1177,1.803,1178,2.856,1179,1.803,1180,1.803,1181,4.397,1182,4.901,1183,3.547,1184,2.856,1185,1.803,1186,1.803,1187,2.856,1188,2.856,1189,1.803,1190,1.803,1191,3.547,1192,2.856,1193,1.803,1194,1.803,1195,1.803,1196,3.547,1197,1.803,1198,1.803,1199,1.803,1200,2.856,1201,2.856,1202,1.803,1203,1.803,1204,1.803,1205,1.803,1206,1.803,1207,1.803,1208,1.803,1209,2.856,1210,1.803,1211,1.803,1212,1.803,1213,1.803,1214,1.803,1215,1.803,1216,1.803,1217,4.397,1218,1.803,1219,3.547,1220,1.803,1221,1.803,1222,1.803,1223,1.803,1224,1.803,1225,1.803,1226,5.082,1227,1.803,1228,1.803,1229,1.803,1230,1.803,1231,1.803,1232,4.034,1233,2.856,1234,4.034,1235,1.803,1236,1.803,1237,1.803,1238,1.803,1239,1.803,1240,3.547,1241,1.803,1242,1.803,1243,2.856,1244,2.856,1245,1.803,1246,1.803,1247,1.803,1248,1.803,1249,2.856,1250,2.856,1251,1.803,1252,1.803,1253,4.397,1254,1.803,1255,1.803,1256,1.803,1257,1.803,1258,1.803,1259,3.547,1260,3.547,1261,1.803,1262,1.803,1263,1.803,1264,1.803,1265,1.803,1266,1.803,1267,1.803,1268,1.803,1269,1.803,1270,1.803,1271,2.856,1272,1.803,1273,1.803,1274,2.856,1275,1.803,1276,1.803,1277,4.034,1278,1.803,1279,1.803,1280,1.803,1281,1.803,1282,1.803,1283,1.803,1284,4.034,1285,3.547,1286,3.547,1287,3.547,1288,2.856,1289,2.856,1290,3.547,1291,2.856,1292,2.856,1293,2.856,1294,2.856,1295,1.803,1296,1.803,1297,1.803,1298,1.803,1299,1.803,1300,1.803,1301,1.803,1302,1.803,1303,2.856,1304,1.803,1305,1.803,1306,1.803,1307,1.803,1308,4.397,1309,1.803,1310,1.803,1311,1.803,1312,1.803,1313,1.803,1314,1.803,1315,1.803,1316,1.803,1317,4.397,1318,1.803,1319,1.803,1320,1.803,1321,1.803,1322,1.803,1323,1.803,1324,1.803,1325,1.803,1326,1.803,1327,1.803,1328,1.803,1329,1.803,1330,1.803,1331,1.803,1332,1.803,1333,1.803,1334,1.803,1335,3.547,1336,1.803,1337,1.803,1338,1.803,1339,1.508,1340,1.803,1341,2.856,1342,1.803,1343,1.803,1344,1.803,1345,1.803,1346,1.803,1347,1.803,1348,1.803,1349,1.803,1350,1.803,1351,1.803,1352,1.803,1353,1.803,1354,1.803,1355,1.803,1356,1.803,1357,2.856,1358,1.803,1359,1.803,1360,1.803,1361,2.856,1362,2.856,1363,1.803,1364,1.803,1365,1.803,1366,1.803,1367,1.803,1368,1.803,1369,1.803,1370,1.803,1371,1.803,1372,1.803,1373,1.803,1374,1.803,1375,1.803,1376,1.803,1377,1.803,1378,1.803,1379,1.803,1380,1.803,1381,1.803,1382,1.803,1383,1.803,1384,1.803]],["title/modules.html",[421,2.583]],["body/modules.html",[60,0.028,76,4.893,114,2.032,417,0.028,418,0.028,420,3.303,421,2.975,432,2.975,1339,4.893,1385,5.851]],["title/overview.html",[1386,3.701]],["body/overview.html",[1,1.728,2,2.087,54,1.697,60,0.031,147,1.275,256,2.546,402,1.914,407,2.342,410,2.586,412,2.342,414,2.342,417,0.025,418,0.025,419,2.515,420,4.174,421,2.515,422,2.515,423,3.139,424,3.139,425,3.139,426,3.139,427,3.604,428,3.604,429,3.604,430,3.604,431,3.604,432,3.864,433,3.857,434,3.139,435,2.087,483,1.275,489,3.346,490,2.792,601,3.604,602,3.604,603,3.604,604,3.346,710,3.139,847,3.604,933,3.604,1386,3.604,1387,4.309]],["title/properties.html",[22,0.635,952,2.293]],["body/properties.html",[22,0.83,60,0.03,324,3.729,325,3.729,417,0.028,418,0.028,1041,3.729,1042,4.28,1388,5.118,1389,5.118]],["title/miscellaneous/variables.html",[970,1.454,1390,3.277]],["body/miscellaneous/variables.html",[21,0.477,60,0.032,62,0.763,73,0.985,90,2.816,91,2.288,115,1.358,118,1.932,140,1.602,144,2.288,146,1.358,147,1.068,150,2.521,155,2.167,156,1.253,159,1.474,161,1.474,168,2.713,173,1.602,174,1.602,180,1.602,183,1.602,189,2.101,191,2.488,193,2.101,203,0.985,204,2.488,229,1.747,232,1.068,252,1.747,253,1.781,263,2.109,265,2.288,281,1.474,282,2.101,397,2.556,417,0.022,418,0.022,462,0.843,498,2.713,523,3.419,631,2.338,641,3.017,642,2.106,644,3.017,645,3.017,678,2.338,680,3.017,766,3.446,922,3.017,923,3.956,936,3.017,937,3.956,938,3.956,947,3.017,948,4.684,949,3.017,970,1.912,979,3.017,1025,3.956,1390,3.017,1391,4.73,1392,3.607,1393,3.607,1394,3.607,1395,3.607,1396,3.607,1397,4.73,1398,5.277,1399,3.607,1400,3.607,1401,3.607,1402,3.607,1403,3.607,1404,4.73,1405,4.73,1406,3.607,1407,4.73,1408,4.73,1409,4.73,1410,4.73,1411,4.73]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":647,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["0.13.3",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":648,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["1.0.1",{"_index":1388,"title":{},"body":{"properties.html":{}}}],["1.1.19",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":694,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"pipes/TruncatePipe.html":{}}}],["10/17",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["10rem",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1387,"title":{},"body":{"overview.html":{}}}],["15",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["15/16",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1500",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["16",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2.12",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["1em",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"overview.html":{}}}],["2.0",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"license.html":{},"properties.html":{}}}],["2.0unless",{"_index":1379,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["2004",{"_index":1044,"title":{},"body":{"license.html":{}}}],["25",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":690,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"index.html":{}}}],["3.2rem",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["3/4",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["3rem",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":572,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["4.2.10",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["400",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400px",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["40rem",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["45",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["45/53",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":847,"title":{},"body":{"components/ToastComponent.html":{},"overview.html":{}}}],["5/5",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":906,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["5000",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["555",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["57",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["7.5.0",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["8",{"_index":1025,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["800px",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["84",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1055,"title":{},"body":{"license.html":{}}}],["93",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["__booleans",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["__length,&__ui",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["a:active",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["a:not(:last",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["ability",{"_index":1027,"title":{},"body":{"index.html":{}}}],["above",{"_index":1263,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1338,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1335,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["act",{"_index":1345,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1065,"title":{},"body":{"license.html":{}}}],["action",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["action(this",{"_index":774,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["actions",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["activate",{"_index":655,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["acts",{"_index":1315,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["add",{"_index":1250,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":1252,"title":{},"body":{"license.html":{}}}],["addicon",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["addicon(iconname",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["additional",{"_index":1253,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1134,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1333,"title":{},"body":{"license.html":{}}}],["affects",{"_index":666,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["afterviewinit",{"_index":504,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["against",{"_index":1201,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1348,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1287,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1268,"title":{},"body":{"license.html":{}}}],["align",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["alleging",{"_index":1206,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1197,"title":{},"body":{"license.html":{}}}],["along",{"_index":1241,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1251,"title":{},"body":{"license.html":{}}}],["amet",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["and/or",{"_index":1342,"title":{},"body":{"license.html":{}}}],["angular",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":612,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/material",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["angular/material/input",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["angular/router",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["animate.css",{"_index":636,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["animate.interface",{"_index":673,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["animate.interface.ts",{"_index":630,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"coverage.html":{}}}],["animation",{"_index":631,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["animationframe",{"_index":782,"title":{},"body":{"components/ToastComponent.html":{}}}],["animations",{"_index":634,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["annotations",{"_index":1122,"title":{},"body":{"license.html":{}}}],["answer",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apache",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"license.html":{},"properties.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1246,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1114,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1285,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1190,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1357,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":420,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1365,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1301,"title":{},"body":{"license.html":{}}}],["archives.copyright",{"_index":1373,"title":{},"body":{"license.html":{}}}],["args",{"_index":878,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args.length",{"_index":885,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["args[1",{"_index":890,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["argument.decorator.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arising",{"_index":1322,"title":{},"body":{"license.html":{}}}],["array",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["artemsky",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["asserted",{"_index":1354,"title":{},"body":{"license.html":{}}}],["assets/${svg}.svg",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["associated",{"_index":1306,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1304,"title":{},"body":{"license.html":{}}}],["async",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["async('this",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["attach",{"_index":1358,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1112,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1232,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1061,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1106,"title":{},"body":{"license.html":{}}}],["available",{"_index":1108,"title":{},"body":{"license.html":{}}}],["b",{"_index":1222,"title":{},"body":{"license.html":{}}}],["backdrop",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["bar",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["base",{"_index":798,"title":{},"body":{"components/ToastComponent.html":{}}}],["based",{"_index":1118,"title":{},"body":{"license.html":{}}}],["baseline",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["basis",{"_index":1289,"title":{},"body":{"license.html":{}}}],["before",{"_index":750,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["before_hide",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["before_show",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforedestroy",{"_index":812,"title":{},"body":{"components/ToastComponent.html":{}}}],["beforehide",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beforeshow",{"_index":986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["behalf",{"_index":1139,"title":{},"body":{"license.html":{}}}],["below",{"_index":1115,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1087,"title":{},"body":{"license.html":{}}}],["beta",{"_index":1389,"title":{},"body":{"properties.html":{}}}],["between",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["bind",{"_index":1131,"title":{},"body":{"license.html":{}}}],["black",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["blocksizea",{"_index":506,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["blocksizeb",{"_index":507,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["body",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["bodymaxlength",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":1359,"title":{},"body":{"license.html":{}}}],["bold",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["bottom",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["boydmaxlength",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["brackets",{"_index":1362,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1385,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{}}}],["button'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["button.text",{"_index":481,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["buttons.component.html",{"_index":468,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons__clear",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["buttons__html",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["buttonscomponent",{"_index":407,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonsconfig",{"_index":482,"title":{"interfaces/ButtonsConfig.html":{}},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["c",{"_index":1229,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":868,"title":{},"body":{"components/ToastComponent.html":{}}}],["callbacks",{"_index":1038,"title":{},"body":{"index.html":{}}}],["called",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["calls",{"_index":693,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["can't",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["cancel",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelanimationframe(this.animationframe",{"_index":874,"title":{},"body":{"components/ToastComponent.html":{}}}],["carry",{"_index":1224,"title":{},"body":{"license.html":{}}}],["case",{"_index":598,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["cause",{"_index":1074,"title":{},"body":{"license.html":{}}}],["ccpatrut",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["center_bottom",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_center",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center_top",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["centerbottom",{"_index":722,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centercenter",{"_index":723,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["centertop",{"_index":724,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["change",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{}}}],["changed",{"_index":1228,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":464,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy",{"_index":474,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":465,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{}}}],["changelog",{"_index":894,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":537,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["character",{"_index":1321,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1172,"title":{},"body":{"license.html":{}}}],["check",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["child",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":1336,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1203,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1192,"title":{},"body":{"license.html":{}}}],["class",{"_index":124,"title":{"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":710,"title":{},"body":{"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"overview.html":{}}}],["clear",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["click",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"miscellaneous/enumerations.html":{}}}],["close",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["closeonclick",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule",{"_index":601,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_declarations",{"_index":602,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["cluster_ngxsnotifiremodule_exports",{"_index":603,"title":{},"body":{"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["code",{"_index":1097,"title":{},"body":{"license.html":{}}}],["color",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["combination",{"_index":1198,"title":{},"body":{"license.html":{}}}],["come",{"_index":700,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["comes",{"_index":707,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["comment",{"_index":1366,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1330,"title":{},"body":{"license.html":{}}}],["common",{"_index":865,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["commonmodule",{"_index":611,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["communication",{"_index":1143,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1103,"title":{},"body":{"license.html":{}}}],["completely",{"_index":806,"title":{},"body":{"components/ToastComponent.html":{}}}],["compliance",{"_index":1376,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1257,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc/compodoc",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["component_template",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/buttons/buttons",{"_index":671,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["components/toast/notifire",{"_index":730,"title":{},"body":{"interfaces/SnotifireNotifications.html":{}}}],["computer",{"_index":1327,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1046,"title":{},"body":{"license.html":{}}}],["config",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["config.interface",{"_index":672,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{}}}],["config.interface.ts",{"_index":485,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"coverage.html":{}}}],["configuration",{"_index":678,"title":{},"body":{"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["consequential",{"_index":1320,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1344,"title":{},"body":{"license.html":{}}}],["console.log('clicked",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log('said",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["console.log(toast.value",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["conspicuously",{"_index":1156,"title":{},"body":{"license.html":{}}}],["const",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["constitutes",{"_index":1207,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["constructor(iconregistry",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(id",{"_index":740,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["constructor(private",{"_index":479,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(readonly",{"_index":560,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["constructor(service",{"_index":470,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(type",{"_index":713,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["construed",{"_index":1254,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1237,"title":{},"body":{"license.html":{}}}],["contains",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["content",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["contents",{"_index":1247,"title":{},"body":{"license.html":{}}}],["context",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1078,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1133,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1196,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1259,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1160,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1208,"title":{},"body":{"license.html":{}}}],["control",{"_index":1067,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1033,"title":{},"body":{"index.html":{},"license.html":{}}}],["conversions",{"_index":1105,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1215,"title":{},"body":{"license.html":{}}}],["copy",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["copyright",{"_index":1058,"title":{},"body":{"license.html":{}}}],["countdown",{"_index":660,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["counterclaim",{"_index":1204,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":901,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1028,"title":{},"body":{"index.html":{}}}],["created",{"_index":702,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["cross",{"_index":1202,"title":{},"body":{"license.html":{}}}],["current",{"_index":554,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["cursor",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":656,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"index.html":{}}}],["customary",{"_index":1279,"title":{},"body":{"license.html":{}}}],["d",{"_index":1235,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1317,"title":{},"body":{"license.html":{}}}],["dark",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["data",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["date",{"_index":1212,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["decoration",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["deep",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["default_limit",{"_index":880,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["default_trail",{"_index":882,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["defaults.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1350,"title":{},"body":{"license.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"license.html":{}}}],["defines",{"_index":1012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definition",{"_index":1069,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1049,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":1312,"title":{},"body":{"license.html":{}}}],["demo",{"_index":1021,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":422,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":670,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["derivative",{"_index":1116,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1119,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1280,"title":{},"body":{"license.html":{}}}],["description",{"_index":533,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["descriptor",{"_index":1010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["designated",{"_index":1158,"title":{},"body":{"license.html":{}}}],["destroyed",{"_index":751,"title":{},"body":{"classes/SnotifireToastModel.html":{},"miscellaneous/enumerations.html":{}}}],["detected",{"_index":687,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["determining",{"_index":1300,"title":{},"body":{"license.html":{}}}],["different",{"_index":531,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{},"license.html":{}}}],["direct",{"_index":1072,"title":{},"body":{"license.html":{}}}],["direction",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["directive",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["disable",{"_index":664,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disabled",{"_index":649,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["disappear",{"_index":699,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["disclaimer",{"_index":1283,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1153,"title":{},"body":{"license.html":{}}}],["display",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{},"license.html":{}}}],["dissapear",{"_index":651,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["distribute",{"_index":1181,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1240,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1048,"title":{},"body":{"license.html":{}}}],["div",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["divider",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["dock",{"_index":683,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["docksizea",{"_index":508,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["docksizeb",{"_index":509,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["document",{"_index":1056,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"license.html":{}}}],["dolor",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["don't",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["down",{"_index":709,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["duplicated",{"_index":685,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["duplicates",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["dynamic",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":773,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["e.g",{"_index":659,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["each",{"_index":698,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"license.html":{}}}],["easier",{"_index":1371,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":1120,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":1123,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1140,"title":{},"body":{"license.html":{}}}],["element",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["emits",{"_index":745,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["emitter",{"_index":510,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["enable/disable",{"_index":662,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["enabled",{"_index":684,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["encapsulation",{"_index":466,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["enclosed",{"_index":1361,"title":{},"body":{"license.html":{}}}],["end",{"_index":1356,"title":{},"body":{"license.html":{}}}],["enter",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["entities",{"_index":1066,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1060,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":971,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":739,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["equals(toast",{"_index":756,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["error",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["erroraction",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["even",{"_index":1332,"title":{},"body":{"license.html":{}}}],["event",{"_index":539,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"license.html":{}}}],["event.target.value",{"_index":625,"title":{},"body":{"components/PromptComponent.html":{}}}],["event.type",{"_index":762,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["event.type.ts",{"_index":974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":735,"title":{},"body":{"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["events",{"_index":761,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["eventsholder",{"_index":736,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["example",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["except",{"_index":1183,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1155,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1171,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1269,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1307,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1089,"title":{},"body":{"license.html":{}}}],["exit",{"_index":641,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1261,"title":{},"body":{"license.html":{}}}],["export",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["exports",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["express",{"_index":1292,"title":{},"body":{"license.html":{}}}],["extensions/rxjs/blob/master/doc/api/core/operators/create.md",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["extract",{"_index":497,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["f83f8b",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["fadein",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fadeout",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1328,"title":{},"body":{"license.html":{}}}],["false",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["features",{"_index":1024,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1337,"title":{},"body":{"license.html":{}}}],["field",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fields",{"_index":1360,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1082,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1213,"title":{},"body":{"license.html":{}}}],["files",{"_index":1098,"title":{},"body":{"license.html":{}}}],["filter",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{}}}],["filterduplicates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["filtered",{"_index":686,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["fire",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["first",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["fitness",{"_index":1296,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["focused",{"_index":624,"title":{},"body":{"components/PromptComponent.html":{}}}],["following",{"_index":1219,"title":{},"body":{"license.html":{}}}],["footer",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["format",{"_index":1368,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formcontrol",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["formgroup",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["forroot",{"_index":608,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["found",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["free",{"_index":1174,"title":{},"body":{"license.html":{}}}],["fs",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":657,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["fully",{"_index":1032,"title":{},"body":{"index.html":{}}}],["function",{"_index":486,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"classes/SnotifireToastModel.html":{},"coverage.html":{}}}],["functional",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["functionalconfig",{"_index":45,"title":{"interfaces/FunctionalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["functions",{"_index":995,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":1104,"title":{},"body":{"license.html":{}}}],["generates",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getconfig",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getfunctionalconfig",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["getnotificationarray",{"_index":514,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationarray(notifications",{"_index":520,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["getnotificationconfig",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["getpositionformcontrol",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["getsvg(svg",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["getthemecontrol",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["getting",{"_index":892,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettoastdata",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["getvalue",{"_index":617,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvalue($event",{"_index":619,"title":{},"body":{"components/PromptComponent.html":{}}}],["getvisualconfig",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["github",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["give",{"_index":1220,"title":{},"body":{"license.html":{}}}],["global",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["goodwill",{"_index":1325,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1383,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["grant",{"_index":1165,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1091,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1062,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1167,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":1313,"title":{},"body":{"license.html":{}}}],["h6",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["harmless",{"_index":1352,"title":{},"body":{"license.html":{}}}],["helper",{"_index":543,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["here",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1166,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1265,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hober",{"_index":661,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["hold",{"_index":1351,"title":{},"body":{"license.html":{}}}],["holds",{"_index":748,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["hover",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1378,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/terms",{"_index":1045,"title":{},"body":{"license.html":{}}}],["httpclientmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["https://ccpatrut.github.io/ngx",{"_index":1023,"title":{},"body":{"index.html":{}}}],["https://github.com/reactive",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icon",{"_index":644,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":645,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["iconregistry",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["icons",{"_index":1030,"title":{},"body":{"index.html":{}}}],["id",{"_index":737,"title":{},"body":{"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{}}}],["identification",{"_index":1372,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1364,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ii",{"_index":1080,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1086,"title":{},"body":{"license.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["implied",{"_index":1293,"title":{},"body":{"license.html":{}}}],["import",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["imports",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["improving",{"_index":1154,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1323,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1319,"title":{},"body":{"license.html":{}}}],["include",{"_index":635,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"license.html":{}}}],["included",{"_index":1111,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1036,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1034,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusion",{"_index":1137,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1163,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1353,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1349,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1340,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1109,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1073,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1088,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["informational",{"_index":1248,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1195,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1209,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":797,"title":{},"body":{"components/ToastComponent.html":{}}}],["inittoast",{"_index":784,"title":{},"body":{"components/ToastComponent.html":{}}}],["injectable",{"_index":933,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["inline",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["inputs",{"_index":469,"title":{},"body":{"components/ButtonsComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["inputtype",{"_index":615,"title":{},"body":{"components/PromptComponent.html":{}}}],["instalation",{"_index":1039,"title":{},"body":{"index.html":{}}}],["install",{"_index":1040,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1199,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":1135,"title":{},"body":{"license.html":{}}}],["interface",{"_index":295,"title":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":483,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"overview.html":{}}}],["ipsum",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["irrevocable",{"_index":1175,"title":{},"body":{"license.html":{}}}],["iscloseonclick",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isdestroying",{"_index":821,"title":{},"body":{"components/ToastComponent.html":{}}}],["isfilterduplicates",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isnewitemsontop",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["isobject",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobject(item",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispauseonhover",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ispromptfocused",{"_index":616,"title":{},"body":{"components/PromptComponent.html":{}}}],["isshowprogressbar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["issue",{"_index":1149,"title":{},"body":{"license.html":{}}}],["it's",{"_index":668,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["item",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["january",{"_index":1043,"title":{},"body":{"license.html":{}}}],["justify",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":681,"title":{},"body":{"interfaces/SnotifireDefaults.html":{}}}],["keyindex",{"_index":589,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keyof",{"_index":585,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["keys",{"_index":492,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":489,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":1291,"title":{},"body":{"license.html":{}}}],["language",{"_index":1382,"title":{},"body":{"license.html":{}}}],["later",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["law",{"_index":1286,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1205,"title":{},"body":{"license.html":{}}}],["left",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["left_bottom",{"_index":978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_center",{"_index":977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_top",{"_index":976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["leftbottom",{"_index":725,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["leftcenter",{"_index":726,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["lefttop",{"_index":727,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["legal",{"_index":1063,"title":{},"body":{"license.html":{}}}],["legend",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["length",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["liability",{"_index":1308,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1316,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1193,"title":{},"body":{"license.html":{}}}],["license",{"_index":1041,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1375,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1210,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1057,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":804,"title":{},"body":{"components/ToastComponent.html":{}}}],["limit",{"_index":884,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limitation",{"_index":1294,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1384,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1095,"title":{},"body":{"license.html":{}}}],["link",{"_index":1130,"title":{},"body":{"license.html":{}}}],["lists",{"_index":1147,"title":{},"body":{"license.html":{}}}],["literal",{"_index":680,"title":{},"body":{"interfaces/SnotifireDefaults.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":1200,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loading",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["location",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["log",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["lorem",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["loss",{"_index":1324,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1331,"title":{},"body":{"license.html":{}}}],["made",{"_index":1107,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1146,"title":{},"body":{"license.html":{}}}],["main",{"_index":733,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["make",{"_index":1186,"title":{},"body":{"license.html":{}}}],["making",{"_index":1093,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1329,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1151,"title":{},"body":{"license.html":{}}}],["management",{"_index":1075,"title":{},"body":{"license.html":{}}}],["many",{"_index":553,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"index.html":{}}}],["margin",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["marked",{"_index":1157,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1275,"title":{},"body":{"license.html":{}}}],["mat",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matformfieldmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["math.min",{"_index":873,"title":{},"body":{"components/ToastComponent.html":{}}}],["maticonmodule",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonregistry",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["matinputmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["maxatposition",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":650,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["maxonscreen",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":1051,"title":{},"body":{"license.html":{}}}],["means",{"_index":1070,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1100,"title":{},"body":{"license.html":{}}}],["media",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["medium",{"_index":1216,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1218,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1295,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1129,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mergedeep",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mergedeep(...sources",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["message",{"_index":716,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":1014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["migrating",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["milliseconds",{"_index":663,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["miscellaneous",{"_index":970,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":734,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["models",{"_index":557,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["models/snotifire",{"_index":558,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireToastModel.html":{}}}],["models/snotifire.type",{"_index":763,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["modifications",{"_index":1094,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1223,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1249,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1255,"title":{},"body":{"license.html":{}}}],["module",{"_index":419,"title":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["modules",{"_index":421,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":610,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["more",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"license.html":{}}}],["mounted",{"_index":599,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mouse_enter",{"_index":987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouse_leave",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseenter",{"_index":988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mouseleave",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ms",{"_index":643,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["much",{"_index":1031,"title":{},"body":{"index.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":1274,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":1194,"title":{},"body":{"license.html":{}}}],["need",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["negligence",{"_index":1311,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1314,"title":{},"body":{"license.html":{}}}],["new",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["newontop",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngaftercontentinit",{"_index":785,"title":{},"body":{"components/ToastComponent.html":{}}}],["ngafterviewinit",{"_index":515,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["ngmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{}}}],["ngondestroy",{"_index":516,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ngx",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["ngxsnotifire",{"_index":1020,"title":{},"body":{"index.html":{}}}],["ngxsnotifirecomponent",{"_index":410,"title":{"components/NgxSnotifireComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxsnotifiremodule",{"_index":432,"title":{"modules/NgxSnotifireModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"modules.html":{},"overview.html":{}}}],["nice",{"_index":706,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["non",{"_index":1170,"title":{},"body":{"license.html":{}}}],["none",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["normally",{"_index":1245,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1264,"title":{},"body":{"license.html":{}}}],["noti",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["notice",{"_index":1110,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1226,"title":{},"body":{"license.html":{}}}],["notification",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconf",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["notificationconfig",{"_index":48,"title":{"interfaces/NotificationConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notificationeventtype",{"_index":540,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{}}}],["notificationformvalue",{"_index":296,"title":{"interfaces/NotificationFormValue.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["notifications",{"_index":511,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["notifications.interface",{"_index":559,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notifications.interface.ts",{"_index":721,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["notifications[position",{"_index":594,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["notificationtype",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notifire",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["notifire/ngx",{"_index":501,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["notifireeventtype",{"_index":746,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["notwithstanding",{"_index":1262,"title":{},"body":{"license.html":{}}}],["npm",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["null",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":498,"title":{},"body":{"pipes/KeysPipe.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireModel.html":{},"components/ToastComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(snotificationpositiontype",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["object.keys(snotificationpositiontype).indexof",{"_index":590,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["object.keys(value",{"_index":499,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["object.values(snotificationpositiontype",{"_index":592,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["objects",{"_index":532,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"miscellaneous/functions.html":{}}}],["obligations",{"_index":1341,"title":{},"body":{"license.html":{}}}],["observable",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observable((observer",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observables",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.complete",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.error",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["observer.next",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["obtain",{"_index":1377,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1187,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["on(event",{"_index":759,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["on(snotifireeventtype.input",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onasyncloading",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclear",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onclick",{"_index":786,"title":{},"body":{"components/ToastComponent.html":{}}}],["onconfirmation",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["ondestroy",{"_index":503,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["one",{"_index":1238,"title":{},"body":{"license.html":{}}}],["onerror",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onexittransitionend",{"_index":787,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverenter",{"_index":808,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhoverleave",{"_index":810,"title":{},"body":{"components/ToastComponent.html":{}}}],["onhtml",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninfo",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onmouseenter",{"_index":788,"title":{},"body":{"components/ToastComponent.html":{}}}],["onmouseleave",{"_index":789,"title":{},"body":{"components/ToastComponent.html":{}}}],["onprompt",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onremove",{"_index":790,"title":{},"body":{"components/ToastComponent.html":{}}}],["onsuccess",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["onwarning",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["opacity",{"_index":538,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["option",{"_index":696,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1029,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1281,"title":{},"body":{"license.html":{}}}],["original",{"_index":1126,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1079,"title":{},"body":{"license.html":{}}}],["out",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireGlobalConfig.html":{},"components/ToastComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":825,"title":{},"body":{"components/ToastComponent.html":{}}}],["outputs",{"_index":792,"title":{},"body":{"components/ToastComponent.html":{}}}],["outstanding",{"_index":1084,"title":{},"body":{"license.html":{}}}],["overrides",{"_index":654,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["overview",{"_index":1386,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1059,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1081,"title":{},"body":{"license.html":{}}}],["package",{"_index":952,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["param",{"_index":487,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":632,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["parseint(args[0",{"_index":886,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["part",{"_index":1234,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1297,"title":{},"body":{"license.html":{}}}],["party",{"_index":1244,"title":{},"body":{"license.html":{}}}],["pass",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["patent",{"_index":1182,"title":{},"body":{"license.html":{}}}],["pause",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{}}}],["paused",{"_index":820,"title":{},"body":{"components/ToastComponent.html":{}}}],["pauseonhover",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["percent",{"_index":1083,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1179,"title":{},"body":{"license.html":{}}}],["performance.now",{"_index":867,"title":{},"body":{"components/ToastComponent.html":{}}}],["permission",{"_index":1272,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1090,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1168,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1233,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":488,"title":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.unsubscribe",{"_index":562,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["pipes",{"_index":490,"title":{},"body":{"pipes/KeysPipe.html":{},"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":495,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":1239,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["position.type",{"_index":674,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["position.type.ts",{"_index":973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["positionformcontrol",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["positions",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["possibility",{"_index":1334,"title":{},"body":{"license.html":{}}}],["power",{"_index":1071,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1092,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1177,"title":{},"body":{"license.html":{}}}],["printed",{"_index":1370,"title":{},"body":{"license.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["product",{"_index":1276,"title":{},"body":{"license.html":{}}}],["production",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"components/ToastComponent.html":{}}}],["project",{"_index":1022,"title":{},"body":{"index.html":{}}}],["projects/.../set",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../snotifire",{"_index":972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../snotifire.type.ts",{"_index":975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.ts",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../toast",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../transform",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../utils.ts",{"_index":996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":462,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1225,"title":{},"body":{"license.html":{}}}],["promise",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["promise((resolve",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireToastModel.html":{},"miscellaneous/enumerations.html":{}}}],["prompt'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["prompt(this.toastdata.body",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["prompt.component.html",{"_index":614,"title":{},"body":{"components/PromptComponent.html":{}}}],["promptcomponent",{"_index":412,"title":{"components/PromptComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prompttype",{"_index":822,"title":{},"body":{"components/ToastComponent.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"properties.html":{}}}],["property",{"_index":583,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["propertydescriptor",{"_index":1011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["protected",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["provide",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SnotifireConfig.html":{},"license.html":{}}}],["provided",{"_index":1113,"title":{},"body":{"license.html":{}}}],["providers",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["provides",{"_index":1288,"title":{},"body":{"license.html":{}}}],["public",{"_index":712,"title":{},"body":{"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{}}}],["publicly",{"_index":1178,"title":{},"body":{"license.html":{}}}],["pulls",{"_index":708,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["pure",{"_index":496,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["purpose",{"_index":1152,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":691,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"license.html":{}}}],["push",{"_index":848,"title":{},"body":{"components/ToastComponent.html":{}}}],["queue",{"_index":555,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["random",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range",{"_index":646,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["reactiveformsmodule",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["readable",{"_index":1236,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["reason",{"_index":1355,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1278,"title":{},"body":{"license.html":{}}}],["received",{"_index":1161,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1221,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1369,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":669,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["redistributing",{"_index":1303,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1214,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":1270,"title":{},"body":{"license.html":{}}}],["reject",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["relative",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":1127,"title":{},"body":{"license.html":{}}}],["remove",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["removes",{"_index":813,"title":{},"body":{"components/ToastComponent.html":{}}}],["replaced",{"_index":1363,"title":{},"body":{"license.html":{}}}],["repository",{"_index":1035,"title":{},"body":{"index.html":{}}}],["represent",{"_index":1124,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1145,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1176,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1282,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1047,"title":{},"body":{"license.html":{}}}],["requestanimationframe",{"_index":819,"title":{},"body":{"components/ToastComponent.html":{}}}],["requestanimationframe((timestamp",{"_index":870,"title":{},"body":{"components/ToastComponent.html":{}}}],["require",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1277,"title":{},"body":{"license.html":{}}}],["reset",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}],["resolve",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["responsibility",{"_index":1347,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1299,"title":{},"body":{"license.html":{}}}],["result",{"_index":582,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"license.html":{}}}],["result[searchedstring]?.push(toast",{"_index":593,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["resulting",{"_index":1099,"title":{},"body":{"license.html":{}}}],["results",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1230,"title":{},"body":{"license.html":{}}}],["return",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{}}}],["returns",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/NgxSnotifireComponent.html":{}}}],["revisions",{"_index":1121,"title":{},"body":{"license.html":{}}}],["right",{"_index":704,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["right_bottom",{"_index":981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_center",{"_index":980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["right_top",{"_index":979,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rightbottom",{"_index":689,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rightcenter",{"_index":728,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":1343,"title":{},"body":{"license.html":{}}}],["righttop",{"_index":729,"title":{},"body":{"interfaces/SnotifireNotifications.html":{},"miscellaneous/enumerations.html":{}}}],["risks",{"_index":1305,"title":{},"body":{"license.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["root'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["royalty",{"_index":1173,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":871,"title":{},"body":{"components/ToastComponent.html":{}}}],["rxjs",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"dependencies.html":{}}}],["safehtml",{"_index":652,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["same",{"_index":688,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"index.html":{},"license.html":{}}}],["sanitizer",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["screen",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["searchedstring",{"_index":591,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["second",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["section",{"_index":1185,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1053,"title":{},"body":{"license.html":{}}}],["see",{"_index":1380,"title":{},"body":{"license.html":{}}}],["select",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["sell",{"_index":1188,"title":{},"body":{"license.html":{}}}],["sent",{"_index":1144,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1128,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1267,"title":{},"body":{"license.html":{}}}],["service",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["services",{"_index":478,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/ToastComponent.html":{}}}],["settimeout",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["settoasttype",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["settoasttype(target",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shall",{"_index":1050,"title":{},"body":{"license.html":{}}}],["share",{"_index":640,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["shares",{"_index":1085,"title":{},"body":{"license.html":{}}}],["show",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["shown",{"_index":697,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"miscellaneous/enumerations.html":{}}}],["showprogressbar",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":701,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["simple",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["sit",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["slice",{"_index":544,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["slide",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["snotificationpositiontype",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snotificationpositiontype.hasownproperty(property",{"_index":584,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{}}}],["snotifire'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["snotifire.component.html",{"_index":505,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts",{"_index":502,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire.component.ts:110",{"_index":528,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:137",{"_index":522,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:148",{"_index":536,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:178",{"_index":525,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:20",{"_index":552,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:24",{"_index":550,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:28",{"_index":549,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:32",{"_index":546,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:36",{"_index":547,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:40",{"_index":542,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:44",{"_index":545,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:48",{"_index":541,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:52",{"_index":519,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:55",{"_index":524,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.component.ts:57",{"_index":526,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifire.module.ts",{"_index":606,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.module.ts:25",{"_index":609,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire.type",{"_index":675,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/components/buttons/buttons",{"_index":484,"title":{},"body":{"interfaces/ButtonsConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts",{"_index":463,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:24",{"_index":471,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/buttons/buttons.component.ts:31",{"_index":473,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["snotifire/src/lib/components/ngx",{"_index":500,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts",{"_index":613,"title":{},"body":{"components/PromptComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:18",{"_index":622,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:22",{"_index":618,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:26",{"_index":623,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/prompt/prompt.component.ts:28",{"_index":620,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifire/src/lib/components/toast/notifire",{"_index":731,"title":{},"body":{"classes/SnotifireToastModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts",{"_index":780,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:114",{"_index":802,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:123",{"_index":807,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:133",{"_index":809,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:148",{"_index":805,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:164",{"_index":796,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:177",{"_index":815,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:209",{"_index":800,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:21",{"_index":824,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:26",{"_index":794,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:27",{"_index":795,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:32",{"_index":818,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:37",{"_index":823,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:43",{"_index":793,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:47",{"_index":801,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:70",{"_index":799,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/components/toast/toast.component.ts:90",{"_index":811,"title":{},"body":{"components/ToastComponent.html":{}}}],["snotifire/src/lib/decorators/set",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/decorators/transform",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifire/src/lib/defaults/defaults.interface.ts",{"_index":677,"title":{},"body":{"interfaces/SnotifireDefaults.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/global",{"_index":682,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"coverage.html":{}}}],["snotifire/src/lib/defaults/toast",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/models/snotifire",{"_index":629,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts",{"_index":711,"title":{},"body":{"classes/SnotifireModel.html":{},"coverage.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:11",{"_index":719,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:15",{"_index":715,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:19",{"_index":717,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:23",{"_index":718,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:5",{"_index":714,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.model.ts:7",{"_index":720,"title":{},"body":{"classes/SnotifireModel.html":{}}}],["snotifire/src/lib/models/snotifire.type.ts",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snotifire/src/lib/ngx",{"_index":605,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts",{"_index":491,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/keys.pipe.ts:11",{"_index":494,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts",{"_index":877,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:11",{"_index":881,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:12",{"_index":883,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/pipes/truncate.pipe.ts:13",{"_index":879,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["snotifire/src/lib/services/notification.service.ts",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["snotifire/src/lib/test.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifire/src/lib/utils.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["snotifireanimate",{"_index":628,"title":{"interfaces/SnotifireAnimate.html":{}},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"coverage.html":{}}}],["snotifireconfig",{"_index":73,"title":{"interfaces/SnotifireConfig.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snotifiredefaults",{"_index":676,"title":{"interfaces/SnotifireDefaults.html":{}},"body":{"interfaces/SnotifireDefaults.html":{},"coverage.html":{}}}],["snotifireeventtype",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["snotifireeventtype.input",{"_index":621,"title":{},"body":{"components/PromptComponent.html":{}}}],["snotifireform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifireglobalconfig",{"_index":679,"title":{"interfaces/SnotifireGlobalConfig.html":{}},"body":{"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"coverage.html":{}}}],["snotifiremodel",{"_index":117,"title":{"classes/SnotifireModel.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["snotifirenotifications",{"_index":521,"title":{"interfaces/SnotifireNotifications.html":{}},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireNotifications.html":{},"coverage.html":{}}}],["snotifireservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"overview.html":{}}}],["snotifiretoastmodel",{"_index":472,"title":{"classes/SnotifireToastModel.html":{}},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["snotifiretype",{"_index":665,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snotifiretype.async",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.confirm",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.error",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.info",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.prompt",{"_index":766,"title":{},"body":{"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["snotifiretype.success",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotifiretype.warning",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snotify",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["snotifybutton",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["snotifynotifications",{"_index":534,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["snotifytypetype",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":1096,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1346,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1298,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["sources",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["space",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1318,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1381,"title":{},"body":{"license.html":{}}}],["split",{"_index":529,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts",{"_index":517,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["splittoasts(toasts",{"_index":527,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:108",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:115",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:122",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:130",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:136",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:140",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:205",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:238",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:268",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:272",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:275",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:279",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:283",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":816,"title":{},"body":{"components/ToastComponent.html":{}}}],["started",{"_index":893,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":817,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout",{"_index":791,"title":{},"body":{"components/ToastComponent.html":{}}}],["starttimeout(starttime",{"_index":814,"title":{},"body":{"components/ToastComponent.html":{}}}],["state",{"_index":783,"title":{},"body":{"components/ToastComponent.html":{},"license.html":{}}}],["statechanged",{"_index":518,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["statechanged(event",{"_index":535,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["stated",{"_index":1184,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1256,"title":{},"body":{"license.html":{}}}],["statements",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":607,"title":{},"body":{"modules/NgxSnotifireModule.html":{}}}],["stating",{"_index":1227,"title":{},"body":{"license.html":{}}}],["still",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["stoppage",{"_index":1326,"title":{},"body":{"license.html":{}}}],["string",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":667,"title":{},"body":{"interfaces/SnotifireConfig.html":{},"miscellaneous/functions.html":{}}}],["style.opacity]=\"backdrop",{"_index":600,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireAnimate.html":{},"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["styling",{"_index":703,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{},"index.html":{}}}],["subject",{"_index":551,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1180,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1258,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1138,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1136,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["subscribe((id",{"_index":832,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toast",{"_index":827,"title":{},"body":{"components/ToastComponent.html":{}}}],["subscribe((toasts",{"_index":563,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["subscribers",{"_index":749,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["subscription",{"_index":548,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{}}}],["subscription.unsubscribe",{"_index":770,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["subsequently",{"_index":1162,"title":{},"body":{"license.html":{}}}],["success",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/enumerations.html":{}}}],["successaction",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["such",{"_index":1076,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1266,"title":{},"body":{"license.html":{}}}],["support",{"_index":1339,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["switch",{"_index":597,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["syntax",{"_index":1367,"title":{},"body":{"license.html":{}}}],["system",{"_index":692,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["systems",{"_index":1148,"title":{},"body":{"license.html":{}}}],["table",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":658,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["takeuntil",{"_index":556,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"components/ToastComponent.html":{}}}],["target",{"_index":1015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["terminate",{"_index":1211,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1052,"title":{},"body":{"license.html":{}}}],["tests",{"_index":758,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["text",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["themecontrol",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["themes",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["theory",{"_index":1309,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1132,"title":{},"body":{"license.html":{}}}],["third",{"_index":1243,"title":{},"body":{"license.html":{}}}],["this.addicon('icon",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.animationframe",{"_index":869,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.backdrop",{"_index":596,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizea",{"_index":570,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.blocksizeb",{"_index":573,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.body",{"_index":775,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.config",{"_index":764,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.config.type",{"_index":765,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.default_limit",{"_index":887,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.default_trail",{"_index":891,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["this.docksizea",{"_index":567,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.docksizeb",{"_index":569,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.eventemitter.subscribe((e",{"_index":772,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.eventsholder.foreach((subscription",{"_index":769,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.eventsholder.push",{"_index":771,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.fb.group",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.backdrop",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.boydmaxlength",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.timeout",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.functionalconfig.titlemaxlengt",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.getconfig",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.iconregistry.addsvgicon",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.inittoast",{"_index":830,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.notificationconfig.maxatposition",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notificationconfig.maxonscreen",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.notifications",{"_index":578,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.on(snotifireeventtype.hidden",{"_index":768,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.onremove",{"_index":833,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.positions",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.positions[3",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(this.getsvg(location",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.service.defaultconfig",{"_index":564,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global",{"_index":565,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxatposition",{"_index":571,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.maxonscreen",{"_index":568,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.global.newontop",{"_index":566,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig",{"_index":840,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation",{"_index":841,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.defaultconfig.snotifireconfig.animation.time",{"_index":846,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.emitter",{"_index":561,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.service.remove(this.toast.id",{"_index":480,"title":{},"body":{"components/ButtonsComponent.html":{},"components/ToastComponent.html":{}}}],["this.service.toastchanged",{"_index":826,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.service.toastdeleted",{"_index":831,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.snotifireform",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('position",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.get('toaststyle",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().notificationconf",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().position",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastdata",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastfunctionalconfig",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireform.getrawvalue().toastvisualconfig",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.clear",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.confirm(this.toastdata.body",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.error",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.html(html",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.info",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.remove(toast.id",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.setdefaults",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.success(this.toastdata.body",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.snotifireservice.warning",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.splittoasts",{"_index":579,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.starttimeout(0",{"_index":866,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.starttimeout(this.toast.config.timeout",{"_index":861,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.animation",{"_index":839,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.isdestroying",{"_index":849,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.paused",{"_index":860,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.state.progress",{"_index":862,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged(snotifireeventtype.mounted",{"_index":581,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_hide",{"_index":851,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.before_show",{"_index":842,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.statechanged.emit(snotifireeventtype.hidden",{"_index":853,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.themes[0",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.title",{"_index":777,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.toast",{"_index":834,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config",{"_index":835,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation",{"_index":844,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.enter",{"_index":845,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.exit",{"_index":852,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.animation.time",{"_index":855,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.closeonclick",{"_index":857,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.pauseonhover",{"_index":859,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.showprogressbar",{"_index":837,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.config.timeout",{"_index":836,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_hide",{"_index":850,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.before_show",{"_index":843,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.click",{"_index":856,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.hidden",{"_index":854,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mounted",{"_index":838,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_enter",{"_index":858,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.mouse_leave",{"_index":863,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.eventemitter.next(snotifireeventtype.shown",{"_index":864,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.id",{"_index":828,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastdata.body",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.toastdata.title",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.value",{"_index":767,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["this.visualconfig.iscloseonclick",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isfilterduplicates",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isnewitemsontop",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.ispauseonhover",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.visualconfig.isshowprogressbar",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["this.withbackdrop",{"_index":574,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["this.withbackdrop.length",{"_index":595,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["those",{"_index":1191,"title":{},"body":{"license.html":{}}}],["through",{"_index":1054,"title":{},"body":{"license.html":{}}}],["time",{"_index":642,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireGlobalConfig.html":{},"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["times",{"_index":695,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["timestamp",{"_index":872,"title":{},"body":{"components/ToastComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"classes/SnotifireToastModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["titlemaxlengt",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["titlemaxlength",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["toast.body",{"_index":776,"title":{},"body":{"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":781,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config",{"_index":576,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{}}}],["toast.config.backdrop",{"_index":577,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.bodymaxlength",{"_index":876,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.placeholder",{"_index":626,"title":{},"body":{"components/PromptComponent.html":{}}}],["toast.config.position",{"_index":588,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toast.config.titlemaxlength",{"_index":875,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.config.type",{"_index":779,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.id",{"_index":829,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.model",{"_index":477,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireNotifications.html":{},"components/ToastComponent.html":{}}}],["toast.model.ts",{"_index":732,"title":{},"body":{"classes/SnotifireToastModel.html":{},"coverage.html":{}}}],["toast.model.ts:13",{"_index":744,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:18",{"_index":747,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:23",{"_index":755,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:28",{"_index":741,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:31",{"_index":752,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:32",{"_index":753,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:33",{"_index":742,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:34",{"_index":743,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:51",{"_index":760,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.model.ts:67",{"_index":757,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["toast.title",{"_index":778,"title":{},"body":{"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["toast.value",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toast/notifire",{"_index":476,"title":{},"body":{"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{}}}],["toastcomponent",{"_index":414,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"modules/NgxSnotifireModule.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastdata",{"_index":47,"title":{"interfaces/ToastData.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["toastdefaults",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastdefaults.snotifireconfig",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastfunctionalconfig",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastrs",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["toasts",{"_index":530,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireGlobalConfig.html":{},"index.html":{}}}],["toasts.filter",{"_index":575,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.foreach((toast",{"_index":587,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toasts.slice(this.docksizea",{"_index":580,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["toaststyle",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toastvisualconfig",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["toggle",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["togle",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["top:0",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["top:2rem",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["top:4.5rem",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":1310,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":1150,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1273,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1231,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1271,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1189,"title":{},"body":{"license.html":{}}}],["transform",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/functions.html":{}}}],["transform(value",{"_index":493,"title":{},"body":{"pipes/KeysPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformargument",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformargument(target",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformation",{"_index":1101,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1102,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["trigger",{"_index":803,"title":{},"body":{"components/ToastComponent.html":{}}}],["true",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":627,"title":{},"body":{"components/PromptComponent.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":604,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/NgxSnotifireModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["ts",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["tslib",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"components/PromptComponent.html":{},"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireConfig.html":{},"interfaces/SnotifireDefaults.html":{},"interfaces/SnotifireGlobalConfig.html":{},"classes/SnotifireModel.html":{},"interfaces/SnotifireNotifications.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"pipes/TruncatePipe.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.decorator.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":586,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["types",{"_index":1026,"title":{},"body":{"index.html":{},"license.html":{}}}],["undefined",{"_index":523,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1068,"title":{},"body":{"license.html":{}}}],["union",{"_index":1064,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1260,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":512,"title":{},"body":{"components/NgxSnotifireComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{}}}],["uppercase",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["use",{"_index":1037,"title":{},"body":{"index.html":{},"license.html":{}}}],["user",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["usevalue",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1302,"title":{},"body":{"license.html":{}}}],["uuid",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["v1.0.0",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["v14",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":738,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["validate",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validator",{"_index":754,"title":{},"body":{"classes/SnotifireToastModel.html":{}}}],["validators",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["validators.required",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["value",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":888,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substring(0",{"_index":889,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1390,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1141,"title":{},"body":{"license.html":{}}}],["version",{"_index":1042,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vertical",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["very",{"_index":705,"title":{},"body":{"interfaces/SnotifireGlobalConfig.html":{}}}],["viewencapsulation",{"_index":475,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["viewencapsulation.none",{"_index":467,"title":{},"body":{"components/ButtonsComponent.html":{},"components/NgxSnotifireComponent.html":{},"components/PromptComponent.html":{},"components/ToastComponent.html":{}}}],["visualconfig",{"_index":46,"title":{"interfaces/VisualConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"coverage.html":{}}}],["void",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"interfaces/ButtonsConfig.html":{},"interfaces/FunctionalConfig.html":{},"components/NgxSnotifireComponent.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireToastModel.html":{},"components/ToastComponent.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["want",{"_index":633,"title":{},"body":{"interfaces/SnotifireAnimate.html":{},"interfaces/SnotifireGlobalConfig.html":{}}}],["warning",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":1290,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1284,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":1242,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1077,"title":{},"body":{"license.html":{}}}],["white",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["whole",{"_index":1125,"title":{},"body":{"license.html":{}}}],["width",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["width:70rem",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["witch",{"_index":653,"title":{},"body":{"interfaces/SnotifireConfig.html":{}}}],["withbackdrop",{"_index":513,"title":{},"body":{"components/NgxSnotifireComponent.html":{}}}],["within",{"_index":1164,"title":{},"body":{"license.html":{}}}],["without",{"_index":1217,"title":{},"body":{"license.html":{}}}],["work",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{},"license.html":{}}}],["works",{"_index":1117,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1169,"title":{},"body":{"license.html":{}}}],["write",{"_index":637,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["writing",{"_index":1159,"title":{},"body":{"license.html":{}}}],["written",{"_index":1142,"title":{},"body":{"license.html":{}}}],["yes",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FunctionalConfig.html":{},"interfaces/NotificationConfig.html":{},"interfaces/NotificationFormValue.html":{},"classes/SnotifireModel.html":{},"interfaces/ToastData.html":{},"interfaces/VisualConfig.html":{}}}],["you'll",{"_index":639,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yourself",{"_index":638,"title":{},"body":{"interfaces/SnotifireAnimate.html":{}}}],["yyyy",{"_index":1374,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxSnotifireModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positions\n                            \n                            \n                                snotifireForm\n                            \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addIcon\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Private\n                                getSvg\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAsyncLoading\n                            \n                            \n                                onClear\n                            \n                            \n                                onConfirmation\n                            \n                            \n                                onError\n                            \n                            \n                                onHtml\n                            \n                            \n                                onInfo\n                            \n                            \n                                onPrompt\n                            \n                            \n                                onSuccess\n                            \n                            \n                                onWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    positionFormControl\n                                \n                                \n                                    themeControl\n                                \n                                \n                                    functionalConfig\n                                \n                                \n                                    visualConfig\n                                \n                                \n                                    toastData\n                                \n                                \n                                    notificationConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, snotifireService: SnotifireService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snotifireService\n                                                  \n                                                        \n                                                                        SnotifireService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    addIcon(iconName: string, location: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                iconName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                location\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SnotifireConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSvg\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSvg(svg: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:283\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                svg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAsyncLoading\n                        \n                    \n                \n            \n            \n                \nonAsyncLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClear\n                        \n                    \n                \n            \n            \n                \nonClear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmation\n                        \n                    \n                \n            \n            \n                \nonConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:205\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHtml\n                        \n                    \n                \n            \n            \n                \nonHtml()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInfo\n                        \n                    \n                \n            \n            \n                \nonInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrompt\n                        \n                    \n                \n            \n            \n                \nonPrompt()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:238\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSuccess\n                        \n                    \n                \n            \n            \n                \nonSuccess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWarning\n                        \n                    \n                \n            \n            \n                \nonWarning()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        positions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snotifireForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['material', 'dark', 'simple']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        positionFormControl\n                    \n                \n\n                \n                    \n                        getpositionFormControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        themeControl\n                    \n                \n\n                \n                    \n                        getthemeControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functionalConfig\n                    \n                \n\n                \n                    \n                        getfunctionalConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:268\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visualConfig\n                    \n                \n\n                \n                    \n                        getvisualConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:272\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toastData\n                    \n                \n\n                \n                    \n                        gettoastData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:275\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        notificationConfig\n                    \n                \n\n                \n                    \n                        getnotificationConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:279\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n    \n        \n    \n        \n            \n            Config Noti\n            \n            Toast\n            \n        \n\n        \n            \n                \n                    \n                        Name\n                        \n                    \n                    \n                        Body\n                        \n                    \n                \n                \n                \n                    \n                        \n                            Title Max Length\n                            \n                        \n                        \n                            Body Max Length\n                            \n                        \n                    \n                    \n                        \n                            Timeout\n                            \n                        \n                        \n                            Backdrop\n                            \n                        \n                    \n                \n                \n                \n                    \n                        Select Notification Position\n                        \n                            \n                                {{position}}\n                            \n                        \n                    \n                \n                \n                    Show Progress Bar\n                    Close on click\n                    Pause on hover\n                    New items on top\n                    Filter duplicates\n\n                \n\n                \n                \n                    \n                        Max number of Toastrs on Screen\n                        \n                    \n                    \n                        Max number of Toastrs per Position\n                        \n                    \n\n                \n\n                \n                    Select theme\n                    \n                        \n                            {{theme}}\n                        \n                    \n                \n            \n\n        \n    \n    \n        \n            \n                Success\n            \n            \n                Info\n            \n            \n                Error\n            \n            \n                Warning\n            \n        \n        \n\n            \n                Async\n            \n            \n                Confirm\n            \n            \n                Prompt\n            \n        \n        \n            \n                HTML\n            \n        \n        \n            \n                Clear all\n            \n        \n    \n\n\n\n\n    \n        Documentation\n    \n\n    \n        Compodoc\n    \n\n    \n        GitHub\n    \n\n    \n        NPM\n    \n    \n        Apache 2.0 &copy;\n        ccpatrut\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.page{\n  padding-top: 2rem;\n  padding-bottom: 1rem;\n  justify-content: center;\n  align-content: center;\n  display: flex;\n  .config{\n    max-width: 40rem;\n    padding: 0rem 3rem;\n    .title{\n      text-align: center;\n    }\n    .functional-config{\n        &__length,&__ui{\n        display: flex;\n        align-items: baseline;\n        justify-content: space-between;\n\n        mat-form-field{\n          width: 45%;\n        }\n      }\n    }\n    &__booleans{\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 3.2rem;\n      max-width: 100%;\n      mat-slide-togle{\n        width: 40%;\n        display: inline-block;\n      }\n    }\n  }\n  .buttons{\n\n    max-width:70rem;\n    display: flex;\n    flex-direction: column;\n    margin-top:4.5rem;\n    margin-left: 10rem;\n    div{\n      display: flex;\n      justify-content: space-between;\n      margin-top: 1rem;\n      width: 100%;\n\n    }\n    button{\n      margin-left: 1rem;\n    }\n    .buttons__html, .buttons__clear-all{\n      display: block;\n      text-align: center;\n    }\n  }\n}\nmat-form-field{\n  width:100%;\n}\nmat-divider{\n  padding-top:0;\n  margin-bottom: 2rem;\n}\n\n\nfooter{\n\n\n display: flex;\n justify-content: center;\n align-items: center;\n position: fixed;\n bottom: 1rem;\n width:100%;\n a:not(:last-child), h6{\n  text-align: center;\n  margin-left: 1rem;\n }\n\n a {\n  background-color: #f83f8b;\n  color: white;\n  padding: 1em 1.5em;\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: baseline;\n\n}\n\na:hover {\n  background-color: #555;\n  cursor: pointer;\n}\n\na:active {\n  background-color: black;\n}\n\n\n}\n@media  (max-width: 800px) {\n  .page{\n    flex-direction: column-reverse;\n    justify-content: center;\n    align-items: center;\n    .config{\n      max-width:100%;\n      margin-top:2rem;\n    }\n    .buttons{\n      margin: 0;\n      max-width: 400px;\n    }\n\n  }\n  footer{\n    position: relative;\n    a{\n      padding: 0.5rem\n    }\n  }\n}\n@media  (max-width: 500px) {\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Config Noti                        Toast                                                                                                    Name                                                                                        Body                                                                                                                                                                    Title Max Length                                                                                                        Body Max Length                                                                                                                                                Timeout                                                                                                        Backdrop                                                                                                                                                                    Select Notification Position                                                                                    {{position}}                                                                                                                            Show Progress Bar                    Close on click                    Pause on hover                    New items on top                    Filter duplicates                                                                                            Max number of Toastrs on Screen                                                                                        Max number of Toastrs per Position                                                                                                Select theme                                                                        {{theme}}                                                                                                                            Success                                        Info                                        Error                                        Warning                                                        Async                                        Confirm                                        Prompt                                                        HTML                                                        Clear all                                    Documentation                Compodoc                GitHub                NPM                Apache 2.0 ©        ccpatrut    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nSnotifireService\n\nSnotifireService\n\nAppModule -->\n\nSnotifireService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnotifireService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxSnotifireModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {\n  NgxSnotifireModule,\n  SnotifireService,\n  ToastDefaults,\n} from 'ngx-snotifire';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NgxSnotifireModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatIconModule,\n    HttpClientModule,\n  ],\n  providers: [\n    { provide: 'snotifireConfig', useValue: ToastDefaults },\n    SnotifireService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                notifire-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotifireService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotifireService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         SnotifireToastModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:24\n                            \n                        \n                \n                    \n                        Get buttons Array\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts:31\n                        \n                    \n\n\n            \n                \n                        remove toast\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { SnotifireToastModel } from '../toast/notifire-toast.model';\nimport { SnotifireService } from '../../services';\n\n@Component({\n  selector: 'notifire-button',\n  templateUrl: './buttons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n/**\n * Buttons component\n */\nexport class ButtonsComponent {\n  /**\n   * Get buttons Array\n   */\n  @Input() toast!: SnotifireToastModel;\n\n  constructor(private readonly service: SnotifireService) {}\n\n  /**\n   * remove toast\n   */\n  remove() {\n    this.service.remove(this.toast.id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{ button.text }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ button.text }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonsConfig.html":{"url":"interfaces/ButtonsConfig.html","title":"interface - ButtonsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bold\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Action which will be called after buttons click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bold:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should buttons text be bold.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Button text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SnotifireToastModel } from '../toast/notifire-toast.model';\n\nexport interface ButtonsConfig {\n  /**\n   * Button text\n   */\n  text: string;\n\n  /**\n   * Should buttons text be bold.\n   */\n  bold?: boolean;\n\n  /**\n   * Action which will be called after buttons click\n   * @param text? string\n   * @returns void\n   */\n  action?: (toast: SnotifireToastModel) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionalConfig.html":{"url":"interfaces/FunctionalConfig.html","title":"interface - FunctionalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FunctionalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                        \n                                            boydMaxLength\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            titleMaxLengt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boydMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        boydMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLengt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLengt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false,\n})\n/**\n * Extract object keys pipe\n */\nexport class KeysPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return value;\n    }\n    return Object.keys(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxSnotifireComponent.html":{"url":"components/NgxSnotifireComponent.html","title":"component - NgxSnotifireComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgxSnotifireComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotifire\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./ngx-snotifire.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backdrop\n                            \n                            \n                                blockSizeA\n                            \n                            \n                                blockSizeB\n                            \n                            \n                                dockSizeA\n                            \n                            \n                                dockSizeB\n                            \n                            \n                                emitter\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                    Readonly\n                                unsubscribe$\n                            \n                            \n                                withBackdrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNotificationArray\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                splitToasts\n                            \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotifireService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotifireService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNotificationArray\n                        \n                    \n                \n            \n            \n                \ngetNotificationArray(notifications: SnotifireNotifications, position: SnotificationPositionType)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notifications\n                                            \n                                                            SnotifireNotifications\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                            SnotificationPositionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitToasts\n                        \n                    \n                \n            \n            \n                \nsplitToasts(toasts: SnotifireToastModel[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Split toasts toasts into different objects\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toasts\n                                            \n                                                            SnotifireToastModel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    notifire-toast[]\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SnotifireNotifications\n\n                        \n                            \n                                SnotifyNotifications\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateChanged\n                        \n                    \n                \n            \n            \n                \nstateChanged(event: SnotifireEventType)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Changes the backdrop opacity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            SnotifireEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    NotificationEventType\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:48\n                        \n                    \n\n            \n                \n                    Backdrop Opacity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:40\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:44\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxAtPosition)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:32\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dockSizeB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:36\n                        \n                    \n\n            \n                \n                    Helper for slice pipe (maxOnScreen)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:28\n                        \n                    \n\n            \n                \n                    Toasts emitter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireNotifications\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:24\n                        \n                    \n\n            \n                \n                    Toasts array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireToastModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts:52\n                        \n                    \n\n            \n                \n                    How many toasts with backdrop in current queue\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotificationPositionType } from '../../models';\nimport { SnotifireNotifications } from '../../models/snotifire-notifications.interface';\nimport { SnotifireToastModel } from '../toast/notifire-toast.model';\nimport { SnotifireService } from '../../services';\n\n@Component({\n  selector: 'ngx-snotifire',\n  templateUrl: './ngx-snotifire.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxSnotifireComponent implements OnInit, OnDestroy, AfterViewInit {\n  private readonly unsubscribe$ = new Subject();\n  /**\n   * Toasts array\n   */\n  notifications!: SnotifireNotifications;\n  /**\n   * Toasts emitter\n   */\n  emitter!: Subscription;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxOnScreen)\n   */\n  dockSizeB!: number | undefined;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeA!: number;\n  /**\n   * Helper for slice pipe (maxAtPosition)\n   */\n  blockSizeB!: number | undefined;\n  /**\n   * Backdrop Opacity\n   */\n  backdrop: number | undefined = -1;\n  /**\n   * How many toasts with backdrop in current queue\n   */\n  withBackdrop: SnotifireToastModel[] = [];\n\n  constructor(readonly service: SnotifireService) {}\n  ngAfterViewInit(): void {}\n\n  ngOnInit(): void {\n    this.service.emitter\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toasts: SnotifireToastModel[]) => {\n        if (\n          this.service.defaultConfig &&\n          this.service.defaultConfig.global &&\n          this.service.defaultConfig.global.newOnTop\n        ) {\n          this.dockSizeA = this.service.defaultConfig.global.maxOnScreen\n            ? -this.service.defaultConfig.global.maxOnScreen\n            : 6;\n          this.dockSizeB = undefined;\n          this.blockSizeA = this.service.defaultConfig.global.maxAtPosition\n            ? -this.service.defaultConfig.global.maxAtPosition\n            : 4;\n          this.blockSizeB = undefined;\n          this.withBackdrop = toasts.filter(\n            (toast) =>\n              toast.config &&\n              toast.config.backdrop &&\n              toast.config.backdrop >= 0\n          );\n        } else {\n          this.dockSizeA = 0;\n          this.dockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxOnScreen;\n          this.blockSizeA = 0;\n          this.blockSizeB =\n            this.service.defaultConfig.global &&\n            this.service.defaultConfig.global.maxAtPosition;\n          this.withBackdrop = toasts\n            .filter(\n              (toast) =>\n                toast.config &&\n                toast.config.backdrop &&\n                toast.config.backdrop >= 0\n            )\n            .reverse();\n        }\n        this.notifications = this.splitToasts(\n          toasts.slice(this.dockSizeA, this.dockSizeB)\n        );\n        this.stateChanged(SnotifireEventType.MOUNTED);\n      });\n  }\n\n  /**\n   * Split toasts toasts into different objects\n   * @param toasts notifire-toast[]\n   * @returns SnotifyNotifications\n   */\n  splitToasts(toasts: SnotifireToastModel[]): SnotifireNotifications {\n    const result: SnotifireNotifications = {};\n\n    for (const property in SnotificationPositionType) {\n      if (SnotificationPositionType.hasOwnProperty(property)) {\n        result[\n          SnotificationPositionType[\n            property as keyof typeof SnotificationPositionType\n          ]\n        ] = [];\n      }\n    }\n\n    toasts.forEach((toast: SnotifireToastModel) => {\n      if (toast.config.position) {\n        const keyIndex = Object.keys(SnotificationPositionType).indexOf(\n          toast.config.position\n        );\n        const searchedString = Object.values(SnotificationPositionType)[\n          keyIndex\n        ];\n        result[searchedString]?.push(toast);\n      }\n    });\n    return result;\n  }\n\n  getNotificationArray(\n    notifications: SnotifireNotifications,\n    position: SnotificationPositionType\n  ): SnotifireToastModel[] | undefined {\n    return notifications[position];\n  }\n\n  /**\n   * Changes the backdrop opacity\n   * @param event NotificationEventType\n   */\n  stateChanged(event: SnotifireEventType) {\n    if (!this.withBackdrop.length) {\n      if (this.backdrop && this.backdrop >= 0) {\n        this.backdrop = -1;\n      }\n      return;\n    }\n    switch (event) {\n      case 'mounted':\n        if (this.backdrop && this.backdrop \n    \n\n    \n        = 0\"\n    [style.opacity]=\"backdrop\"\n>\n\n\n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '= 0\"    [style.opacity]=\"backdrop\">        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxSnotifireComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxSnotifireModule.html":{"url":"modules/NgxSnotifireModule.html","title":"module - NgxSnotifireModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxSnotifireModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsComponent\n                        \n                        \n                            KeysPipe\n                        \n                        \n                            NgxSnotifireComponent\n                        \n                        \n                            PromptComponent\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TruncatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxSnotifireComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/ngx-snotifire.module.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ButtonsComponent,\n  NgxSnotifireComponent,\n  PromptComponent,\n  ToastComponent,\n} from './components';\nimport { KeysPipe, TruncatePipe } from './pipes';\nimport { SnotifireService } from './services';\n\n@NgModule({\n  declarations: [\n    PromptComponent,\n    ToastComponent,\n    ButtonsComponent,\n    TruncatePipe,\n    KeysPipe,\n    NgxSnotifireComponent,\n  ],\n  imports: [CommonModule],\n  exports: [NgxSnotifireComponent],\n})\nexport class NgxSnotifireModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSnotifireModule,\n      providers: [SnotifireService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationConfig.html":{"url":"interfaces/NotificationConfig.html","title":"interface - NotificationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                        \n                                            maxOnScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationFormValue.html":{"url":"interfaces/NotificationFormValue.html","title":"interface - NotificationFormValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationFormValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            toastData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toastData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toastData:         ToastData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptComponent.html":{"url":"components/PromptComponent.html","title":"component - PromptComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-snotify-prompt\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./prompt.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputType\n                            \n                            \n                                isPromptFocused\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         SnotifireToastModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:22\n                            \n                        \n                \n                    \n                        Get PROMPT placeholder\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue($event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inputType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SnotifireEventType.INPUT\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPromptFocused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts:26\n                        \n                    \n\n            \n                \n                    Is PROMPT focused\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { SnotifireEventType } from '../../models';\nimport { SnotifireToastModel } from '../toast/notifire-toast.model';\n\n@Component({\n  selector: 'ngx-snotify-prompt',\n  templateUrl: './prompt.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PromptComponent {\n  inputType = SnotifireEventType.INPUT;\n  /**\n   * Get PROMPT placeholder\n   */\n  @Input() toast!: SnotifireToastModel;\n  /**\n   * Is PROMPT focused\n   */\n  isPromptFocused = false;\n\n  getValue($event: any): string {\n    return $event.target.value;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            {{ toast.config.placeholder | truncate }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ toast.config.placeholder | truncate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PromptComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireAnimate.html":{"url":"interfaces/SnotifireAnimate.html","title":"interface - SnotifireAnimate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireAnimate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation params\nIf you want more animations, you can include animate.css or write animations yourself in your styles\nThen you'll need to share this styles with snotify component [ng-snotify] component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enter\n                                        \n                                \n                                \n                                        \n                                            exit\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    In animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Out animation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Animation time in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SnotifireAnimate {\n  /**\n   * In animation\n   */\n  enter: string;\n  /**\n   * Out animation\n   */\n  exit: string;\n  /**\n   * Animation time in ms\n   */\n  time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireConfig.html":{"url":"interfaces/SnotifireConfig.html","title":"interface - SnotifireConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            animation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            backdrop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            buttons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closeOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pauseOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showProgressBar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            titleMaxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animation:         SnotifireAnimate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireAnimate\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Animation config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Backdrop opacity.\n\nRange: 0.0 - 1.0.\nDisabled: -1\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast body maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttons:         ButtonsConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonsConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Buttons config.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the notification should dissapear on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     string | SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html string witch overrides toast content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Activate custom icon.\nYou should provide full tag, e.g.\nExample :Example :\n    \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom icon class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the timeout countdown should pause on hober\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder for Prompt toast\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         SnotificationPositionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotificationPositionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toasts position on screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable/Disable progress bar.\nDisabled if timeout is 0.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification timeout in milliseconds.\nDisable timeout = 0\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleMaxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleMaxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Toast title maximum length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnotifireType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of toast, affects toast style.\nIt's not recommended to change it.\nDepends on toast type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { ButtonsConfig } from '../components/buttons/buttons-config.interface';\nimport { SnotifireAnimate } from './snotifire-animate.interface';\nimport { SnotificationPositionType } from './snotifire-position.type';\nimport { SnotifireType } from './snotifire.type';\n\nexport interface SnotifireConfig {\n  /**\n   * Notification timeout in milliseconds.\n   * Disable timeout = 0\n   */\n  timeout?: number;\n\n  /**\n   * Enable/Disable progress bar.\n   * Disabled if timeout is 0.\n   */\n  showProgressBar?: boolean;\n\n  /**\n   * Type of toast, affects toast style.\n   * It's not recommended to change it.\n   * Depends on toast type.\n   */\n  type?: SnotifireType;\n\n  /**\n   * If the notification should dissapear on click\n   */\n  closeOnClick?: boolean;\n\n  /**\n   * If the timeout countdown should pause on hober\n   */\n  pauseOnHover?: boolean;\n\n  /**\n   * Buttons config.\n   */\n  buttons?: ButtonsConfig[];\n\n  /**\n   * Placeholder for Prompt toast\n   */\n  placeholder?: string;\n  /**\n   * Toast title maximum length\n   */\n  titleMaxLength?: number;\n  /**\n   * Toast body maximum length\n   */\n  bodyMaxLength?: number;\n  /**\n   * Activate custom icon.\n   * You should provide full tag, e.g.\n   * ```html\n   * \n   * ```\n   * ```html\n   * \n   *     \n   * \n   * ```\n   */\n  icon?: string;\n\n  /**\n   * Custom icon class.\n   */\n  iconClass?: string;\n\n  /**\n   * Animation config\n   */\n  animation?: SnotifireAnimate;\n  /**\n   * Html string witch overrides toast content\n   */\n  html?: string | SafeHtml;\n  /**\n   * Toasts position on screen\n   */\n  position?: SnotificationPositionType;\n\n  /**\n   * Backdrop opacity.\n   * * **Range:** `0.0 - 1.0`.\n   * * **Disabled:** `-1`\n   */\n  backdrop?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireDefaults.html":{"url":"interfaces/SnotifireDefaults.html","title":"interface - SnotifireDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Global configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            global\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            snotifireConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        global\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global:         SnotifireGlobalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireGlobalConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snotifireConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snotifireConfig:         SnotifireConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SnotifireGlobalConfig } from './global-config.interface';\nimport { SnotifireConfig } from '../models/snotifire-config.interface';\n\n/**\n * Global configuration object\n */\nexport interface SnotifireDefaults {\n  global?: SnotifireGlobalConfig;\n  snotifireConfig?: SnotifireConfig;\n  type?: {\n    [key: string]: SnotifireConfig;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireGlobalConfig.html":{"url":"interfaces/SnotifireGlobalConfig.html","title":"interface - SnotifireGlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireGlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast dock configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterDuplicates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAtPosition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxOnScreen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newOnTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When enabled duplicated notification are filtered out.\nDuplicates are detected when they have the same title, body and type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAtPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAtPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items at position.\nSame as maxOnScreen, but affects only current toast position (like rightBottom)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxOnScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxOnScreen:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max toast items on screen.\n\nFor example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\nWith this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should new items come from top or bottom side.\n\nThis option created for styling purposes.\nFor example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SnotifireGlobalConfig {\n  /**\n   * Max toast items on screen.\n   *\n   * > For example you want to display 3 toasts max at the time. But for some purposes your system calls it 10 times.\n   * >\n   * > With this option, 3 toast will be shown. And after each of it will disappear, new toast from the queue will be shown.\n   */\n  maxOnScreen?: number;\n  /**\n   * Max toast items at position.\n   *\n   * Same as maxOnScreen, but affects only current toast position (like rightBottom)\n   */\n  maxAtPosition?: number;\n  /**\n   * Should new items come from top or bottom side.\n   *\n   * > This option created for styling purposes.\n   * >\n   * > For example, if your toast position is TOP-RIGHT. Its not very nice, when items comes from top and pulls down all other toasts\n   */\n  newOnTop?: boolean;\n\n  /**\n   * When enabled duplicated notification are filtered out.\n   *\n   * Duplicates are detected when they have the same title, body and type.\n   *\n   */\n  filterDuplicates?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnotifireModel.html":{"url":"classes/SnotifireModel.html","title":"class - SnotifireModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnotifireModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                body\n                            \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                            \n                                    Public\n                                    Optional\n                                html\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type?: SnotifireType, title?: string, body?: string, config?: SnotifireConfig, html?: string | SafeHtml)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        SnotifireType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        html\n                                                  \n                                                        \n                                                                    string | SafeHtml\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:15\n                        \n                    \n\n            \n                \n                    Notification message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:19\n                        \n                    \n\n            \n                \n                    Config object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | SafeHtml\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:23\n                        \n                    \n\n            \n                \n                    Html content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:11\n                        \n                    \n\n            \n                \n                    Notification Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireType\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/models/snotifire.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SafeHtml } from '@angular/platform-browser';\nimport { SnotifireConfig } from './snotifire-config.interface';\nimport { SnotifireType } from './snotifire.type';\n\nexport class SnotifireModel {\n  constructor(\n    public type?: SnotifireType,\n    /**\n     * Notification Title\n     */\n    public title?: string,\n    /**\n     * Notification message\n     */\n    public body?: string,\n    /**\n     * Config object\n     */\n    public config?: SnotifireConfig,\n    /**\n     * Html content\n     */\n    public html?: string | SafeHtml\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnotifireNotifications.html":{"url":"interfaces/SnotifireNotifications.html","title":"interface - SnotifireNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnotifireNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            centerBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            centerTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leftTop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightBottom\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightCenter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rightTop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        centerBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerBottom:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerCenter:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        centerTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        centerTop:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftBottom:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftCenter:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leftTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftTop:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightBottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightBottom:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightCenter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightCenter:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightTop:         SnotifireToastModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnotifireToastModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SnotifireToastModel } from '../components/toast/notifire-toast.model';\n\nexport interface SnotifireNotifications {\n  leftTop?: SnotifireToastModel[];\n  leftCenter?: SnotifireToastModel[];\n  leftBottom?: SnotifireToastModel[];\n\n  rightTop?: SnotifireToastModel[];\n  rightCenter?: SnotifireToastModel[];\n  rightBottom?: SnotifireToastModel[];\n\n  centerTop?: SnotifireToastModel[];\n  centerCenter?: SnotifireToastModel[];\n  centerBottom?: SnotifireToastModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnotifireToastModel.html":{"url":"classes/SnotifireToastModel.html","title":"class - SnotifireToastModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnotifireToastModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Toast main model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                body\n                            \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                eventsHolder\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                title\n                            \n                            \n                                valid\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                            \n                                on\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, title: string, body: string, config: SnotifireConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SnotifireConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnotifireConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:13\n                        \n                    \n\n            \n                \n                    Emits NotifireEventType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventsHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:18\n                        \n                    \n\n            \n                \n                    Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:28\n                        \n                    \n\n            \n                \n                    Toast validator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:23\n                        \n                    \n\n            \n                \n                    Toast prompt value\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(toast: SnotifireToastModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:67\n                        \n                    \n\n\n            \n                \n                        Tests if a toast equals this toast.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            SnotifireToastModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    notifire-toast\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean true then equals else false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n            \n                \non(event: SnotifireEventType, action: (undefined) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts:51\n                        \n                    \n\n\n            \n                \n                        Subscribe to toast events\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            SnotifireEventType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    NotificationEventType\n\n                                            \n                                        \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    (toast: this) => void\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Subject, Subscription } from 'rxjs';\nimport { SnotifireConfig } from '../../models/snotifire-config.interface';\nimport { SnotifireEventType } from '../../models/snotifire-event.type';\nimport { SnotifireType } from '../../models/snotifire.type';\n\n/**\n * Toast main model\n */\nexport class SnotifireToastModel {\n  /**\n   * Emits NotifireEventType\n   */\n  readonly eventEmitter = new Subject();\n\n  /**\n   * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\n   */\n  private eventsHolder: Subscription[] = [];\n\n  /**\n   * Toast prompt value\n   */\n  value?: string;\n\n  /**\n   * Toast validator\n   */\n  valid: boolean = true;\n\n  constructor(\n    public readonly id: number,\n    public readonly title: string,\n    public readonly body: string,\n    public readonly config: SnotifireConfig\n  ) {\n    if (this.config && this.config.type === SnotifireType.PROMPT) {\n      this.value = '';\n    }\n    this.on(SnotifireEventType.HIDDEN, () => {\n      this.eventsHolder.forEach((subscription: Subscription) => {\n        subscription.unsubscribe();\n      });\n    });\n  }\n  /**\n   * Subscribe to toast events\n   * @returns this\n   * @param event NotificationEventType\n   * @param action (toast: this) => void\n   */\n  on(event: SnotifireEventType, action: (toast: this) => void): this {\n    this.eventsHolder.push(\n      this.eventEmitter.subscribe((e: SnotifireEventType) => {\n        if (e === event) {\n          action(this);\n        }\n      })\n    );\n    return this;\n  }\n\n  /**\n   * Tests if a toast equals this toast.\n   * @returns boolean true then equals else false.\n   * @param toast notifire-toast\n   */\n  equals(toast: SnotifireToastModel): boolean {\n    return this.config && toast.config\n      ? this.body === toast.body &&\n          this.title === toast.title &&\n          this.config.type === toast.config.type\n      : this.body === toast.body && this.title === toast.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationFrame\n                            \n                            \n                                state\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initToast\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onExitTransitionEnd\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                onRemove\n                            \n                            \n                                startTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnotifireService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnotifireService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        toast\n                    \n                \n                \n                    \n                        Type :         SnotifireToastModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:26\n                            \n                        \n                \n                    \n                        Get toast from notifications array\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initToast\n                        \n                    \n                \n            \n            \n                \ninitToast()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Initialize base toast config\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:209\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Trigger OnClick lifecycle\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onExitTransitionEnd\n                        \n                    \n                \n            \n            \n                \nonExitTransitionEnd()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Remove toast completely after animation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Trigger onHoverEnter lifecycle\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Trigger onHoverLeave lifecycle\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemove\n                        \n                    \n                \n            \n            \n                \nonRemove()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Trigger beforeDestroy lifecycle. Removes toast\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTimeout\n                        \n                    \n                \n            \n            \n                \nstartTimeout(startTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Start progress bar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    number\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:32\n                        \n                    \n\n            \n                \n                    requestAnimationFrame id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:37\n                        \n                    \n\n            \n                \n                    Toast state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/components/toast/toast.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnotifireEventType, SnotifireType } from '../../models';\nimport { SnotifireToastModel } from './notifire-toast.model';\nimport { SnotifireService } from '../../services';\n\n@Component({\n  selector: 'ngx-toast',\n  templateUrl: './toast.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  /**\n   * Get toast from notifications array\n   */\n  @Input() toast!: SnotifireToastModel;\n  @Output() stateChanged = new EventEmitter();\n\n  /**\n   * requestAnimationFrame id\n   */\n  animationFrame!: number;\n\n  /**\n   * Toast state\n   */\n  state = {\n    paused: false,\n    progress: 0,\n    animation: '',\n    isDestroying: false,\n    promptType: SnotifireType.PROMPT,\n  };\n\n  constructor(private readonly service: SnotifireService) {}\n\n  ngOnInit(): void {\n    this.service.toastChanged\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((toast: SnotifireToastModel) => {\n        if (this.toast.id === toast.id) {\n          this.initToast();\n        }\n      });\n\n    this.service.toastDeleted\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((id) => {\n        if (this.toast.id === id) {\n          this.onRemove();\n        }\n      });\n    if (this.toast && this.toast.config && !this.toast.config.timeout) {\n      this.toast.config.showProgressBar = false;\n    }\n\n    this.toast.eventEmitter.next(SnotifireEventType.MOUNTED);\n    this.state.animation = 'notifire-toast--in';\n  }\n  ngAfterContentInit() {\n    if (\n      this.service.defaultConfig.snotifireConfig &&\n      this.service.defaultConfig.snotifireConfig.animation\n    ) {\n      setTimeout(() => {\n        this.stateChanged.emit(SnotifireEventType.BEFORE_SHOW);\n        this.toast.eventEmitter.next(SnotifireEventType.BEFORE_SHOW);\n        this.state.animation =\n          this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.enter\n            ? this.toast.config.animation.enter\n            : '';\n      }, this.service.defaultConfig.snotifireConfig.animation.time / 5); // time to show toast push animation (notifire-toast--in)\n    }\n  }\n  /**\n   * Trigger beforeDestroy lifecycle. Removes toast\n   */\n  onRemove() {\n    this.state.isDestroying = true;\n    this.toast.eventEmitter.next(SnotifireEventType.BEFORE_HIDE);\n    this.stateChanged.emit(SnotifireEventType.BEFORE_HIDE);\n    this.state.animation =\n      (this.toast.config &&\n        this.toast.config.animation &&\n        this.toast.config.animation.exit) ||\n      '';\n    setTimeout(() => {\n      this.stateChanged.emit(SnotifireEventType.HIDDEN);\n      this.state.animation = 'notifire-toast--out';\n      this.toast.eventEmitter.next(SnotifireEventType.HIDDEN);\n      setTimeout(\n        () => this.service.remove(this.toast.id, true),\n        this.toast.config &&\n          this.toast.config.animation &&\n          this.toast.config.animation.time / 2\n      );\n    }, this.toast.config && this.toast.config.animation && this.toast.config.animation.time / 2);\n  }\n  /**\n   * Trigger OnClick lifecycle\n   */\n  onClick() {\n    this.toast.eventEmitter.next(SnotifireEventType.CLICK);\n    if (this.toast && this.toast.config && this.toast.config.closeOnClick) {\n      this.service.remove(this.toast.id);\n    }\n  }\n  /**\n   * Trigger onHoverEnter lifecycle\n   */\n  onMouseEnter() {\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_ENTER);\n    if (this.toast && this.toast.config && this.toast.config.pauseOnHover) {\n      this.state.paused = true;\n    }\n  }\n\n  /**\n   * Trigger onHoverLeave lifecycle\n   */\n  onMouseLeave() {\n    if (\n      this.toast &&\n      this.toast.config &&\n      this.toast.config.pauseOnHover &&\n      this.toast.config.timeout\n    ) {\n      this.state.paused = false;\n      this.startTimeout(this.toast.config.timeout * this.state.progress);\n    }\n    this.toast.eventEmitter.next(SnotifireEventType.MOUSE_LEAVE);\n  }\n  /**\n   * Remove toast completely after animation\n   */\n  onExitTransitionEnd() {\n    if (this.state.isDestroying) {\n      return;\n    }\n    this.initToast();\n    this.toast.eventEmitter.next(SnotifireEventType.SHOWN);\n  }\n\n  /*\n   Common\n   */\n\n  /**\n   * Initialize base toast config\n   *\n   */\n  initToast(): void {\n    if (\n      (this.toast && this.toast.config && this.toast.config.timeout\n        ? this.toast.config.timeout\n        : 0) > 0\n    ) {\n      this.startTimeout(0);\n    }\n  }\n  /**\n   * Start progress bar\n   * @param startTime number\n   */\n  startTimeout(startTime: number = 0) {\n    const start = performance.now();\n    const calculate = () => {\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        const runtime = timestamp + startTime - start;\n        const progress = Math.min(\n          runtime /\n            (this.toast && this.toast.config && this.toast.config.timeout\n              ? this.toast.config.timeout\n              : 1),\n          1\n        );\n        if (this.state.paused) {\n          cancelAnimationFrame(this.animationFrame);\n        } else if (\n          runtime \n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                {{ toast.title | truncate: toast.config.titleMaxLength }}\n            \n            \n                {{ toast.body | truncate: toast.config.bodyMaxLength }}\n            \n            \n            \n            \n            \n                \n            \n        \n        \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ toast.title | truncate: toast.config.titleMaxLength }}                                        {{ toast.body | truncate: toast.config.bodyMaxLength }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'notifire-button'},{'name': 'NgxSnotifireComponent', 'selector': 'ngx-snotifire'},{'name': 'PromptComponent', 'selector': 'ngx-snotify-prompt'},{'name': 'ToastComponent', 'selector': 'ngx-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastData.html":{"url":"interfaces/ToastData.html","title":"interface - ToastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, ...args: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DEFAULT_TRAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '...'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\n/**\n * Truncate toast text pipe\n */\nexport class TruncatePipe implements PipeTransform {\n  private readonly DEFAULT_LIMIT = 40;\n  private readonly DEFAULT_TRAIL = '...';\n  transform(value: string, ...args: Array): any {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : this.DEFAULT_LIMIT;\n\n    return value.length > limit\n      ? value.substring(0, limit) +\n          (args.length > 1 ? args[1] : this.DEFAULT_TRAIL)\n      : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualConfig.html":{"url":"interfaces/VisualConfig.html","title":"interface - VisualConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCloseOnClick\n                                        \n                                \n                                \n                                        \n                                            isFilterDuplicates\n                                        \n                                \n                                \n                                        \n                                            isNewItemsOnTop\n                                        \n                                \n                                \n                                        \n                                            isPauseOnHover\n                                        \n                                \n                                \n                                        \n                                            isShowProgressBar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCloseOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCloseOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFilterDuplicates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFilterDuplicates:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewItemsOnTop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNewItemsOnTop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPauseOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPauseOnHover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isShowProgressBar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isShowProgressBar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  SnotifireService,\n  SnotificationPositionType,\n  SnotifireConfig,\n  SnotifireEventType,\n  SnotifireModel,\n  ToastDefaults,\n} from 'ngx-snotifire';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  snotifireForm: FormGroup;\n  positions: string[];\n  themes = ['material', 'dark', 'simple'];\n\n  constructor(\n    protected readonly iconRegistry: MatIconRegistry,\n    protected readonly sanitizer: DomSanitizer,\n    readonly snotifireService: SnotifireService,\n    private readonly fb: FormBuilder\n  ) {\n    this.positions = Object.keys(SnotificationPositionType);\n    this.snotifireForm = this.fb.group({\n      toastData: this.fb.group({\n        title: ['Notification title!', [Validators.required]],\n        body: ['Lorem ipsum dolor sit amet!', [Validators.required]],\n      }),\n      toastFunctionalConfig: this.fb.group({\n        titleMaxLength: ['15', [Validators.required]],\n        boydMaxLength: ['78', [Validators.required]],\n        timeout: ['3000', [Validators.required]],\n        backdrop: ['-1', [Validators.required]],\n      }),\n      toastVisualConfig: this.fb.group({\n        isShowProgressBar: [true],\n        isCloseOnClick: [true],\n        isPauseOnHover: [true],\n        isNewItemsOnTop: [true],\n        isFilterDuplicates: [false],\n      }),\n      position: [this.positions[3]],\n      notificationConf: this.fb.group({\n        maxOnScreen: [6, [Validators.required]],\n        maxAtPosition: [6, [Validators.required]],\n      }),\n      toastStyle: [this.themes[0], [Validators.required]],\n    });\n    this.addIcon('icon-fire', 'fire');\n  }\n  ngOnInit(): void {}\n\n  protected addIcon(iconName: string, location: string): void {\n    this.iconRegistry.addSvgIcon(\n      iconName,\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.getSvg(location))\n    );\n  }\n\n  get positionFormControl(): FormControl | null {\n    return this.snotifireForm.get('position') as FormControl;\n  }\n\n  get themeControl(): FormControl | null {\n    return this.snotifireForm.get('toastStyle') as FormControl;\n  }\n\n  getConfig(): SnotifireConfig {\n    this.snotifireService.setDefaults({\n      global: {\n        newOnTop: this.visualConfig.isNewItemsOnTop,\n        maxAtPosition: this.notificationConfig.maxAtPosition,\n        maxOnScreen: this.notificationConfig.maxOnScreen,\n        // @ts-ignore\n        filterDuplicates: this.visualConfig.isFilterDuplicates,\n      },\n      snotifireConfig: ToastDefaults.snotifireConfig,\n    });\n    return {\n      bodyMaxLength: this.functionalConfig.boydMaxLength,\n      titleMaxLength: this.functionalConfig.titleMaxLengt,\n\n      backdrop: this.functionalConfig.backdrop,\n      position: this.snotifireForm.getRawValue().position,\n      timeout: this.functionalConfig.timeout,\n      showProgressBar: this.visualConfig.isShowProgressBar,\n      closeOnClick: this.visualConfig.isCloseOnClick,\n      pauseOnHover: this.visualConfig.isPauseOnHover,\n    };\n  }\n\n  onSuccess() {\n    this.snotifireService.success(this.toastData.body, this.toastData.title);\n  }\n  onInfo() {\n    this.snotifireService.info(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onError() {\n    this.snotifireService.error(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n  onWarning() {\n    this.snotifireService.warning(\n      this.toastData.body,\n      this.toastData.title,\n      this.getConfig()\n    );\n  }\n\n  onHtml() {\n    const html = `Html Bold Title\n    Html toast content`;\n    this.snotifireService.html(html, this.getConfig());\n  }\n\n  onClear() {\n    this.snotifireService.clear();\n  }\n\n  onAsyncLoading() {\n    const errorAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.error({\n          title: 'Error',\n          body: 'Example. Error 404. Service not found',\n        });\n      }, 2000);\n    });\n\n    const successAction = new Observable((observer) => {\n      setTimeout(() => {\n        observer.next({\n          body: 'Still loading.....',\n        });\n      }, 2000);\n\n      setTimeout(() => {\n        observer.next({\n          title: 'Success',\n          body: 'Example. Data loaded!',\n          config: {\n            closeOnClick: true,\n            timeout: 3000,\n            showProgressBar: true,\n          },\n        });\n        observer.complete();\n      }, 5000);\n    });\n    /*\n      You should pass Promise or Observable of type Snotify to change some data or do some other actions\n      More information how to work with observables:\n      https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/create.md\n     */\n    const { timeout, ...config } = this.getConfig(); // Omit timeout\n    this.snotifireService\n      .async('This will resolve with error', 'Async', errorAction, config)\n      .subscribe();\n    this.snotifireService\n      .async('This will resolve with success', successAction, config)\n      .subscribe();\n    this.snotifireService\n      .async(\n        'Called with promise',\n        'Error async',\n        new Promise((resolve, reject) => {\n          setTimeout(\n            () =>\n              reject({\n                title: 'Error!!!',\n                body: 'We got an example error!',\n                config: {\n                  closeOnClick: true,\n                },\n              }),\n            1000\n          );\n          setTimeout(() => resolve({}), 1500);\n        }),\n        config\n      )\n      .subscribe();\n  }\n\n  onConfirmation() {\n    /*\n    Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService.confirm(this.toastData.body, this.toastData.title, {\n      ...config,\n      buttons: [\n        {\n          text: 'Yes',\n          action: () => console.log('Clicked: Yes'),\n          bold: false,\n        },\n        { text: 'No', action: () => console.log('Clicked: No') },\n        {\n          text: 'Later',\n          action: (toast: any) => {\n            console.log('Clicked: Later');\n            this.snotifireService.remove(toast.id);\n          },\n        },\n        {\n          text: 'Close',\n          action: (toast: any) => {\n            console.log('Clicked: Close');\n            this.snotifireService.remove(toast.id);\n          },\n          bold: true,\n        },\n      ],\n    });\n  }\n\n  onPrompt() {\n    /*\n     Here we pass an buttons array, which contains of 2 element of type SnotifyButton\n     At the action of the first buttons we can get what user entered into input field.\n     At the second we can't get it. But we can remove this toast\n     */\n    const { timeout, closeOnClick, ...config } = this.getConfig(); // Omit props what i don't need\n    this.snotifireService\n      .prompt(this.toastData.body, this.toastData.title, {\n        ...config,\n        buttons: [\n          {\n            text: 'Yes',\n            action: (toast: any) => console.log('Said Yes: ' + toast.value),\n          },\n          {\n            text: 'No',\n            action: (toast: any) => {\n              console.log('Said No: ' + toast.value);\n              this.snotifireService.remove(toast.id);\n            },\n          },\n        ],\n        placeholder: 'Enter \"ng-snotify\" to validate this input', // Max-length = 40\n      })\n      .on(SnotifireEventType.INPUT, (toast) => {\n        console.log(toast.value);\n      });\n  }\n\n  private get functionalConfig(): FunctionalConfig {\n    return this.snotifireForm.getRawValue().toastFunctionalConfig;\n  }\n\n  private get visualConfig(): VisualConfig {\n    return this.snotifireForm.getRawValue().toastVisualConfig;\n  }\n  private get toastData(): ToastData {\n    return this.snotifireForm.getRawValue().toastData;\n  }\n\n  private get notificationConfig(): NotificationConfig {\n    return this.snotifireForm.getRawValue().notificationConf;\n  }\n\n  private getSvg(svg: string): string {\n    return `assets/${svg}.svg`;\n  }\n}\n\nexport interface NotificationFormValue {\n  position: SnotificationPositionType;\n  toastData: ToastData;\n}\ninterface ToastData {\n  title: string;\n  body: string;\n}\ninterface FunctionalConfig {\n  titleMaxLengt: number;\n  boydMaxLength: number;\n  timeout: number;\n  backdrop: number;\n}\ninterface NotificationConfig {\n  maxOnScreen: number;\n  maxAtPosition: number;\n}\n\ninterface VisualConfig {\n  isShowProgressBar: boolean;\n  isCloseOnClick: boolean;\n  isPauseOnHover: boolean;\n  isNewItemsOnTop: boolean;\n  isFilterDuplicates: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nv1.0.0\n\nMigrating from artemsky on angular v14\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons-config.interface.ts\n            \n            interface\n            ButtonsConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/buttons/buttons.component.ts\n            \n            component\n            ButtonsComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/ngx-notifire/ngx-snotifire.component.ts\n            \n            component\n            NgxSnotifireComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/prompt/prompt.component.ts\n            \n            component\n            PromptComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/notifire-toast.model.ts\n            \n            class\n            SnotifireToastModel\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n            \n            function\n            SetToastType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n            \n            function\n            TransformArgument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/defaults.interface.ts\n            \n            interface\n            SnotifireDefaults\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/global-config.interface.ts\n            \n            interface\n            SnotifireGlobalConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n            \n            variable\n            ToastDefaults\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-animate.interface.ts\n            \n            interface\n            SnotifireAnimate\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-config.interface.ts\n            \n            interface\n            SnotifireConfig\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire-notifications.interface.ts\n            \n            interface\n            SnotifireNotifications\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/models/snotifire.model.ts\n            \n            class\n            SnotifireModel\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/services/notification.service.ts\n            \n            injectable\n            SnotifireService\n            \n                84 %\n                (45/53)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            mergeDeep\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-snotifire/src/lib/utils.ts\n            \n            function\n            uuid\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            FunctionalConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            NotificationFormValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            ToastData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            VisualConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.2.12\n        \n            @angular/compiler : ^16.2.12\n        \n            @angular/core : ^16.2.12\n        \n            @angular/forms : ^16.2.12\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^16.2.12\n        \n            @angular/platform-browser-dynamic : ^16.2.12\n        \n            @angular/router : ^16.2.12\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            graceful-fs : ^4.2.10\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SnotificationPositionType   (projects/.../snotifire-position.type.ts)\n                        \n                        \n                            SnotifireEventType   (projects/.../snotifire-event.type.ts)\n                        \n                        \n                            SnotifireType   (projects/.../snotifire.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/models/snotifire-position.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotificationPositionType\n                    \n                \n                        \n                            \n                                 LEFT_TOP\n                            \n                        \n                        \n                            \n                                Value : leftTop\n                            \n                        \n                        \n                            \n                                 LEFT_CENTER\n                            \n                        \n                        \n                            \n                                Value : leftCenter\n                            \n                        \n                        \n                            \n                                 LEFT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : leftBottom\n                            \n                        \n                        \n                            \n                                 RIGHT_TOP\n                            \n                        \n                        \n                            \n                                Value : rightTop\n                            \n                        \n                        \n                            \n                                 RIGHT_CENTER\n                            \n                        \n                        \n                            \n                                Value : rightCenter\n                            \n                        \n                        \n                            \n                                 RIGHT_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : rightBottom\n                            \n                        \n                        \n                            \n                                 CENTER_TOP\n                            \n                        \n                        \n                            \n                                Value : centerTop\n                            \n                        \n                        \n                            \n                                 CENTER_CENTER\n                            \n                        \n                        \n                            \n                                Value : centerCenter\n                            \n                        \n                        \n                            \n                                 CENTER_BOTTOM\n                            \n                        \n                        \n                            \n                                Value : centerBottom\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire-event.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireEventType\n                    \n                \n                        \n                            \n                                 MOUNTED\n                            \n                        \n                        \n                            \n                                Value : mounted\n                            \n                        \n                        \n                            \n                                 BEFORE_SHOW\n                            \n                        \n                        \n                            \n                                Value : beforeShow\n                            \n                        \n                        \n                            \n                                 SHOWN\n                            \n                        \n                        \n                            \n                                Value : shown\n                            \n                        \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 CLICK\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n                        \n                            \n                                 MOUSE_ENTER\n                            \n                        \n                        \n                            \n                                Value : mouseenter\n                            \n                        \n                        \n                            \n                                 MOUSE_LEAVE\n                            \n                        \n                        \n                            \n                                Value : mouseleave\n                            \n                        \n                        \n                            \n                                 BEFORE_HIDE\n                            \n                        \n                        \n                            \n                                Value : beforeHide\n                            \n                        \n                        \n                            \n                                 HIDDEN\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 DESTROYED\n                            \n                        \n                        \n                            \n                                Value : destroyed\n                            \n                        \n            \n        \n\n    projects/ngx-snotifire/src/lib/models/snotifire.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SnotifireType\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 ASYNC\n                            \n                        \n                        \n                            \n                                Value : async\n                            \n                        \n                        \n                            \n                                 CONFIRM\n                            \n                        \n                        \n                            \n                                Value : confirm\n                            \n                        \n                        \n                            \n                                 PROMPT\n                            \n                        \n                        \n                            \n                                Value : prompt\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isObject   (projects/.../utils.ts)\n                        \n                        \n                            mergeDeep   (projects/.../utils.ts)\n                        \n                        \n                            SetToastType   (projects/.../set-toast-type.decorator.ts)\n                        \n                        \n                            TransformArgument   (projects/.../transform-argument.decorator.ts)\n                        \n                        \n                            uuid   (projects/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isObject\n                        \n                    \n                \n            \n            \n                \nisObject(item: any)\n                \n            \n\n\n\n\n            \n                \n                        Simple is object check.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeDeep\n                        \n                    \n                \n            \n            \n                \nmergeDeep(...sources: undefined)\n                \n            \n\n\n\n\n            \n                \n                        Deep merge objects.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sources\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array>\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n            \n                \nuuid()\n                \n            \n\n\n\n\n            \n                \n                        Generates random id\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                number\n\n                            \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/set-toast-type.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SetToastType\n                        \n                    \n                \n            \n            \n                \nSetToastType(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                        Defines toast style depending on method name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any\n\n                                            \n                                        \n                                        \n                                                propertyKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    NotificationType\n\n                                            \n                                        \n                                        \n                                                descriptor\n                                            \n                                                        PropertyDescriptor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    PropertyDescriptor\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/ngx-snotifire/src/lib/decorators/transform-argument.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TransformArgument\n                        \n                    \n                \n            \n            \n                \nTransformArgument(target: any, propertyKey: string, descriptor: PropertyDescriptor)\n                \n            \n\n\n\n\n            \n                \n                        Transform arguments to Snotify object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any\n\n                                            \n                                        \n                                        \n                                                propertyKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    SnotifyTypeType\n\n                                            \n                                        \n                                        \n                                                descriptor\n                                            \n                                                        PropertyDescriptor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    PropertyDescriptor\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxSnotifire\nDemo project at https://ccpatrut.github.io/ngx-snotifire/\nFeatures\n\n8 types of toast notifications\nAbility to create toasts in different positions at the same time\nMany config options (icons, backdrop, timeout, position and much more)\nCustom fully controlled styling including animations\nRepository includes 3 different styles. So you can use on of them, or create your own\nCallbacks\nCustom HTML\n\nInstalation\nNPM\nnpm install ngx-snotifire\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.Copyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxSnotifireModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_NgxSnotifireModule\n\n\n\ncluster_NgxSnotifireModule_declarations\n\n\n\ncluster_NgxSnotifireModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNgxSnotifireModule\n\nNgxSnotifireModule\n\nAppModule -->\n\nNgxSnotifireModule->AppModule\n\n\n\n\n\nNgxSnotifireComponent \n\nNgxSnotifireComponent \n\nNgxSnotifireComponent  -->\n\nNgxSnotifireModule->NgxSnotifireComponent \n\n\n\n\n\nSnotifireService\n\nSnotifireService\n\nAppModule -->\n\nSnotifireService->AppModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nNgxSnotifireModule -->\n\nButtonsComponent->NgxSnotifireModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nNgxSnotifireModule -->\n\nKeysPipe->NgxSnotifireModule\n\n\n\n\n\nNgxSnotifireComponent\n\nNgxSnotifireComponent\n\nNgxSnotifireModule -->\n\nNgxSnotifireComponent->NgxSnotifireModule\n\n\n\n\n\nPromptComponent\n\nPromptComponent\n\nNgxSnotifireModule -->\n\nPromptComponent->NgxSnotifireModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nNgxSnotifireModule -->\n\nToastComponent->NgxSnotifireModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nNgxSnotifireModule -->\n\nTruncatePipe->NgxSnotifireModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.1-beta\n        \n            License : Apache-2.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            ToastDefaults   (projects/.../toast-defaults.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-snotifire/src/lib/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-snotifire/src/lib/defaults/toast-defaults.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ToastDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  global: {\n    newOnTop: true,\n    maxOnScreen: 8,\n    maxAtPosition: 8,\n    filterDuplicates: false,\n  },\n  snotifireConfig: {\n    type: SnotifireType.INFO,\n    showProgressBar: true,\n    timeout: 5000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    bodyMaxLength: 150,\n    titleMaxLength: 16,\n    backdrop: -1,\n    icon: undefined,\n    iconClass: undefined,\n    html: undefined,\n    position: 'RIGHT_TOP' as SnotificationPositionType,\n    animation: { enter: 'fadeIn', exit: 'fadeOut', time: 400 },\n  },\n  type: {\n    [SnotifireType.PROMPT]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      placeholder: 'Enter answer here...',\n      type: SnotifireType.PROMPT,\n    },\n    [SnotifireType.CONFIRM]: {\n      timeout: 0,\n      closeOnClick: false,\n      buttons: [\n        { text: 'Ok', action: null, bold: true },\n        { text: 'Cancel', action: null, bold: false },\n      ],\n      type: SnotifireType.CONFIRM,\n    },\n    [SnotifireType.SUCCESS]: {\n      type: SnotifireType.SUCCESS,\n    },\n    [SnotifireType.ERROR]: {\n      type: SnotifireType.ERROR,\n    },\n    [SnotifireType.WARNING]: {\n      type: SnotifireType.WARNING,\n    },\n    [SnotifireType.INFO]: {\n      type: SnotifireType.INFO,\n    },\n    [SnotifireType.ASYNC]: {\n      pauseOnHover: false,\n      closeOnClick: false,\n      timeout: 0,\n      showProgressBar: false,\n      type: SnotifireType.ASYNC,\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Snotify default configuration object\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
